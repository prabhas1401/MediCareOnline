{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import { useNavigate } from 'react-router-dom';  // Added for navigation\n// import { doctorAPI, appointmentAPI, prescriptionAPI } from '../services/api';\n\n// const DoctorDashboard = () => {\n//   const navigate = useNavigate();  // Added for navigation\n//   const [activeSection, setActiveSection] = useState('profile');\n//   const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n//   const [profile, setProfile] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', qualification: '', experienceYears: '', specialization: '' });\n//   const [appointments, setAppointments] = useState([]);\n//   const [pendingAppointments, setPendingAppointments] = useState([]);\n//   const [patients, setPatients] = useState([]);\n//   const [calendar, setCalendar] = useState([]);\n//   const [prescription, setPrescription] = useState({ diagnosis: '', advice: '', medicines: [] });\n//   const [leave, setLeave] = useState({ date: '' });\n//   // const [reconsults, setReconsults] = useState({ id: '', newRequestedDateTime: '' });\n//   const [reconsults, setReconsults] = useState([]);\n//   const [scheduleReconsultModal, setScheduleReconsultModal] = useState(false);\n//   const [selectedReconsult, setSelectedReconsult] = useState(null);\n//   const [reconsultDateTime, setReconsultDateTime] = useState('');\n//   const [newPatient, setNewPatient] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', gender: '', dateOfBirth: '' });\n//   const [rescheduleModal, setRescheduleModal] = useState(false);\n//   const [selectedAppointment, setSelectedAppointment] = useState(null);\n//   const [newDateTime, setNewDateTime] = useState('');\n//   const [filters, setFilters] = useState({ appointments: 'all', pending: 'all', patients: 'all' });\n//   const [search, setSearch] = useState('');\n//   const [loading, setLoading] = useState(false);\n//   // New state for prescription section\n//   const [selectedAppointmentForPrescription, setSelectedAppointmentForPrescription] = useState(null);\n//   const [newMedicine, setNewMedicine] = useState({ name: '', dosage: '', frequency: '', duration: '', notes: '' });\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const fetchData = async () => {\n//     setLoading(true);\n//     try {\n//       const [a, pend, prof, rec] = await Promise.all([\n//         doctorAPI.getAppointments(),\n//         doctorAPI.getPendingAppointments(),\n//         doctorAPI.getProfile(),\n//         doctorAPI.getReconsults()  // New: Fetch reconsults\n//       ]);\n//       setAppointments(a.data);\n//       setPendingAppointments(pend.data);\n//       setProfile(prof.data);\n//       setReconsults(rec.data);  // New: Set reconsults\n//     } catch (err) {\n//       console.error('Fetch error:', err);\n//       alert('Error fetching data: ' + (err.response?.data?.message || err.message));\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const scheduleReconsult = async () => {\n//     try {\n//       await doctorAPI.scheduleReconsult(selectedReconsult.appointmentId, { newRequestedDateTime: reconsultDateTime });\n//       alert('Reconsult scheduled successfully!');\n//       setScheduleReconsultModal(false);\n//       fetchData();\n//     } catch (err) {\n//       alert('Error scheduling reconsult: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n//   const rescheduleReconsult = async () => {\n//     try {\n//       await doctorAPI.rescheduleReconsult(selectedReconsult.appointmentId, { newRequestedDateTime: reconsultDateTime });\n//       alert('Reconsult rescheduled successfully!');\n//       setScheduleReconsultModal(false);\n//       fetchData();\n//     } catch (err) {\n//       alert('Error rescheduling reconsult: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const updateProfile = async () => {\n//     console.log('Update Profile button clicked');\n//     try {\n//       await doctorAPI.updateProfile(profile);\n//       alert('Profile updated successfully');\n//       fetchData();\n//     } catch (err) {\n//       console.error('Update profile error:', err);\n//       alert('Error updating profile: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const addPrescription = async (id) => {\n//     console.log('Add Prescription button clicked for appointment ID:', id);\n//     if (!prescription.diagnosis || prescription.medicines.length === 0) {\n//       alert('Please enter diagnosis and at least one medicine.');\n//       return;\n//     }\n//     try {\n//       await doctorAPI.addPrescription(id, prescription);\n//       setPrescription({ diagnosis: '', advice: '', medicines: [] });\n//       setSelectedAppointmentForPrescription(null);\n//       alert('Prescription added successfully');\n//       fetchData();\n//     } catch (err) {\n//       console.error('Add prescription error:', err);\n//       alert('Error adding prescription: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const addMedicine = () => {\n//     if (!newMedicine.name || !newMedicine.dosage || !newMedicine.frequency || !newMedicine.duration) {\n//       alert('Please fill in all medicine fields.');\n//       return;\n//     }\n//     setPrescription(prev => ({\n//       ...prev,\n//       medicines: [...prev.medicines, newMedicine]\n//     }));\n//     setNewMedicine({ name: '', dosage: '', frequency: '', duration: '', notes: '' });\n//   };\n\n//   const removeMedicine = (index) => {\n//     setPrescription(prev => ({\n//       ...prev,\n//       medicines: prev.medicines.filter((_, i) => i !== index)\n//     }));\n//   };\n\n//   const addLeave = async () => {\n//     console.log('Add Leave button clicked');\n//     try {\n//       await doctorAPI.addLeave(leave);\n//       setLeave({ date: '' });\n//       fetchData();\n//       alert('Leave added successfully');\n//     } catch (err) {\n//       console.error('Add leave error:', err);\n//       alert('Error adding leave: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const addPatient = async () => {\n//     try {\n//       await doctorAPI.addPatient(newPatient);  // Now uses /doctor/patients\n//       setNewPatient({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', gender: '', dateOfBirth: '' });\n//       fetchData();\n//       alert('Patient added successfully');\n//     } catch (err) {\n//       alert('Error adding patient: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n// // const rescheduleAppointment = async () => {\n// //   try {\n// //     await doctorAPI.rescheduleAppointment(selectedAppointment.appointmentId, { newRequestedDateTime: newDateTime });\n// //     setRescheduleModal(false);\n// //     setNewDateTime('');\n// //     fetchData();\n// //     alert('Appointment rescheduled successfully');\n// //   } catch (err) {\n// //     if (err.response?.status === 401) {\n// //       alert('Session expired. Please log in again.');\n// //       // Redirect to login\n// //     } else {\n// //       alert('Error rescheduling: ' + (err.response?.data?.message || err.message));\n// //     }\n// //   }\n// // };\n// const rescheduleAppointment = async () => {\n//     console.log('Reschedule Confirm button clicked');\n//     try {\n//       // Use calendar API to confirm availability, then update\n//       await doctorAPI.rescheduleAppointment(selectedAppointment.appointmentId, { newRequestedDateTime: newDateTime });\n//       setRescheduleModal(false);\n//       setNewDateTime('');\n//       fetchData();\n//       alert('Appointment rescheduled successfully');\n//     } catch (err) {\n//       console.error('Reschedule error:', err);\n//       alert('Error rescheduling: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const confirmAppointment = async (id) => {\n//     console.log('Confirm Appointment button clicked for ID:', id);\n//     try {\n//       await appointmentAPI.schedule(id, { scheduledDateTime: new Date().toISOString() });  // Example: schedule now\n//       alert('Appointment confirmed successfully');\n//       fetchData();\n//     } catch (err) {\n//       console.error('Confirm appointment error:', err);\n//       alert('Error confirming appointment: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const rejectAppointment = async (id) => {\n//     console.log('Reject Appointment button clicked for ID:', id);\n//     try {\n//       await appointmentAPI.cancel(id);  // Example: cancel as reject\n//       alert('Appointment rejected successfully');\n//       fetchData();\n//     } catch (err) {\n//       console.error('Reject appointment error:', err);\n//       alert('Error rejecting appointment: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const startVisit = async (id) => {\n//     try {\n//       await appointmentAPI.startVisit(id);  // Now uses PUT\n//       const appointment = appointments.find(a => a.appointmentId === id);\n//       if (appointment && appointment.meetingLink) {\n//         window.open(appointment.meetingLink, '_blank');\n//       }\n//       navigate(`/doctor/visit/${id}`);\n//       alert('Visit started successfully');\n//       fetchData();\n//     } catch (err) {\n//       alert('Error starting visit: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const cancelAppointment = async (id) => {\n//     console.log('Cancel Appointment button clicked for ID:', id);\n//     try {\n//       await appointmentAPI.cancel(id);\n//       alert('Appointment cancelled successfully');\n//       fetchData();\n//     } catch (err) {\n//       console.error('Cancel appointment error:', err);\n//       alert('Error cancelling appointment: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const editPatient = (patient) => {\n//     console.log('Edit Patient button clicked for:', patient.fullName);\n//     // Placeholder: Set selected patient and open edit modal\n//     alert('Edit patient (placeholder)');\n//   };\n\n//   const deletePatient = async (id) => {\n//     console.log('Delete Patient button clicked for ID:', id);\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\n//       try {\n//         await doctorAPI.deletePatient(id);  // Assume endpoint exists\n//         alert('Patient deleted successfully');\n//         fetchData();\n//       } catch (err) {\n//         console.error('Delete patient error:', err);\n//         alert('Error deleting patient: ' + (err.response?.data?.message || err.message));\n//       }\n//     }\n//   };\n\n//   const blockPatient = async (id) => {\n//     console.log('Block Patient button clicked for ID:', id);\n//     try {\n//       await doctorAPI.blockPatient(id);  // Assume endpoint exists\n//       alert('Patient blocked successfully');\n//       fetchData();\n//     } catch (err) {\n//       console.error('Block patient error:', err);\n//       alert('Error blocking patient: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const filteredAppointments = appointments.filter(a => {\n//     const today = new Date().toDateString();\n//     const week = new Date();\n//     week.setDate(week.getDate() + 7);\n//     const isToday = new Date(a.scheduledDateTime).toDateString() === today;\n//     const isThisWeek = new Date(a.scheduledDateTime) <= week;\n//     return (filters.appointments === 'all' || (filters.appointments === 'today' && isToday) || (filters.appointments === 'week' && isThisWeek)) &&\n//            a.patient.fullName.toLowerCase().includes(search.toLowerCase());\n//   });\n\n//   // Updated: Safer filtering for pending appointments\n//   const filteredPending = (() => {\n//     const filtered = pendingAppointments.filter(pa => {\n//       if (!pa) return false;  // Skip invalid items\n//       const searchTerm = search.toLowerCase();\n//       const fullName = pa.patient?.fullName?.toLowerCase() || '';\n//       return searchTerm === '' || fullName.includes(searchTerm);\n//     });\n//     console.log('Filtered pending appointments:', filtered);  // Added: Debug filtered data\n//     return filtered;\n//   })();\n\n//   const filteredPatients = patients.filter(p => filters.patients === 'all' || p.specialization === filters.patients);\n\n//   const tableStyle = { width: '100%', borderCollapse: 'collapse', marginTop: '1rem', fontSize: '0.9rem' };\n//   const thStyle = { border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'left' };\n//   const tdStyle = { border: '1px solid #ddd', padding: '12px' };\n//   const buttonStyle = { padding: '6px 12px', margin: '2px', border: 'none', borderRadius: '4px', cursor: 'pointer', fontSize: '0.8rem' };\n\n//   return (\n//     <div style={{ display: 'flex', fontFamily: 'Poppins, sans-serif', background: '#f4f8fb', minHeight: '100vh' }}>\n//       {/* Added CSS for button active states */}\n//       <style>\n//         {`\n//           .action-button:active {\n//             filter: brightness(1.2); /* Makes color lighter on click */\n//           }\n//         `}\n//       </style>\n//       <div style={{ width: sidebarCollapsed ? '0' : '250px', background: 'white', color: 'black', padding: '1rem', transition: 'width 0.3s', overflow: 'hidden' }}>\n//         <button onClick={() => { console.log('Sidebar toggle clicked'); setSidebarCollapsed(!sidebarCollapsed); }} style={{ background: 'none', border: 'none', color: 'black', fontSize: '1.5rem', cursor: 'pointer' }}>\n//           ☰\n//         </button>\n//         <h2>Doctor Menu</h2>\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\n//         <li><button onClick={() => setActiveSection('profile')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Update Profile</button></li>\n//         <li><button onClick={() => setActiveSection('appointments')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Appointments</button></li>\n//         <li><button onClick={() => setActiveSection('pendingAppointments')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Pending Appointments</button></li>\n//         <li><button onClick={() => setActiveSection('writePrescription')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Write Prescription</button></li>\n//         <li><button onClick={() => setActiveSection('addLeave')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Add Leave</button></li>\n//         <li><button onClick={() => setActiveSection('addPatients')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Add Patients</button></li>\n//         {/* Removed: Schedule Reconsult */}\n//         <li><button onClick={() => setActiveSection('reconsults')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Reconsults</button></li>  {/* New: Reconsults */}\n//       </ul>\n//       </div>\n//       <div style={{ flex: 1, padding: '2rem', display: 'flex', flexDirection: 'column' }}>\n//         {loading && <p>Loading...</p>}\n//         <div style={{ display: activeSection === 'profile' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Update Profile</h3>\n//             <form onSubmit={(e) => { e.preventDefault(); updateProfile(); }}>\n//               <input type=\"text\" placeholder=\"Full Name\" value={profile.fullName} onChange={(e) => setProfile({ ...profile, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"email\" placeholder=\"Email\" value={profile.emailId} onChange={(e) => setProfile({ ...profile, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"text\" placeholder=\"Phone\" value={profile.phoneNumber} onChange={(e) => setProfile({ ...profile, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"password\" placeholder=\"Password\" value={profile.rawPassword} onChange={(e) => setProfile({ ...profile, rawPassword: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"text\" placeholder=\"Qualification\" value={profile.qualification} onChange={(e) => setProfile({ ...profile, qualification: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"number\" placeholder=\"Experience Years\" value={profile.experienceYears} onChange={(e) => setProfile({ ...profile, experienceYears: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <select value={profile.specialization} onChange={(e) => setProfile({ ...profile, specialization: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\n//                 <option value=\"\">Select Specialization</option>\n//                 <option value=\"CARDIOLOGIST\">Cardiologist</option>\n//                 <option value=\"ORTHOPEDIC\">Orthopedic</option>\n//                 <option value=\"DENTIST\">Dentist</option>\n//                 <option value=\"GYNAECOLOGIST\">Gynaecologist</option>\n//                 <option value=\"NEUROLOGIST\">Neurologist</option>\n//                 <option value=\"GASTROENTEROLOGIST\">Gastroenterologist</option>\n//               <option value=\"PEDIATRICS\">Pediatrics</option>\n//               <option value=\"RADIOLOGY\">Radiology</option>\n//               <option value=\"GENERAL_PHYSICIAN\">General Physician</option>\n//               <option value=\"OTOLARYNGOLOGIST_ENT\">Otolaryngologist ENT</option>\n//               <option value=\"ENDOCRINOLOGIST\">Endocrinologist</option>\n//               <option value=\"ONCOLOGY\">Oncology</option>\n//             </select>\n//             <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Update Profile</button>\n//           </form>\n//         </div>\n//       </div>\n//       <div style={{ display: activeSection === 'appointments' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//         <div style={{ flex: 1 }}>\n//           <h3>Appointments</h3>\n//           <div style={{ display: 'flex', marginBottom: '1rem' }}>\n//             <div>Today's: {appointments.filter(a => new Date(a.scheduledDateTime).toDateString() === new Date().toDateString()).length}</div>\n//             <div>This Week: {appointments.filter(a => new Date(a.scheduledDateTime) <= new Date(new Date().setDate(new Date().getDate() + 7))).length}</div>\n//             <div>Missed: {appointments.filter(a => a.status === 'MISSED').length}</div>\n//           </div>\n//           <input type=\"text\" placeholder=\"Search by patient name or ID\" value={search} onChange={(e) => setSearch(e.target.value)} style={{ width: '100%', padding: '10px', marginBottom: '1rem', border: '1px solid #ccc', borderRadius: '4px' }} />\n//           <table style={tableStyle}>\n//             <thead>\n//               <tr>\n//                 <th style={thStyle}>Appointment ID</th>\n//                 <th style={thStyle}>Patient Name + ID</th>\n//                 <th style={thStyle}>Date & Time</th>\n//                 <th style={thStyle}>Status</th>\n//                 <th style={thStyle}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {filteredAppointments.map((a, index) => (\n//                 <tr key={a.appointmentId} style={index % 2 === 0 ? {} : { backgroundColor: '#f9f9f9' }}>\n//                   <td style={tdStyle}>{a.appointmentId}</td>\n//                   <td style={tdStyle}>{a.patient.fullName} ({a.patient.userId})</td>\n//                   <td style={tdStyle}>{a.scheduledDateTime}</td>\n//                   <td style={tdStyle}><span style={{ color: a.status === 'CONFIRMED' ? 'green' : 'grey' }}>{a.status}</span></td>\n//                   <td style={tdStyle}>\n//                     <button className=\"action-button\" style={{ ...buttonStyle, background: '#28a745' }}><a href={a.meetingLink} style={{color:'white', textDecoration:'none'}}>Start Visit</a></button>\n//                     <button className=\"action-button\" onClick={() => cancelAppointment(a.appointmentId)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Cancel</button>\n//                     <button className=\"action-button\" onClick={() => { setSelectedAppointment(a); setRescheduleModal(true); }} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Reschedule</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//         <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\n//           <h4>Filters</h4>\n//           <select value={filters.appointments} onChange={(e) => setFilters({ ...filters, appointments: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\n//             <option value=\"all\">All</option>\n//             <option value=\"today\">Today</option>\n//             <option value=\"week\">This Week</option>\n//           </select>\n//         </div>\n//       </div>\n//       <div style={{ display: activeSection === 'pendingAppointments' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//         <div style={{ flex: 1 }}>\n//           <h3>Pending Appointments</h3>\n//           <input type=\"text\" placeholder=\"Search by patient name or ID\" value={search} onChange={(e) => setSearch(e.target.value)} style={{ width: '100%', padding: '10px', marginBottom: '1rem', border: '1px solid #ccc', borderRadius: '4px' }} />\n//           <table style={tableStyle}>\n//             <thead>\n//               <tr>\n//                 <th style={thStyle}>Appointment ID</th>\n//                 <th style={thStyle}>Patient Name + ID</th>\n//                 <th style={thStyle}>Requested Date & Time</th>\n//                 <th style={thStyle}>Status</th>\n//                 <th style={thStyle}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {filteredPending.length > 0 ? (\n//                 filteredPending.map((pa, index) => (\n//                   <tr key={pa.appointmentId} style={index % 2 === 0 ? {} : { backgroundColor: '#f9f9f9' }}>\n//                     <td style={tdStyle}>{pa.appointmentId}</td>\n//                     <td style={tdStyle}>{pa.patient.fullName} ({pa.patient.userId})</td>\n//                     <td style={tdStyle}>{pa.preferredDate}</td>\n//                     <td style={tdStyle}><span style={{ color: 'orange' }}>{pa.status}</span></td>\n//                     <td style={tdStyle}>\n//                       <button className=\"action-button\" onClick={() => confirmAppointment(pa.appointmentId)} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Confirm</button>\n//                       <button className=\"action-button\" onClick={() => rejectAppointment(pa.appointmentId)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Reject</button>\n//                       <button className=\"action-button\" onClick={() => { setSelectedAppointment(pa); setRescheduleModal(true); }} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Reschedule</button>\n//                       <button className=\"action-button\" onClick={() => { console.log('View Details clicked for pending appointment'); alert('View Details (placeholder)'); }} style={{ ...buttonStyle, background: '#17a2b8', color: 'white' }}>View Details</button>\n//                     </td>\n//                   </tr>\n//                 ))\n//               ) : (\n//                 <tr>\n//                   <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px' }}>No pending appointments available.</td>\n//                 </tr>\n//               )}\n//             </tbody>\n//           </table>\n//         </div>\n//         <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\n//           <h4>Filters</h4>\n//           <select value={filters.pending} onChange={(e) => setFilters({ ...filters, pending: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\n//             <option value=\"all\">All</option>\n//             <option value=\"old\">Older than 24h</option>\n//           </select>\n//         </div>\n//       </div>\n//       <div style={{ display: activeSection === 'writePrescription' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//         <div style={{ flex: 1 }}>\n//           <h3>Write Prescription</h3>\n//           <select value={selectedAppointmentForPrescription ? selectedAppointmentForPrescription.appointmentId : ''} onChange={(e) => {\n//             const appId = e.target.value;\n//             const app = appointments.find(a => a.appointmentId == appId);\n//             setSelectedAppointmentForPrescription(app);\n//           }} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\n//             <option value=\"\">Select Appointment</option>\n//             {appointments.filter(a => a.status === 'CONFIRMED').map(a => (\n//               <option key={a.appointmentId} value={a.appointmentId}>\n//                 {a.appointmentId} - {a.patient.fullName} ({a.scheduledDateTime})\n//               </option>\n//             ))}\n//           </select>\n//           {selectedAppointmentForPrescription && (\n//             <div>\n//               <input type=\"text\" placeholder=\"Diagnosis\" value={prescription.diagnosis} onChange={(e) => setPrescription({ ...prescription, diagnosis: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <textarea placeholder=\"Advice\" value={prescription.advice} onChange={(e) => setPrescription({ ...prescription, advice: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px', minHeight: '80px' }} />\n//               <h4>Add Medicines</h4>\n//               <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\n//                 <input type=\"text\" placeholder=\"Medicine Name\" value={newMedicine.name} onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\n//                 <input type=\"text\" placeholder=\"Dosage (e.g., 500mg)\" value={newMedicine.dosage} onChange={(e) => setNewMedicine({ ...newMedicine, dosage: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\n//                 <input type=\"text\" placeholder=\"Frequency (e.g., 3 times a day)\" value={newMedicine.frequency} onChange={(e) => setNewMedicine({ ...newMedicine, frequency: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\n//                 <input type=\"number\" placeholder=\"Duration (days)\" value={newMedicine.duration} onChange={(e) => setNewMedicine({ ...newMedicine, duration: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\n//                 <input type=\"text\" placeholder=\"Notes\" value={newMedicine.notes} onChange={(e) => setNewMedicine({ ...newMedicine, notes: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\n//                 <button onClick={addMedicine} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Add Medicine</button>\n//               </div>\n//               <ul style={{ marginTop: '10px' }}>\n//                 {prescription.medicines.map((med, index) => (\n//                   <li key={index} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '5px', border: '1px solid #ddd', marginBottom: '5px' }}>\n//                     <span>{med.name} - {med.dosage} - {med.frequency} - {med.duration} days - {med.notes}</span>\n//                     <button onClick={() => removeMedicine(index)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Remove</button>\n//                   </li>\n//                 ))}\n//               </ul>\n//               <button onClick={() => addPrescription(selectedAppointmentForPrescription.appointmentId)} style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Submit Prescription</button>\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//       <div style={{ display: activeSection === 'addLeave' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//         <div style={{ flex: 1 }}>\n//           <h3>Add Leave</h3>\n//           <form onSubmit={(e) => { e.preventDefault(); addLeave(); }}>\n//             <input type=\"date\" value={leave.date} onChange={(e) => setLeave({ ...leave, date: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Add Leave</button>\n//           </form>\n//         </div>\n//       </div>\n//       <div style={{ display: activeSection === 'addPatients' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//         <div style={{ flex: 1 }}>\n//           <h3>Add Patient</h3>\n//           <form onSubmit={(e) => { e.preventDefault(); addPatient(); }}>\n//             <input type=\"text\" placeholder=\"Full Name\" value={newPatient.fullName} onChange={(e) => setNewPatient({ ...newPatient, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <input type=\"email\" placeholder=\"Email\" value={newPatient.emailId} onChange={(e) => setNewPatient({ ...newPatient, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <input type=\"text\" placeholder=\"Phone\" value={newPatient.phoneNumber} onChange={(e) => setNewPatient({ ...newPatient, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <input type=\"password\" placeholder=\"Password\" value={newPatient.rawPassword} onChange={(e) => setNewPatient({ ...newPatient, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <select value={newPatient.gender} onChange={(e) => setNewPatient({ ...newPatient, gender: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\n//               <option value=\"\">Select Gender</option>\n//               <option value=\"MALE\">Male</option>\n//               <option value=\"FEMALE\">Female</option>\n//               <option value=\"OTHER\">Other</option>\n//             </select>\n//             <input type=\"date\" value={newPatient.dateOfBirth} onChange={(e) => setNewPatient({ ...newPatient, dateOfBirth: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Add Patient</button>\n//           </form>\n//           <h3>Patients List</h3>\n//           <table style={tableStyle}>\n//             <thead>\n//               <tr>\n//                 <th style={thStyle}>Name</th>\n//                 <th style={thStyle}>ID</th>\n//                 <th style={thStyle}>Specialization</th>\n//                 <th style={thStyle}>Actions</th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {filteredPatients.map((p, index) => (\n//                 <tr key={p.userId} style={index % 2 === 0 ? {} : { backgroundColor: '#f9f9f9' }}>\n//                   <td style={tdStyle}>{p.fullName}</td>\n//                   <td style={tdStyle}>{p.userId}</td>\n//                   <td style={tdStyle}>{p.specialization}</td>\n//                   <td style={tdStyle}>\n//                     <button onClick={() => editPatient(p)} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Edit</button>\n//                     <button onClick={() => deletePatient(p.userId)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Delete</button>\n//                     <button onClick={() => blockPatient(p.userId)} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Block</button>\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         </div>\n//         <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\n//         <h4>Filters</h4>\n//            <select value={filters.patients} onChange={(e) => setFilters({ ...filters, patients: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\n//            <option value=\"all\">All</option>\n//               <option value=\"CARDIOLOGIST\">Cardiologist</option>\n//               <option value=\"ORTHOPEDIC\">Orthopedic</option>\n//               <option value=\"DENTIST\">Dentist</option>\n//               <option value=\"GYNAECOLOGIST\">Gynaecologist</option>\n//               <option value=\"NEUROLOGIST\">Neurologist</option>\n//               <option value=\"GASTROENTEROLOGIST\">Gastroenterologist</option>\n//               <option value=\"PEDIATRICS\">Pediatrics</option>\n//               <option value=\"RADIOLOGY\">Radiology</option>\n//               <option value=\"GENERAL_PHYSICIAN\">General Physician</option>\n//               <option value=\"OTOLARYNGOLOGIST_ENT\">Otolaryngologist ENT</option>\n//               <option value=\"ENDOCRINOLOGIST\">Endocrinologist</option>\n//               <option value=\"ONCOLOGY\">Oncology</option>\n//             </select>\n//           </div>\n//         </div>\n//         {/* Reconsults Section */}\n//         <div style={{ display: activeSection === 'reconsults' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Reconsults</h3>\n//             <table style={tableStyle}>\n//               <thead>\n//                 <tr>\n//                   <th style={thStyle}>Appointment ID</th>\n//                   <th style={thStyle}>Patient Name</th>\n//                   <th style={thStyle}>Status</th>\n//                   <th style={thStyle}>Requested Date</th>\n//                   <th style={thStyle}>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {reconsults.map((r, index) => (\n//                   <tr key={r.appointmentId} style={index % 2 === 0 ? {} : { backgroundColor: '#f9f9f9' }}>\n//                     <td style={tdStyle}>{r.appointmentId}</td>\n//                     <td style={tdStyle}>{r.patient.fullName}</td>\n//                     <td style={tdStyle}><span style={{ color: r.status === 'CONFIRMED' ? 'green' : 'orange' }}>{r.status}</span></td>\n//                     <td style={tdStyle}>{r.scheduledDateTime || r.createdAt || 'Not Set'}</td>\n//                     <td style={tdStyle}>\n//                       <button className=\"action-button\" onClick={() => { setSelectedReconsult(r); setScheduleReconsultModal(true); }} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Schedule</button>\n//                       <button className=\"action-button\" onClick={() => { setSelectedReconsult(r); setScheduleReconsultModal(true); }} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Reschedule</button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//         {scheduleReconsultModal && (\n//           <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 4px 10px rgba(0,0,0,0.1)', zIndex: 1000 }}>\n//             <h3>{selectedReconsult?.scheduledDateTime ? 'Reschedule' : 'Schedule'} Reconsult</h3>\n//             <p>Patient: {selectedReconsult?.patient.fullName}</p>\n//             <input type=\"datetime-local\" value={reconsultDateTime} onChange={(e) => setReconsultDateTime(e.target.value)} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <button onClick={selectedReconsult?.scheduledDateTime ? rescheduleReconsult : scheduleReconsult} style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Confirm</button>\n//             <button onClick={() => setScheduleReconsultModal(false)} style={{ ...buttonStyle, background: '#ccc', color: 'black' }}>Cancel</button>\n//           </div>\n//         )}\n//         {rescheduleModal && (\n//           <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 4px 10px rgba(0,0,0,0.1)', zIndex: 1000 }}>\n//             <h3>Reschedule Appointment</h3>\n//             <p>Patient: {selectedAppointment?.patient.fullName}</p>\n//             <p>Current Date/Time: {selectedAppointment?.scheduledDateTime}</p>\n//             <input type=\"datetime-local\" value={newDateTime} onChange={(e) => setNewDateTime(e.target.value)} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <button onClick={rescheduleAppointment} style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Confirm</button>\n//             <button onClick={() => { console.log('Reschedule Cancel clicked'); setRescheduleModal(false); }} style={{ ...buttonStyle, background: '#ccc', color: 'black' }}>Cancel</button>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DoctorDashboard;","map":{"version":3,"names":[],"sources":["/Users/poojav/Desktop/MediCareOnline/FrontendMediCare/src/components/DoctorDashboard.jsx"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { useNavigate } from 'react-router-dom';  // Added for navigation\r\n// import { doctorAPI, appointmentAPI, prescriptionAPI } from '../services/api';\r\n\r\n// const DoctorDashboard = () => {\r\n//   const navigate = useNavigate();  // Added for navigation\r\n//   const [activeSection, setActiveSection] = useState('profile');\r\n//   const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n//   const [profile, setProfile] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', qualification: '', experienceYears: '', specialization: '' });\r\n//   const [appointments, setAppointments] = useState([]);\r\n//   const [pendingAppointments, setPendingAppointments] = useState([]);\r\n//   const [patients, setPatients] = useState([]);\r\n//   const [calendar, setCalendar] = useState([]);\r\n//   const [prescription, setPrescription] = useState({ diagnosis: '', advice: '', medicines: [] });\r\n//   const [leave, setLeave] = useState({ date: '' });\r\n//   // const [reconsults, setReconsults] = useState({ id: '', newRequestedDateTime: '' });\r\n//   const [reconsults, setReconsults] = useState([]);\r\n//   const [scheduleReconsultModal, setScheduleReconsultModal] = useState(false);\r\n//   const [selectedReconsult, setSelectedReconsult] = useState(null);\r\n//   const [reconsultDateTime, setReconsultDateTime] = useState('');\r\n//   const [newPatient, setNewPatient] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', gender: '', dateOfBirth: '' });\r\n//   const [rescheduleModal, setRescheduleModal] = useState(false);\r\n//   const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n//   const [newDateTime, setNewDateTime] = useState('');\r\n//   const [filters, setFilters] = useState({ appointments: 'all', pending: 'all', patients: 'all' });\r\n//   const [search, setSearch] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n//   // New state for prescription section\r\n//   const [selectedAppointmentForPrescription, setSelectedAppointmentForPrescription] = useState(null);\r\n//   const [newMedicine, setNewMedicine] = useState({ name: '', dosage: '', frequency: '', duration: '', notes: '' });\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const fetchData = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const [a, pend, prof, rec] = await Promise.all([\r\n//         doctorAPI.getAppointments(),\r\n//         doctorAPI.getPendingAppointments(),\r\n//         doctorAPI.getProfile(),\r\n//         doctorAPI.getReconsults()  // New: Fetch reconsults\r\n//       ]);\r\n//       setAppointments(a.data);\r\n//       setPendingAppointments(pend.data);\r\n//       setProfile(prof.data);\r\n//       setReconsults(rec.data);  // New: Set reconsults\r\n//     } catch (err) {\r\n//       console.error('Fetch error:', err);\r\n//       alert('Error fetching data: ' + (err.response?.data?.message || err.message));\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const scheduleReconsult = async () => {\r\n//     try {\r\n//       await doctorAPI.scheduleReconsult(selectedReconsult.appointmentId, { newRequestedDateTime: reconsultDateTime });\r\n//       alert('Reconsult scheduled successfully!');\r\n//       setScheduleReconsultModal(false);\r\n//       fetchData();\r\n//     } catch (err) {\r\n//       alert('Error scheduling reconsult: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n//   const rescheduleReconsult = async () => {\r\n//     try {\r\n//       await doctorAPI.rescheduleReconsult(selectedReconsult.appointmentId, { newRequestedDateTime: reconsultDateTime });\r\n//       alert('Reconsult rescheduled successfully!');\r\n//       setScheduleReconsultModal(false);\r\n//       fetchData();\r\n//     } catch (err) {\r\n//       alert('Error rescheduling reconsult: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const updateProfile = async () => {\r\n//     console.log('Update Profile button clicked');\r\n//     try {\r\n//       await doctorAPI.updateProfile(profile);\r\n//       alert('Profile updated successfully');\r\n//       fetchData();\r\n//     } catch (err) {\r\n//       console.error('Update profile error:', err);\r\n//       alert('Error updating profile: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n  \r\n\r\n//   const addPrescription = async (id) => {\r\n//     console.log('Add Prescription button clicked for appointment ID:', id);\r\n//     if (!prescription.diagnosis || prescription.medicines.length === 0) {\r\n//       alert('Please enter diagnosis and at least one medicine.');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       await doctorAPI.addPrescription(id, prescription);\r\n//       setPrescription({ diagnosis: '', advice: '', medicines: [] });\r\n//       setSelectedAppointmentForPrescription(null);\r\n//       alert('Prescription added successfully');\r\n//       fetchData();\r\n//     } catch (err) {\r\n//       console.error('Add prescription error:', err);\r\n//       alert('Error adding prescription: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const addMedicine = () => {\r\n//     if (!newMedicine.name || !newMedicine.dosage || !newMedicine.frequency || !newMedicine.duration) {\r\n//       alert('Please fill in all medicine fields.');\r\n//       return;\r\n//     }\r\n//     setPrescription(prev => ({\r\n//       ...prev,\r\n//       medicines: [...prev.medicines, newMedicine]\r\n//     }));\r\n//     setNewMedicine({ name: '', dosage: '', frequency: '', duration: '', notes: '' });\r\n//   };\r\n\r\n//   const removeMedicine = (index) => {\r\n//     setPrescription(prev => ({\r\n//       ...prev,\r\n//       medicines: prev.medicines.filter((_, i) => i !== index)\r\n//     }));\r\n//   };\r\n\r\n//   const addLeave = async () => {\r\n//     console.log('Add Leave button clicked');\r\n//     try {\r\n//       await doctorAPI.addLeave(leave);\r\n//       setLeave({ date: '' });\r\n//       fetchData();\r\n//       alert('Leave added successfully');\r\n//     } catch (err) {\r\n//       console.error('Add leave error:', err);\r\n//       alert('Error adding leave: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const addPatient = async () => {\r\n//     try {\r\n//       await doctorAPI.addPatient(newPatient);  // Now uses /doctor/patients\r\n//       setNewPatient({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', gender: '', dateOfBirth: '' });\r\n//       fetchData();\r\n//       alert('Patient added successfully');\r\n//     } catch (err) {\r\n//       alert('Error adding patient: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n// // const rescheduleAppointment = async () => {\r\n// //   try {\r\n// //     await doctorAPI.rescheduleAppointment(selectedAppointment.appointmentId, { newRequestedDateTime: newDateTime });\r\n// //     setRescheduleModal(false);\r\n// //     setNewDateTime('');\r\n// //     fetchData();\r\n// //     alert('Appointment rescheduled successfully');\r\n// //   } catch (err) {\r\n// //     if (err.response?.status === 401) {\r\n// //       alert('Session expired. Please log in again.');\r\n// //       // Redirect to login\r\n// //     } else {\r\n// //       alert('Error rescheduling: ' + (err.response?.data?.message || err.message));\r\n// //     }\r\n// //   }\r\n// // };\r\n// const rescheduleAppointment = async () => {\r\n//     console.log('Reschedule Confirm button clicked');\r\n//     try {\r\n//       // Use calendar API to confirm availability, then update\r\n//       await doctorAPI.rescheduleAppointment(selectedAppointment.appointmentId, { newRequestedDateTime: newDateTime });\r\n//       setRescheduleModal(false);\r\n//       setNewDateTime('');\r\n//       fetchData();\r\n//       alert('Appointment rescheduled successfully');\r\n//     } catch (err) {\r\n//       console.error('Reschedule error:', err);\r\n//       alert('Error rescheduling: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const confirmAppointment = async (id) => {\r\n//     console.log('Confirm Appointment button clicked for ID:', id);\r\n//     try {\r\n//       await appointmentAPI.schedule(id, { scheduledDateTime: new Date().toISOString() });  // Example: schedule now\r\n//       alert('Appointment confirmed successfully');\r\n//       fetchData();\r\n//     } catch (err) {\r\n//       console.error('Confirm appointment error:', err);\r\n//       alert('Error confirming appointment: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const rejectAppointment = async (id) => {\r\n//     console.log('Reject Appointment button clicked for ID:', id);\r\n//     try {\r\n//       await appointmentAPI.cancel(id);  // Example: cancel as reject\r\n//       alert('Appointment rejected successfully');\r\n//       fetchData();\r\n//     } catch (err) {\r\n//       console.error('Reject appointment error:', err);\r\n//       alert('Error rejecting appointment: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const startVisit = async (id) => {\r\n//     try {\r\n//       await appointmentAPI.startVisit(id);  // Now uses PUT\r\n//       const appointment = appointments.find(a => a.appointmentId === id);\r\n//       if (appointment && appointment.meetingLink) {\r\n//         window.open(appointment.meetingLink, '_blank');\r\n//       }\r\n//       navigate(`/doctor/visit/${id}`);\r\n//       alert('Visit started successfully');\r\n//       fetchData();\r\n//     } catch (err) {\r\n//       alert('Error starting visit: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const cancelAppointment = async (id) => {\r\n//     console.log('Cancel Appointment button clicked for ID:', id);\r\n//     try {\r\n//       await appointmentAPI.cancel(id);\r\n//       alert('Appointment cancelled successfully');\r\n//       fetchData();\r\n//     } catch (err) {\r\n//       console.error('Cancel appointment error:', err);\r\n//       alert('Error cancelling appointment: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const editPatient = (patient) => {\r\n//     console.log('Edit Patient button clicked for:', patient.fullName);\r\n//     // Placeholder: Set selected patient and open edit modal\r\n//     alert('Edit patient (placeholder)');\r\n//   };\r\n\r\n//   const deletePatient = async (id) => {\r\n//     console.log('Delete Patient button clicked for ID:', id);\r\n//     if (window.confirm('Are you sure you want to delete this patient?')) {\r\n//       try {\r\n//         await doctorAPI.deletePatient(id);  // Assume endpoint exists\r\n//         alert('Patient deleted successfully');\r\n//         fetchData();\r\n//       } catch (err) {\r\n//         console.error('Delete patient error:', err);\r\n//         alert('Error deleting patient: ' + (err.response?.data?.message || err.message));\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const blockPatient = async (id) => {\r\n//     console.log('Block Patient button clicked for ID:', id);\r\n//     try {\r\n//       await doctorAPI.blockPatient(id);  // Assume endpoint exists\r\n//       alert('Patient blocked successfully');\r\n//       fetchData();\r\n//     } catch (err) {\r\n//       console.error('Block patient error:', err);\r\n//       alert('Error blocking patient: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const filteredAppointments = appointments.filter(a => {\r\n//     const today = new Date().toDateString();\r\n//     const week = new Date();\r\n//     week.setDate(week.getDate() + 7);\r\n//     const isToday = new Date(a.scheduledDateTime).toDateString() === today;\r\n//     const isThisWeek = new Date(a.scheduledDateTime) <= week;\r\n//     return (filters.appointments === 'all' || (filters.appointments === 'today' && isToday) || (filters.appointments === 'week' && isThisWeek)) &&\r\n//            a.patient.fullName.toLowerCase().includes(search.toLowerCase());\r\n//   });\r\n\r\n//   // Updated: Safer filtering for pending appointments\r\n//   const filteredPending = (() => {\r\n//     const filtered = pendingAppointments.filter(pa => {\r\n//       if (!pa) return false;  // Skip invalid items\r\n//       const searchTerm = search.toLowerCase();\r\n//       const fullName = pa.patient?.fullName?.toLowerCase() || '';\r\n//       return searchTerm === '' || fullName.includes(searchTerm);\r\n//     });\r\n//     console.log('Filtered pending appointments:', filtered);  // Added: Debug filtered data\r\n//     return filtered;\r\n//   })();\r\n\r\n//   const filteredPatients = patients.filter(p => filters.patients === 'all' || p.specialization === filters.patients);\r\n\r\n//   const tableStyle = { width: '100%', borderCollapse: 'collapse', marginTop: '1rem', fontSize: '0.9rem' };\r\n//   const thStyle = { border: '1px solid #ddd', padding: '12px', backgroundColor: '#f2f2f2', textAlign: 'left' };\r\n//   const tdStyle = { border: '1px solid #ddd', padding: '12px' };\r\n//   const buttonStyle = { padding: '6px 12px', margin: '2px', border: 'none', borderRadius: '4px', cursor: 'pointer', fontSize: '0.8rem' };\r\n\r\n//   return (\r\n//     <div style={{ display: 'flex', fontFamily: 'Poppins, sans-serif', background: '#f4f8fb', minHeight: '100vh' }}>\r\n//       {/* Added CSS for button active states */}\r\n//       <style>\r\n//         {`\r\n//           .action-button:active {\r\n//             filter: brightness(1.2); /* Makes color lighter on click */\r\n//           }\r\n//         `}\r\n//       </style>\r\n//       <div style={{ width: sidebarCollapsed ? '0' : '250px', background: 'white', color: 'black', padding: '1rem', transition: 'width 0.3s', overflow: 'hidden' }}>\r\n//         <button onClick={() => { console.log('Sidebar toggle clicked'); setSidebarCollapsed(!sidebarCollapsed); }} style={{ background: 'none', border: 'none', color: 'black', fontSize: '1.5rem', cursor: 'pointer' }}>\r\n//           ☰\r\n//         </button>\r\n//         <h2>Doctor Menu</h2>\r\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\r\n//         <li><button onClick={() => setActiveSection('profile')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Update Profile</button></li>\r\n//         <li><button onClick={() => setActiveSection('appointments')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Appointments</button></li>\r\n//         <li><button onClick={() => setActiveSection('pendingAppointments')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Pending Appointments</button></li>\r\n//         <li><button onClick={() => setActiveSection('writePrescription')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Write Prescription</button></li>\r\n//         <li><button onClick={() => setActiveSection('addLeave')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Add Leave</button></li>\r\n//         <li><button onClick={() => setActiveSection('addPatients')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Add Patients</button></li>\r\n//         {/* Removed: Schedule Reconsult */}\r\n//         <li><button onClick={() => setActiveSection('reconsults')} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer' }}>Reconsults</button></li>  {/* New: Reconsults */}\r\n//       </ul>\r\n//       </div>\r\n//       <div style={{ flex: 1, padding: '2rem', display: 'flex', flexDirection: 'column' }}>\r\n//         {loading && <p>Loading...</p>}\r\n//         <div style={{ display: activeSection === 'profile' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Update Profile</h3>\r\n//             <form onSubmit={(e) => { e.preventDefault(); updateProfile(); }}>\r\n//               <input type=\"text\" placeholder=\"Full Name\" value={profile.fullName} onChange={(e) => setProfile({ ...profile, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"email\" placeholder=\"Email\" value={profile.emailId} onChange={(e) => setProfile({ ...profile, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"text\" placeholder=\"Phone\" value={profile.phoneNumber} onChange={(e) => setProfile({ ...profile, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"password\" placeholder=\"Password\" value={profile.rawPassword} onChange={(e) => setProfile({ ...profile, rawPassword: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"text\" placeholder=\"Qualification\" value={profile.qualification} onChange={(e) => setProfile({ ...profile, qualification: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"number\" placeholder=\"Experience Years\" value={profile.experienceYears} onChange={(e) => setProfile({ ...profile, experienceYears: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <select value={profile.specialization} onChange={(e) => setProfile({ ...profile, specialization: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//                 <option value=\"\">Select Specialization</option>\r\n//                 <option value=\"CARDIOLOGIST\">Cardiologist</option>\r\n//                 <option value=\"ORTHOPEDIC\">Orthopedic</option>\r\n//                 <option value=\"DENTIST\">Dentist</option>\r\n//                 <option value=\"GYNAECOLOGIST\">Gynaecologist</option>\r\n//                 <option value=\"NEUROLOGIST\">Neurologist</option>\r\n//                 <option value=\"GASTROENTEROLOGIST\">Gastroenterologist</option>\r\n//               <option value=\"PEDIATRICS\">Pediatrics</option>\r\n//               <option value=\"RADIOLOGY\">Radiology</option>\r\n//               <option value=\"GENERAL_PHYSICIAN\">General Physician</option>\r\n//               <option value=\"OTOLARYNGOLOGIST_ENT\">Otolaryngologist ENT</option>\r\n//               <option value=\"ENDOCRINOLOGIST\">Endocrinologist</option>\r\n//               <option value=\"ONCOLOGY\">Oncology</option>\r\n//             </select>\r\n//             <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Update Profile</button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ display: activeSection === 'appointments' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//         <div style={{ flex: 1 }}>\r\n//           <h3>Appointments</h3>\r\n//           <div style={{ display: 'flex', marginBottom: '1rem' }}>\r\n//             <div>Today's: {appointments.filter(a => new Date(a.scheduledDateTime).toDateString() === new Date().toDateString()).length}</div>\r\n//             <div>This Week: {appointments.filter(a => new Date(a.scheduledDateTime) <= new Date(new Date().setDate(new Date().getDate() + 7))).length}</div>\r\n//             <div>Missed: {appointments.filter(a => a.status === 'MISSED').length}</div>\r\n//           </div>\r\n//           <input type=\"text\" placeholder=\"Search by patient name or ID\" value={search} onChange={(e) => setSearch(e.target.value)} style={{ width: '100%', padding: '10px', marginBottom: '1rem', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//           <table style={tableStyle}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={thStyle}>Appointment ID</th>\r\n//                 <th style={thStyle}>Patient Name + ID</th>\r\n//                 <th style={thStyle}>Date & Time</th>\r\n//                 <th style={thStyle}>Status</th>\r\n//                 <th style={thStyle}>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {filteredAppointments.map((a, index) => (\r\n//                 <tr key={a.appointmentId} style={index % 2 === 0 ? {} : { backgroundColor: '#f9f9f9' }}>\r\n//                   <td style={tdStyle}>{a.appointmentId}</td>\r\n//                   <td style={tdStyle}>{a.patient.fullName} ({a.patient.userId})</td>\r\n//                   <td style={tdStyle}>{a.scheduledDateTime}</td>\r\n//                   <td style={tdStyle}><span style={{ color: a.status === 'CONFIRMED' ? 'green' : 'grey' }}>{a.status}</span></td>\r\n//                   <td style={tdStyle}>\r\n//                     <button className=\"action-button\" style={{ ...buttonStyle, background: '#28a745' }}><a href={a.meetingLink} style={{color:'white', textDecoration:'none'}}>Start Visit</a></button>\r\n//                     <button className=\"action-button\" onClick={() => cancelAppointment(a.appointmentId)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Cancel</button>\r\n//                     <button className=\"action-button\" onClick={() => { setSelectedAppointment(a); setRescheduleModal(true); }} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Reschedule</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//         <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n//           <h4>Filters</h4>\r\n//           <select value={filters.appointments} onChange={(e) => setFilters({ ...filters, appointments: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//             <option value=\"all\">All</option>\r\n//             <option value=\"today\">Today</option>\r\n//             <option value=\"week\">This Week</option>\r\n//           </select>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ display: activeSection === 'pendingAppointments' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//         <div style={{ flex: 1 }}>\r\n//           <h3>Pending Appointments</h3>\r\n//           <input type=\"text\" placeholder=\"Search by patient name or ID\" value={search} onChange={(e) => setSearch(e.target.value)} style={{ width: '100%', padding: '10px', marginBottom: '1rem', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//           <table style={tableStyle}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={thStyle}>Appointment ID</th>\r\n//                 <th style={thStyle}>Patient Name + ID</th>\r\n//                 <th style={thStyle}>Requested Date & Time</th>\r\n//                 <th style={thStyle}>Status</th>\r\n//                 <th style={thStyle}>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {filteredPending.length > 0 ? (\r\n//                 filteredPending.map((pa, index) => (\r\n//                   <tr key={pa.appointmentId} style={index % 2 === 0 ? {} : { backgroundColor: '#f9f9f9' }}>\r\n//                     <td style={tdStyle}>{pa.appointmentId}</td>\r\n//                     <td style={tdStyle}>{pa.patient.fullName} ({pa.patient.userId})</td>\r\n//                     <td style={tdStyle}>{pa.preferredDate}</td>\r\n//                     <td style={tdStyle}><span style={{ color: 'orange' }}>{pa.status}</span></td>\r\n//                     <td style={tdStyle}>\r\n//                       <button className=\"action-button\" onClick={() => confirmAppointment(pa.appointmentId)} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Confirm</button>\r\n//                       <button className=\"action-button\" onClick={() => rejectAppointment(pa.appointmentId)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Reject</button>\r\n//                       <button className=\"action-button\" onClick={() => { setSelectedAppointment(pa); setRescheduleModal(true); }} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Reschedule</button>\r\n//                       <button className=\"action-button\" onClick={() => { console.log('View Details clicked for pending appointment'); alert('View Details (placeholder)'); }} style={{ ...buttonStyle, background: '#17a2b8', color: 'white' }}>View Details</button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))\r\n//               ) : (\r\n//                 <tr>\r\n//                   <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px' }}>No pending appointments available.</td>\r\n//                 </tr>\r\n//               )}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//         <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n//           <h4>Filters</h4>\r\n//           <select value={filters.pending} onChange={(e) => setFilters({ ...filters, pending: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//             <option value=\"all\">All</option>\r\n//             <option value=\"old\">Older than 24h</option>\r\n//           </select>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ display: activeSection === 'writePrescription' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//         <div style={{ flex: 1 }}>\r\n//           <h3>Write Prescription</h3>\r\n//           <select value={selectedAppointmentForPrescription ? selectedAppointmentForPrescription.appointmentId : ''} onChange={(e) => {\r\n//             const appId = e.target.value;\r\n//             const app = appointments.find(a => a.appointmentId == appId);\r\n//             setSelectedAppointmentForPrescription(app);\r\n//           }} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//             <option value=\"\">Select Appointment</option>\r\n//             {appointments.filter(a => a.status === 'CONFIRMED').map(a => (\r\n//               <option key={a.appointmentId} value={a.appointmentId}>\r\n//                 {a.appointmentId} - {a.patient.fullName} ({a.scheduledDateTime})\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//           {selectedAppointmentForPrescription && (\r\n//             <div>\r\n//               <input type=\"text\" placeholder=\"Diagnosis\" value={prescription.diagnosis} onChange={(e) => setPrescription({ ...prescription, diagnosis: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <textarea placeholder=\"Advice\" value={prescription.advice} onChange={(e) => setPrescription({ ...prescription, advice: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px', minHeight: '80px' }} />\r\n//               <h4>Add Medicines</h4>\r\n//               <div style={{ display: 'flex', flexWrap: 'wrap', gap: '10px' }}>\r\n//                 <input type=\"text\" placeholder=\"Medicine Name\" value={newMedicine.name} onChange={(e) => setNewMedicine({ ...newMedicine, name: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//                 <input type=\"text\" placeholder=\"Dosage (e.g., 500mg)\" value={newMedicine.dosage} onChange={(e) => setNewMedicine({ ...newMedicine, dosage: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//                 <input type=\"text\" placeholder=\"Frequency (e.g., 3 times a day)\" value={newMedicine.frequency} onChange={(e) => setNewMedicine({ ...newMedicine, frequency: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//                 <input type=\"number\" placeholder=\"Duration (days)\" value={newMedicine.duration} onChange={(e) => setNewMedicine({ ...newMedicine, duration: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//                 <input type=\"text\" placeholder=\"Notes\" value={newMedicine.notes} onChange={(e) => setNewMedicine({ ...newMedicine, notes: e.target.value })} style={{ flex: 1, padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//                 <button onClick={addMedicine} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Add Medicine</button>\r\n//               </div>\r\n//               <ul style={{ marginTop: '10px' }}>\r\n//                 {prescription.medicines.map((med, index) => (\r\n//                   <li key={index} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', padding: '5px', border: '1px solid #ddd', marginBottom: '5px' }}>\r\n//                     <span>{med.name} - {med.dosage} - {med.frequency} - {med.duration} days - {med.notes}</span>\r\n//                     <button onClick={() => removeMedicine(index)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Remove</button>\r\n//                   </li>\r\n//                 ))}\r\n//               </ul>\r\n//               <button onClick={() => addPrescription(selectedAppointmentForPrescription.appointmentId)} style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Submit Prescription</button>\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ display: activeSection === 'addLeave' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//         <div style={{ flex: 1 }}>\r\n//           <h3>Add Leave</h3>\r\n//           <form onSubmit={(e) => { e.preventDefault(); addLeave(); }}>\r\n//             <input type=\"date\" value={leave.date} onChange={(e) => setLeave({ ...leave, date: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Add Leave</button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//       <div style={{ display: activeSection === 'addPatients' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//         <div style={{ flex: 1 }}>\r\n//           <h3>Add Patient</h3>\r\n//           <form onSubmit={(e) => { e.preventDefault(); addPatient(); }}>\r\n//             <input type=\"text\" placeholder=\"Full Name\" value={newPatient.fullName} onChange={(e) => setNewPatient({ ...newPatient, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <input type=\"email\" placeholder=\"Email\" value={newPatient.emailId} onChange={(e) => setNewPatient({ ...newPatient, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <input type=\"text\" placeholder=\"Phone\" value={newPatient.phoneNumber} onChange={(e) => setNewPatient({ ...newPatient, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <input type=\"password\" placeholder=\"Password\" value={newPatient.rawPassword} onChange={(e) => setNewPatient({ ...newPatient, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <select value={newPatient.gender} onChange={(e) => setNewPatient({ ...newPatient, gender: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//               <option value=\"\">Select Gender</option>\r\n//               <option value=\"MALE\">Male</option>\r\n//               <option value=\"FEMALE\">Female</option>\r\n//               <option value=\"OTHER\">Other</option>\r\n//             </select>\r\n//             <input type=\"date\" value={newPatient.dateOfBirth} onChange={(e) => setNewPatient({ ...newPatient, dateOfBirth: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Add Patient</button>\r\n//           </form>\r\n//           <h3>Patients List</h3>\r\n//           <table style={tableStyle}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th style={thStyle}>Name</th>\r\n//                 <th style={thStyle}>ID</th>\r\n//                 <th style={thStyle}>Specialization</th>\r\n//                 <th style={thStyle}>Actions</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {filteredPatients.map((p, index) => (\r\n//                 <tr key={p.userId} style={index % 2 === 0 ? {} : { backgroundColor: '#f9f9f9' }}>\r\n//                   <td style={tdStyle}>{p.fullName}</td>\r\n//                   <td style={tdStyle}>{p.userId}</td>\r\n//                   <td style={tdStyle}>{p.specialization}</td>\r\n//                   <td style={tdStyle}>\r\n//                     <button onClick={() => editPatient(p)} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Edit</button>\r\n//                     <button onClick={() => deletePatient(p.userId)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Delete</button>\r\n//                     <button onClick={() => blockPatient(p.userId)} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Block</button>\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//         <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n//         <h4>Filters</h4>\r\n//            <select value={filters.patients} onChange={(e) => setFilters({ ...filters, patients: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//            <option value=\"all\">All</option>\r\n//               <option value=\"CARDIOLOGIST\">Cardiologist</option>\r\n//               <option value=\"ORTHOPEDIC\">Orthopedic</option>\r\n//               <option value=\"DENTIST\">Dentist</option>\r\n//               <option value=\"GYNAECOLOGIST\">Gynaecologist</option>\r\n//               <option value=\"NEUROLOGIST\">Neurologist</option>\r\n//               <option value=\"GASTROENTEROLOGIST\">Gastroenterologist</option>\r\n//               <option value=\"PEDIATRICS\">Pediatrics</option>\r\n//               <option value=\"RADIOLOGY\">Radiology</option>\r\n//               <option value=\"GENERAL_PHYSICIAN\">General Physician</option>\r\n//               <option value=\"OTOLARYNGOLOGIST_ENT\">Otolaryngologist ENT</option>\r\n//               <option value=\"ENDOCRINOLOGIST\">Endocrinologist</option>\r\n//               <option value=\"ONCOLOGY\">Oncology</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         {/* Reconsults Section */}\r\n//         <div style={{ display: activeSection === 'reconsults' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Reconsults</h3>\r\n//             <table style={tableStyle}>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th style={thStyle}>Appointment ID</th>\r\n//                   <th style={thStyle}>Patient Name</th>\r\n//                   <th style={thStyle}>Status</th>\r\n//                   <th style={thStyle}>Requested Date</th>\r\n//                   <th style={thStyle}>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {reconsults.map((r, index) => (\r\n//                   <tr key={r.appointmentId} style={index % 2 === 0 ? {} : { backgroundColor: '#f9f9f9' }}>\r\n//                     <td style={tdStyle}>{r.appointmentId}</td>\r\n//                     <td style={tdStyle}>{r.patient.fullName}</td>\r\n//                     <td style={tdStyle}><span style={{ color: r.status === 'CONFIRMED' ? 'green' : 'orange' }}>{r.status}</span></td>\r\n//                     <td style={tdStyle}>{r.scheduledDateTime || r.createdAt || 'Not Set'}</td>\r\n//                     <td style={tdStyle}>\r\n//                       <button className=\"action-button\" onClick={() => { setSelectedReconsult(r); setScheduleReconsultModal(true); }} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Schedule</button>\r\n//                       <button className=\"action-button\" onClick={() => { setSelectedReconsult(r); setScheduleReconsultModal(true); }} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Reschedule</button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//         </div>\r\n//         {scheduleReconsultModal && (\r\n//           <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 4px 10px rgba(0,0,0,0.1)', zIndex: 1000 }}>\r\n//             <h3>{selectedReconsult?.scheduledDateTime ? 'Reschedule' : 'Schedule'} Reconsult</h3>\r\n//             <p>Patient: {selectedReconsult?.patient.fullName}</p>\r\n//             <input type=\"datetime-local\" value={reconsultDateTime} onChange={(e) => setReconsultDateTime(e.target.value)} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <button onClick={selectedReconsult?.scheduledDateTime ? rescheduleReconsult : scheduleReconsult} style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Confirm</button>\r\n//             <button onClick={() => setScheduleReconsultModal(false)} style={{ ...buttonStyle, background: '#ccc', color: 'black' }}>Cancel</button>\r\n//           </div>\r\n//         )}\r\n//         {rescheduleModal && (\r\n//           <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 4px 10px rgba(0,0,0,0.1)', zIndex: 1000 }}>\r\n//             <h3>Reschedule Appointment</h3>\r\n//             <p>Patient: {selectedAppointment?.patient.fullName}</p>\r\n//             <p>Current Date/Time: {selectedAppointment?.scheduledDateTime}</p>\r\n//             <input type=\"datetime-local\" value={newDateTime} onChange={(e) => setNewDateTime(e.target.value)} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <button onClick={rescheduleAppointment} style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Confirm</button>\r\n//             <button onClick={() => { console.log('Reschedule Cancel clicked'); setRescheduleModal(false); }} style={{ ...buttonStyle, background: '#ccc', color: 'black' }}>Cancel</button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DoctorDashboard;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}