{"ast":null,"code":"var _jsxFileName = \"/Users/poojav/Desktop/MediCareOnline/FrontendMediCare/src/components/ResetPassword.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { authAPI } from \"../services/api\"; // Assuming authAPI has resetPassword method\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [searchParams] = useSearchParams(); // To get token from URL\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Extract token from URL params (e.g., ?token=abc123)\n    const urlToken = searchParams.get(\"token\");\n    if (urlToken) {\n      setToken(urlToken);\n    }\n  }, [searchParams]);\n  const handleReset = async () => {\n    if (newPassword !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    if (!token.trim() || !newPassword.trim()) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    try {\n      await authAPI.resetPassword(token, newPassword);\n      alert(\"Password reset successful. You can now log in.\");\n      navigate(\"/login\");\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Reset password error:\", error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Error resetting password. Please check the token and try again.\";\n      alert(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      maxWidth: \"400px\",\n      margin: \"auto\",\n      fontFamily: \"Poppins, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Token (auto-filled from URL)\",\n      value: token,\n      onChange: e => setToken(e.target.value),\n      required: true,\n      style: {\n        width: \"100%\",\n        padding: \"10px\",\n        margin: \"10px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value),\n      required: true,\n      style: {\n        width: \"100%\",\n        padding: \"10px\",\n        margin: \"10px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      required: true,\n      style: {\n        width: \"100%\",\n        padding: \"10px\",\n        margin: \"10px 0\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      style: {\n        width: \"100%\",\n        padding: \"10px\",\n        background: \"#007bff\",\n        color: \"white\",\n        border: \"none\"\n      },\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"/ZPRCdlS5LSK2LXZ1YPZf/OoRSI=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSearchParams","authAPI","jsxDEV","_jsxDEV","ResetPassword","_s","token","setToken","newPassword","setNewPassword","confirmPassword","setConfirmPassword","searchParams","navigate","urlToken","get","handleReset","alert","trim","resetPassword","error","_error$response","_error$response$data","console","errorMessage","response","data","message","style","padding","maxWidth","margin","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","required","width","type","onClick","background","color","border","_c","$RefreshReg$"],"sources":["/Users/poojav/Desktop/MediCareOnline/FrontendMediCare/src/components/ResetPassword.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport { authAPI } from \"../services/api\";  // Assuming authAPI has resetPassword method\r\n\r\nconst ResetPassword = () => {\r\n  const [token, setToken] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [searchParams] = useSearchParams();  // To get token from URL\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Extract token from URL params (e.g., ?token=abc123)\r\n    const urlToken = searchParams.get(\"token\");\r\n    if (urlToken) {\r\n      setToken(urlToken);\r\n    }\r\n  }, [searchParams]);\r\n\r\n  const handleReset = async () => {\r\n    if (newPassword !== confirmPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n    if (!token.trim() || !newPassword.trim()) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n    try {\r\n      await authAPI.resetPassword(token, newPassword);\r\n      alert(\"Password reset successful. You can now log in.\");\r\n      navigate(\"/login\");\r\n    } catch (error) {\r\n      console.error(\"Reset password error:\", error);\r\n      const errorMessage = error.response?.data?.message || \"Error resetting password. Please check the token and try again.\";\r\n      alert(errorMessage);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"2rem\",\r\n        maxWidth: \"400px\",\r\n        margin: \"auto\",\r\n        fontFamily: \"Poppins, sans-serif\",\r\n      }}\r\n    >\r\n      <h2>Reset Password</h2>\r\n      <input\r\n        placeholder=\"Token (auto-filled from URL)\"\r\n        value={token}\r\n        onChange={(e) => setToken(e.target.value)}\r\n        required\r\n        style={{ width: \"100%\", padding: \"10px\", margin: \"10px 0\" }}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"New Password\"\r\n        value={newPassword}\r\n        onChange={(e) => setNewPassword(e.target.value)}\r\n        required\r\n        style={{ width: \"100%\", padding: \"10px\", margin: \"10px 0\" }}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Confirm Password\"\r\n        value={confirmPassword}\r\n        onChange={(e) => setConfirmPassword(e.target.value)}\r\n        required\r\n        style={{ width: \"100%\", padding: \"10px\", margin: \"10px 0\" }}\r\n      />\r\n      <button\r\n        onClick={handleReset}\r\n        style={{\r\n          width: \"100%\",\r\n          padding: \"10px\",\r\n          background: \"#007bff\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n        }}\r\n      >\r\n        Reset Password\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}