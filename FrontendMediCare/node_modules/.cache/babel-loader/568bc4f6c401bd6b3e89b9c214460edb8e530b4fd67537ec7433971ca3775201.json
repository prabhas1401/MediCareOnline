{"ast":null,"code":"// import axios from 'axios';\n\n// const API_BASE_URL = 'http://localhost:8080/api';\n\n// const api = axios.create({\n//   baseURL: API_BASE_URL,\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n// });\n\n// // Add JWT token to requests\n// api.interceptors.request.use(\n//   (config) => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       config.headers.Authorization = `Bearer ${token}`;\n//     }\n//     return config;\n//   },\n//   (error) => Promise.reject(error)\n// );\n\n// // Auth API\n// export const authAPI = {\n//   login: (data) => api.post('/auth/login', data),\n//   registerPatient: (data) => api.post('/auth/register/patient', data),\n//   registerDoctor: (data) => api.post('/auth/register/doctor', data),\n//   login: (data) => axios.post(`${API_BASE_URL}/auth/login`, data),\n//   forgotPassword: (email) => axios.post(`${API_BASE_URL}/auth/forgot-password`, { email }),\n//   resetPassword: (token, newPassword) => axios.post(`${API_BASE_URL}/auth/reset-password`, { token, newPassword }),\n// };\n\n// // Patient API\n// export const patientAPI = {\n//   getProfile: () => api.get('/patient/profile'),\n//   updateProfile: (data) => api.put('/patient/profile', data),\n//   getAppointments: () => api.get('/patient/appointments'),\n//   getPrescriptions: () => api.get('/patient/prescriptions'),\n// };\n\n// // Appointment API\n// export const appointmentAPI = {\n//   create: (data) => api.post('/appointments/request', data),\n//   confirmAfterPayment: (data) => api.post('/appointments/confirm-after-payment', data),\n//   cancel: (id) => api.put(`/appointments/${id}/cancel`),\n//   reschedule: (id, data) => api.put(`/appointments/${id}/reschedule`, data),  // Correct: PUT\n//   reschedule: (id, data) => api.put(`/appointments/${id}/reschedule`, data),\n//   getById: (id) => api.get(`/appointments/${id}`),\n//   getPending: (specialization) => api.get(`/appointments/pending/${specialization}`),\n//   getByDoctor: () => api.get('/appointments/doctor'),\n//   getByPatient: () => api.get('/appointments/patient'),\n//   lock: (id) => api.post(`/appointments/${id}/lock`),\n//   unlock: (id) => api.post(`/appointments/${id}/unlock`),\n//   schedule: (id, data) => api.post(`/appointments/${id}/schedule`, data),\n//   getCalendar: (doctorId, date) => api.get(`/appointments/doctor/${doctorId}/calendar/date/${date}`),\n//   blockSlot: (data) => api.post('/appointments/doctor/availability/block', data),\n//   createReconsult: (originalId) => api.post(`/appointments/${originalId}/reconsult`),  // Correct: Only one instance\n//   createReconsult: (originalId) => api.post(`/appointments/${originalId}/reconsult`),\n//   getReconsults: () => api.get('/appointments/doctor/reconsults'),\n//   startVisit: (id) => api.put(`/appointments/${id}/start-visit`),\n// };\n\n// // Prescription API\n// export const prescriptionAPI = {\n//   getPrescriptions: () => api.get('/prescriptions/by-current-user'),\n//   getById: (id) => api.get(`/prescriptions/${id}`),\n//   downloadPdf: (id) => api.get(`/prescriptions/${id}/download`, { responseType: 'blob' }),\n//   requestRefill: (id) => api.post(`/prescriptions/${id}/refill`),\n//   bookFollowUp: (id, data) => api.post(`/prescriptions/${id}/follow-up`, data),\n//   add: (appointmentId, data) => api.post(`/prescriptions/appointment/${appointmentId}`, data),\n// };\n\n// // Payment API\n// export const paymentAPI = {\n//   initiate: (data) => api.post('/payments/initiate', data),\n// };\n\n// // Doctor API\n// export const doctorAPI = {\n//   getProfile: () => api.get('/doctor/profile'),\n//   updateProfile: (data) => api.put('/doctor/profile', data),\n//   getAppointments: () => api.get('/doctor/appointments'),\n//   getPendingAppointments: () => api.get('/doctor/pending-appointments'),\n//   addPatient: (data) => api.post('/doctor/patients', data),\n//   rescheduleAppointment: (id, data) => api.post(`/doctor/appointments/${id}/reschedule`, data),  // Assuming backend uses POST for doctors; change to PUT if needed\n//   addPatient: (data) => api.post('/doctor/patients', data),  // Fixed path\n//   // rescheduleAppointment: (id, data) => api.put(`/doctor/appointments/${id}/reschedule`, data),\n//   getLeaves: () => api.get('/doctor/leaves'),\n//   addLeave: (data) => api.post('/doctor/leaves', data),\n//   getAllDoctors: () => api.get('/doctor/all'),\n//   blockDoctor: (adminId, doctorId) => api.put(`/admin/doctors/${doctorId}/block`, { adminUserId: adminId }),\n//   deleteDoctor: (adminId, doctorId) => api.put(`/admin/doctors/${doctorId}/delete`, { adminUserId: adminId }),\n//   createDoctor: (adminId, data) => api.post('/admin/doctors', { ...data, adminUserId }),\n//   updateDoctor: (adminId, doctorId, data) => api.put(`/admin/doctors/${doctorId}`, { ...data, adminUserId }),\n//   findBySpecialization: (spec, adminId) => api.get(`/admin/doctors/specialization/${spec}`, { params: { adminUserId } }),\n//   addPrescription: (id, data) => prescriptionAPI.add(id, data),\n//   scheduleReconsult: (id, data) => api.post(`/doctor/reconsult/${id}/schedule`, data),\n//   rescheduleReconsult: (id, data) => api.post(`/doctor/reconsult/${id}/reschedule`, data),\n//   getReconsults: () => api.get('/appointments/doctor/reconsults'),\n\n//   scheduleReconsult: (id, data) => api.post(`/doctor/reconsult/${id}/schedule`, data),  // Added\n// };\n\n// // Admin API\n// export const adminAPI = {\n//   getProfile: () => api.get('/admin/profile'),\n//   updateProfile: (data) => api.put('/admin/profile', data),\n//   getStats: () => api.get('/admin/stats'),\n//   getUsers: () => api.get('/admin/users'),\n//   blockUser: (id, status) => api.post(`/admin/users/${id}/status`, { status }),\n//   unblockUser: (id) => api.put(`/admin/users/${id}/unblock`),\n//   deleteUser: (id) => api.delete(`/admin/users/${id}`),\n//   getDoctors: () => api.get('/admin/doctors'),\n//   createDoctor: (data) => api.post('/admin/doctors', data),\n//   updateDoctor: (id, data) => api.put(`/admin/doctors/${id}`, data),\n//   deleteDoctor: (id) => api.delete(`/admin/doctors/${id}`),\n//   getPatients: () => api.get('/admin/patients'),\n//   createPatient: (data) => api.post('/admin/patients', data),\n//   updatePatient: (id, data) => api.put(`/admin/patients/${id}`, data),\n//   deletePatient: (id) => api.delete(`/admin/patients/${id}`),\n\n//   getAppointments: () => api.get('/admin/appointments'),\n//   getPrescriptions: () => api.get('/admin/prescriptions'),\n//   getPayments: () => api.get('/admin/payments'),\n//   getAdmins: () => api.get('/admin/admins'),\n//   createAdmin: (data) => api.post('/admin/admins', data),\n//   approveDoctor: (id) => api.post(`/admin/doctors/${id}/approve`),\n//   getPendingAppointments: () => api.get('/admin/appointments/pending'),\n//   getCancelledAppointments: () => api.get('/admin/appointments/cancelled'),\n//   approveAppointment: (id, data) => api.put(`/admin/appointments/${id}/approve`, data),\n//   cancelAppointment: (id, data) => api.post(`/admin/appointments/${id}/cancel`, data),\n//   // FIXED: Changed to PUT to match backend @PutMapping\n//   rescheduleAppointment: (id, data) => api.post(`/appointments/${id}/reschedule`, data),\n//   reassignAppointment: (id, data) => api.put(`/appointments/${id}/reassign`, data),\n//   archiveAppointment: (id) => api.put(`/appointments/${id}/archive`),\n//   getAllAppointments: () => api.get('/admin/appointments'),\n\n//   // rescheduleAppointment: (data) => api.put('/admin/appointments/reschedule', data),  // Changed to PUT\n//   reassignAppointment: (data) => api.put('/admin/appointments/reassign', data),  // Changed to PUT\n//   archiveAppointment: (id) => api.put(`/admin/appointments/${id}/archive`),  // Changed to PUT\n// };","map":{"version":3,"names":[],"sources":["/Users/poojav/Desktop/MediCareOnline/FrontendMediCare/src/services/api.jsx"],"sourcesContent":["// import axios from 'axios';\r\n\r\n// const API_BASE_URL = 'http://localhost:8080/api';\r\n\r\n// const api = axios.create({\r\n//   baseURL: API_BASE_URL,\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//   },\r\n// });\r\n\r\n// // Add JWT token to requests\r\n// api.interceptors.request.use(\r\n//   (config) => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//       config.headers.Authorization = `Bearer ${token}`;\r\n//     }\r\n//     return config;\r\n//   },\r\n//   (error) => Promise.reject(error)\r\n// );\r\n\r\n// // Auth API\r\n// export const authAPI = {\r\n//   login: (data) => api.post('/auth/login', data),\r\n//   registerPatient: (data) => api.post('/auth/register/patient', data),\r\n//   registerDoctor: (data) => api.post('/auth/register/doctor', data),\r\n//   login: (data) => axios.post(`${API_BASE_URL}/auth/login`, data),\r\n//   forgotPassword: (email) => axios.post(`${API_BASE_URL}/auth/forgot-password`, { email }),\r\n//   resetPassword: (token, newPassword) => axios.post(`${API_BASE_URL}/auth/reset-password`, { token, newPassword }),\r\n// };\r\n\r\n// // Patient API\r\n// export const patientAPI = {\r\n//   getProfile: () => api.get('/patient/profile'),\r\n//   updateProfile: (data) => api.put('/patient/profile', data),\r\n//   getAppointments: () => api.get('/patient/appointments'),\r\n//   getPrescriptions: () => api.get('/patient/prescriptions'),\r\n// };\r\n\r\n// // Appointment API\r\n// export const appointmentAPI = {\r\n//   create: (data) => api.post('/appointments/request', data),\r\n//   confirmAfterPayment: (data) => api.post('/appointments/confirm-after-payment', data),\r\n//   cancel: (id) => api.put(`/appointments/${id}/cancel`),\r\n//   reschedule: (id, data) => api.put(`/appointments/${id}/reschedule`, data),  // Correct: PUT\r\n//   reschedule: (id, data) => api.put(`/appointments/${id}/reschedule`, data),\r\n//   getById: (id) => api.get(`/appointments/${id}`),\r\n//   getPending: (specialization) => api.get(`/appointments/pending/${specialization}`),\r\n//   getByDoctor: () => api.get('/appointments/doctor'),\r\n//   getByPatient: () => api.get('/appointments/patient'),\r\n//   lock: (id) => api.post(`/appointments/${id}/lock`),\r\n//   unlock: (id) => api.post(`/appointments/${id}/unlock`),\r\n//   schedule: (id, data) => api.post(`/appointments/${id}/schedule`, data),\r\n//   getCalendar: (doctorId, date) => api.get(`/appointments/doctor/${doctorId}/calendar/date/${date}`),\r\n//   blockSlot: (data) => api.post('/appointments/doctor/availability/block', data),\r\n//   createReconsult: (originalId) => api.post(`/appointments/${originalId}/reconsult`),  // Correct: Only one instance\r\n//   createReconsult: (originalId) => api.post(`/appointments/${originalId}/reconsult`),\r\n//   getReconsults: () => api.get('/appointments/doctor/reconsults'),\r\n//   startVisit: (id) => api.put(`/appointments/${id}/start-visit`),\r\n// };\r\n\r\n// // Prescription API\r\n// export const prescriptionAPI = {\r\n//   getPrescriptions: () => api.get('/prescriptions/by-current-user'),\r\n//   getById: (id) => api.get(`/prescriptions/${id}`),\r\n//   downloadPdf: (id) => api.get(`/prescriptions/${id}/download`, { responseType: 'blob' }),\r\n//   requestRefill: (id) => api.post(`/prescriptions/${id}/refill`),\r\n//   bookFollowUp: (id, data) => api.post(`/prescriptions/${id}/follow-up`, data),\r\n//   add: (appointmentId, data) => api.post(`/prescriptions/appointment/${appointmentId}`, data),\r\n// };\r\n\r\n// // Payment API\r\n// export const paymentAPI = {\r\n//   initiate: (data) => api.post('/payments/initiate', data),\r\n// };\r\n\r\n// // Doctor API\r\n// export const doctorAPI = {\r\n//   getProfile: () => api.get('/doctor/profile'),\r\n//   updateProfile: (data) => api.put('/doctor/profile', data),\r\n//   getAppointments: () => api.get('/doctor/appointments'),\r\n//   getPendingAppointments: () => api.get('/doctor/pending-appointments'),\r\n//   addPatient: (data) => api.post('/doctor/patients', data),\r\n//   rescheduleAppointment: (id, data) => api.post(`/doctor/appointments/${id}/reschedule`, data),  // Assuming backend uses POST for doctors; change to PUT if needed\r\n//   addPatient: (data) => api.post('/doctor/patients', data),  // Fixed path\r\n//   // rescheduleAppointment: (id, data) => api.put(`/doctor/appointments/${id}/reschedule`, data),\r\n//   getLeaves: () => api.get('/doctor/leaves'),\r\n//   addLeave: (data) => api.post('/doctor/leaves', data),\r\n//   getAllDoctors: () => api.get('/doctor/all'),\r\n//   blockDoctor: (adminId, doctorId) => api.put(`/admin/doctors/${doctorId}/block`, { adminUserId: adminId }),\r\n//   deleteDoctor: (adminId, doctorId) => api.put(`/admin/doctors/${doctorId}/delete`, { adminUserId: adminId }),\r\n//   createDoctor: (adminId, data) => api.post('/admin/doctors', { ...data, adminUserId }),\r\n//   updateDoctor: (adminId, doctorId, data) => api.put(`/admin/doctors/${doctorId}`, { ...data, adminUserId }),\r\n//   findBySpecialization: (spec, adminId) => api.get(`/admin/doctors/specialization/${spec}`, { params: { adminUserId } }),\r\n//   addPrescription: (id, data) => prescriptionAPI.add(id, data),\r\n//   scheduleReconsult: (id, data) => api.post(`/doctor/reconsult/${id}/schedule`, data),\r\n//   rescheduleReconsult: (id, data) => api.post(`/doctor/reconsult/${id}/reschedule`, data),\r\n//   getReconsults: () => api.get('/appointments/doctor/reconsults'),\r\n\r\n//   scheduleReconsult: (id, data) => api.post(`/doctor/reconsult/${id}/schedule`, data),  // Added\r\n// };\r\n\r\n// // Admin API\r\n// export const adminAPI = {\r\n//   getProfile: () => api.get('/admin/profile'),\r\n//   updateProfile: (data) => api.put('/admin/profile', data),\r\n//   getStats: () => api.get('/admin/stats'),\r\n//   getUsers: () => api.get('/admin/users'),\r\n//   blockUser: (id, status) => api.post(`/admin/users/${id}/status`, { status }),\r\n//   unblockUser: (id) => api.put(`/admin/users/${id}/unblock`),\r\n//   deleteUser: (id) => api.delete(`/admin/users/${id}`),\r\n//   getDoctors: () => api.get('/admin/doctors'),\r\n//   createDoctor: (data) => api.post('/admin/doctors', data),\r\n//   updateDoctor: (id, data) => api.put(`/admin/doctors/${id}`, data),\r\n//   deleteDoctor: (id) => api.delete(`/admin/doctors/${id}`),\r\n//   getPatients: () => api.get('/admin/patients'),\r\n//   createPatient: (data) => api.post('/admin/patients', data),\r\n//   updatePatient: (id, data) => api.put(`/admin/patients/${id}`, data),\r\n//   deletePatient: (id) => api.delete(`/admin/patients/${id}`),\r\n\r\n//   getAppointments: () => api.get('/admin/appointments'),\r\n//   getPrescriptions: () => api.get('/admin/prescriptions'),\r\n//   getPayments: () => api.get('/admin/payments'),\r\n//   getAdmins: () => api.get('/admin/admins'),\r\n//   createAdmin: (data) => api.post('/admin/admins', data),\r\n//   approveDoctor: (id) => api.post(`/admin/doctors/${id}/approve`),\r\n//   getPendingAppointments: () => api.get('/admin/appointments/pending'),\r\n//   getCancelledAppointments: () => api.get('/admin/appointments/cancelled'),\r\n//   approveAppointment: (id, data) => api.put(`/admin/appointments/${id}/approve`, data),\r\n//   cancelAppointment: (id, data) => api.post(`/admin/appointments/${id}/cancel`, data),\r\n//   // FIXED: Changed to PUT to match backend @PutMapping\r\n//   rescheduleAppointment: (id, data) => api.post(`/appointments/${id}/reschedule`, data),\r\n//   reassignAppointment: (id, data) => api.put(`/appointments/${id}/reassign`, data),\r\n//   archiveAppointment: (id) => api.put(`/appointments/${id}/archive`),\r\n//   getAllAppointments: () => api.get('/admin/appointments'),\r\n\r\n//   // rescheduleAppointment: (data) => api.put('/admin/appointments/reschedule', data),  // Changed to PUT\r\n//   reassignAppointment: (data) => api.put('/admin/appointments/reassign', data),  // Changed to PUT\r\n//   archiveAppointment: (id) => api.put(`/admin/appointments/${id}/archive`),  // Changed to PUT\r\n// };\r\n\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}