{"ast":null,"code":"var _jsxFileName = \"/Users/poojav/Desktop/MediCareOnline/FrontendMediCare/src/components/AdminDashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { adminAPI } from '../services/api';\n\n// const AdminDashboard = () => {\n//   const [activeSection, setActiveSection] = useState('doctors');\n//   const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n//   const [doctors, setDoctors] = useState([]);\n//   const [patients, setPatients] = useState([]);\n//   const [admins, setAdmins] = useState([]);\n//   const [allAppointments, setAllAppointments] = useState([]);  // Combined list for all appointments\n//   const [newDoctor, setNewDoctor] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', specialization: '', qualification: '', experienceYears: '' });\n//   const [newPatient, setNewPatient] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', gender: '', dateOfBirth: '' });\n//   const [newAdmin, setNewAdmin] = useState({ fullName: '', email: '', phoneNumber: '', rawPassword: '', confirmPassword: '', superAdmin: false });\n//   const [reassignData, setReassignData] = useState({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });\n//   const [rescheduleData, setRescheduleData] = useState({ appointmentId: '', newRequestedDateTime: '', reason: '' });\n//   const [filters, setFilters] = useState({ doctors: 'all', patients: 'all', admins: 'all', appointments: 'all' });  // Added appointments filter\n//   const [loading, setLoading] = useState(false);\n//   const [showApproveModal, setShowApproveModal] = useState(false);\n//   const [approveData, setApproveData] = useState({ appointmentId: '', doctorUserId: '', requestedDateTime: '' });\n//   const [showRescheduleModal, setShowRescheduleModal] = useState(false);  // For cancelled appointments\n//   const [rescheduleModalData, setRescheduleModalData] = useState({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });  // For cancelled\n//   const [showPendingRescheduleModal, setShowPendingRescheduleModal] = useState(false);  // For pending appointments\n//   const [pendingRescheduleData, setPendingRescheduleData] = useState({ appointmentId: '', newRequestedDateTime: '', reason: '' });  // For pending\n//   const [error, setError] = useState('');\n//   const [selectedAppointment, setSelectedAppointment] = useState(null);\n//      const [newDateTime, setNewDateTime] = useState('');\n//      const [rescheduleModal, setRescheduleModal] = useState(false);\n\n//   useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const fetchData = async () => {\n//     setLoading(true);\n//     try {\n//       const [d, p, a, appts] = await Promise.all([\n//         adminAPI.getDoctors(),\n//         adminAPI.getPatients(),\n//         adminAPI.getAdmins(),\n//         adminAPI.getAllAppointments()  // New: Fetch all appointments\n//       ]);\n//       setDoctors(d.data || []);\n//       setPatients(p.data || []);\n//       setAdmins(a.data || []);\n//       setAllAppointments(appts.data || []);\n\n//       console.log('Fetched doctors:', d.data);\n//       console.log('Fetched patients:', p.data);\n//       console.log('Fetched admins:', a.data);\n//       console.log('Fetched all appointments:', appts.data);\n//     } catch (err) {\n//       console.error('Fetch error details:', err);\n//       alert('Error fetching data: ' + (err.response?.data?.message || err.message));\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const createDoctor = async () => {\n//     console.log('Create Doctor button clicked');\n//     if (newDoctor.rawPassword !== newDoctor.confirmPassword) {\n//       alert('Passwords do not match');\n//       return;\n//     }\n//     try {\n//       await adminAPI.createDoctor(newDoctor);\n//       setNewDoctor({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', specialization: '', qualification: '', experienceYears: '' });\n//       fetchData();\n//       alert('Doctor created successfully!');\n//     } catch (err) {\n//       alert('Error creating doctor: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const createPatient = async () => {\n//     console.log('Create Patient button clicked');\n//     if (newPatient.rawPassword !== newPatient.confirmPassword) {\n//       alert('Passwords do not match');\n//       return;\n//     }\n//     try {\n//       await adminAPI.createPatient(newPatient);\n//       setNewPatient({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', gender: '', dateOfBirth: '' });\n//       fetchData();\n//       alert('Patient created successfully!');\n//     } catch (err) {\n//       alert('Error creating patient: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const createAdmin = async () => {\n//     console.log('Create Admin button clicked');\n//     if (newAdmin.rawPassword !== newAdmin.confirmPassword) {\n//       alert('Passwords do not match');\n//       return;\n//     }\n//     try {\n//       await adminAPI.createAdmin(newAdmin);\n//       setNewAdmin({ fullName: '', email: '', phoneNumber: '', rawPassword: '', confirmPassword: '', superAdmin: false });\n//       fetchData();\n//       alert('Admin created successfully!');\n//     } catch (err) {\n//       alert('Error creating admin: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const approveDoctor = async (id) => {\n//     console.log('Approve Doctor button clicked for ID:', id);\n//     try {\n//       await adminAPI.approveDoctor(id);\n//       fetchData();\n//       alert('Doctor approved!');\n//     } catch (err) {\n//       alert('Error approving doctor: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const blockUser = async (id, status) => {\n//     console.log('Block User button clicked for ID:', id, 'Status:', status);\n//     try {\n//       await adminAPI.blockUser(id, status);\n//       fetchData();\n//       alert('User status updated!');\n//     } catch (err) {\n//       alert('Error updating user status: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const handleApprove = (appointmentId) => {\n//     console.log('Approve Appointment button clicked for ID:', appointmentId);\n//     const now = new Date();\n//     const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n//     nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n//     if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n//     if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n//     setApproveData({ appointmentId, doctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16) });\n//     setShowApproveModal(true);\n//   };\n\n//   const submitApprove = async () => {\n//     const { appointmentId, doctorUserId, requestedDateTime } = approveData;\n//     if (!doctorUserId || !requestedDateTime) {\n//       setError('Please select a doctor and date/time.');\n//       return;\n//     }\n//     const doctorExists = doctors.some(d => d.userId == doctorUserId);\n//     if (!doctorExists) {\n//       setError('Invalid Doctor ID. Please select from the list.');\n//       return;\n//     }\n//     const dt = new Date(requestedDateTime);\n//     const now = new Date();\n//     if (dt <= now) {\n//       setError('Date/time must be in the future.');\n//       return;\n//     }\n//     const hours = dt.getHours();\n//     const minutes = dt.getMinutes();\n//     if (hours < 9 || hours >= 17 || (hours === 12 && minutes >= 0) || (hours === 13 && minutes < 60)) {\n//       setError('Slot outside working hours. Working hours: 9:00 AM - 5:00 PM, excluding lunch 12:00-1:00 PM.');\n//       return;\n//     }\n//     if (minutes % 20 !== 0) {\n//       setError('Slot must align to 20-minute boundary (e.g., 09:00, 09:20).');\n//       return;\n//     }\n//     try {\n//       await adminAPI.approveAppointment(appointmentId, { doctorUserId: parseInt(doctorUserId), requestedDateTime });\n//       setShowApproveModal(false);\n//       setApproveData({ appointmentId: '', doctorUserId: '', requestedDateTime: '' });\n//       setError('');\n//       fetchData();\n//       alert('Appointment approved!');\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Error approving appointment: ' + err.message);\n//     }\n//   };\n\n//   const cancelAppointment = async (id) => {\n//     console.log('Cancel Appointment button clicked for ID:', id);\n//     const reason = prompt('Enter cancellation reason:');\n//     if (!reason) return;\n//     try {\n//       await adminAPI.cancelAppointment(id, { reason });\n//       fetchData();\n//       alert('Appointment cancelled!');\n//     } catch (err) {\n//       alert('Error cancelling appointment: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const viewDetails = (appointment) => {\n//     console.log('View Details button clicked for appointment:', appointment.appointmentId);\n//     alert('Appointment Details:\\n' + JSON.stringify(appointment, null, 2));\n//   };\n\n//   // const rescheduleAppointment = async () => {\n//   //   try {\n//   //     // UPDATED: Pass appointmentId as path param, and data as body\n//   //     await adminAPI.rescheduleAppointment(rescheduleData.appointmentId, {\n//   //       newRequestedDateTime: rescheduleData.newRequestedDateTime,\n//   //       reason: rescheduleData.reason\n//   //     });\n//   //     setRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\n//   //     fetchData();\n//   //     alert('Appointment rescheduled successfully!');\n//   //   } catch (err) {\n//   //     alert('Error rescheduling appointment: ' + (err.response?.data?.message || err.message));\n//   //   }\n//   // };\n\n//   const rescheduleCancelled = async (appointmentId) => {\n//     console.log('Re-schedule Cancelled button clicked for ID:', appointmentId);\n//     const now = new Date();\n//     const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n//     nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n//     if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n//     if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n//     // NEW: Set selectedAppointment to the current appointment for modal display\n//     const appt = allAppointments.find(a => a.appointmentId === appointmentId);\n//     setSelectedAppointment(appt);\n//     setRescheduleModalData({ appointmentId, newDoctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\n//     setShowRescheduleModal(true);\n//   };\n//   const reschedulePending = async (appointmentId) => {\n//     console.log('Reschedule Pending button clicked for ID:', appointmentId);\n//     const now = new Date();\n//     const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n//     nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n//     if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n//     if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n//     // NEW: Set selectedAppointment\n//     const appt = allAppointments.find(a => a.appointmentId === appointmentId);\n//     setSelectedAppointment(appt);\n//     setPendingRescheduleData({ appointmentId, newRequestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\n//     setShowPendingRescheduleModal(true);\n//   };\n//   const rescheduleAppointment = async () => {\n//     try {\n//       // UPDATED: Use rescheduleData instead of  variables\n//       await adminAPI.rescheduleAppointment(rescheduleData.appointmentId, {\n//         newRequestedDateTime: rescheduleData.newRequestedDateTime,\n//         reason: rescheduleData.reason\n//       });\n//       setRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\n//       fetchData();\n//       alert('Appointment rescheduled successfully!');\n//     } catch (err) {\n//       alert('Error rescheduling: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const reassignAppointment = async () => {\n//     try {\n//       // UPDATED: Pass appointmentId as path param, and data as body\n//       await adminAPI.reassignAppointment(reassignData.appointmentId, {\n//         newDoctorUserId: reassignData.newDoctorUserId,\n//         requestedDateTime: reassignData.requestedDateTime,\n//         reason: reassignData.reason\n//       });\n//       setReassignData({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });\n//       fetchData();\n//       alert('Appointment reassigned successfully!');\n//     } catch (err) {\n//       alert('Error reassigning appointment: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   // const rescheduleCancelled = async (appointmentId) => {\n//   //   console.log('Re-schedule Cancelled button clicked for ID:', appointmentId);\n//   //   const now = new Date();\n//   //   const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n//   //   nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n//   //   if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n//   //   if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n//   //   setRescheduleModalData({ appointmentId, newDoctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\n//   //   setShowRescheduleModal(true);\n//   // };\n\n//   const submitReschedule = async () => {\n//     const { appointmentId, newDoctorUserId, requestedDateTime, reason } = rescheduleModalData;\n//     if (!newDoctorUserId || !requestedDateTime) {\n//       setError('Please select a doctor and date/time.');\n//       return;\n//     }\n//     const doctorExists = doctors.some(d => d.userId == newDoctorUserId);\n//     if (!doctorExists) {\n//       setError('Invalid Doctor ID. Please select from the list.');\n//       return;\n//     }\n//     const dt = new Date(requestedDateTime);\n//     const now = new Date();\n//     if (dt <= now) {\n//       setError('Date/time must be in the future.');\n//       return;\n//     }\n//     const hours = dt.getHours();\n//     const minutes = dt.getMinutes();\n//     if (hours < 9 || hours >= 17 || (hours === 12 && minutes >= 0) || (hours === 13 && minutes < 60)) {\n//       setError('Slot outside working hours. Working hours: 9:00 AM - 5:00 PM, excluding lunch 12:00-1:00 PM.');\n//       return;\n//     }\n//     if (minutes % 20 !== 0) {\n//       setError('Slot must align to 20-minute boundary (e.g., 09:00, 09:20).');\n//       return;\n//     }\n//     try {\n//       await adminAPI.reassignAppointment({ appointmentId: parseInt(appointmentId), newDoctorUserId: parseInt(newDoctorUserId), requestedDateTime, reason });\n//       setShowRescheduleModal(false);\n//       setRescheduleModalData({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });\n//       setError('');\n//       fetchData();\n//       alert('Appointment rescheduled!');\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Error rescheduling appointment: ' + err.message);\n//     }\n//   };\n\n//   // const reschedulePending = async (appointmentId) => {\n//   //   console.log('Reschedule Pending button clicked for ID:', appointmentId);\n//   //   const now = new Date();\n//   //   const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n//   //   nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n//   //   if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n//   //   if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n//   //   setPendingRescheduleData({ appointmentId, newRequestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\n//   //   setShowPendingRescheduleModal(true);\n//   // };\n\n//   const submitPendingReschedule = async () => {\n//     const { appointmentId, newRequestedDateTime, reason } = pendingRescheduleData;\n//     if (!newRequestedDateTime) {\n//       setError('Please select a date/time.');\n//       return;\n//     }\n//     const dt = new Date(newRequestedDateTime);\n//     const now = new Date();\n//     if (dt <= now) {\n//       setError('Date/time must be in the future.');\n//       return;\n//     }\n//     const hours = dt.getHours();\n//     const minutes = dt.getMinutes();\n//     if (hours < 9 || hours >= 17 || (hours === 12 && minutes >= 0) || (hours === 13 && minutes < 60)) {\n//       setError('Slot outside working hours.');\n//       return;\n//     }\n//     if (minutes % 20 !== 0) {\n//       setError('Slot must align to 20-minute boundary.');\n//       return;\n//     }\n//     try {\n//       await adminAPI.rescheduleAppointment({ appointmentId: parseInt(appointmentId), newRequestedDateTime, reason });\n//       setShowPendingRescheduleModal(false);\n//       setPendingRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\n//       setError('');\n//       fetchData();\n//       alert('Appointment rescheduled!');\n//     } catch (err) {\n//       setError(err.response?.data?.message || 'Error rescheduling appointment: ' + err.message);\n//     }\n//   };\n\n//   const archiveAppointment = async (id) => {\n//     try {\n//       await adminAPI.archiveAppointment(id);\n//       fetchData();\n//       alert('Appointment archived!');\n//     } catch (err) {\n//       alert('Error archiving appointment: ' + (err.response?.data?.message || err.message));\n//     }\n//   };\n\n//   const filteredDoctors = doctors.filter(d => filters.doctors === 'all' || d.status.toLowerCase() === filters.doctors);\n//   const filteredPatients = patients.filter(p => filters.patients === 'all' || p.status.toLowerCase() === filters.patients);\n//   const filteredAdmins = admins.filter(a => filters.admins === 'all' || a.status.toLowerCase() === filters.admins);\n//   const filteredAppointments = allAppointments.filter(ap => {\n//     if (!ap) return false;\n//     const searchTerm = filters.appointments.toLowerCase();\n//     return searchTerm === 'all' || ap.status.toLowerCase() === searchTerm;\n//   });\n\n//   const tableStyle = {\n//     width: '100%',\n//     borderCollapse: 'collapse',\n//     marginTop: '1rem',\n//     fontSize: '0.9rem',\n//   };\n//   const thStyle = {\n//     border: '1px solid #ddd',\n//     padding: '12px',\n//     backgroundColor: '#f2f2f2',\n//     textAlign: 'left',\n//   };\n//   const tdStyle = {\n//     border: '1px solid #ddd',\n//     padding: '12px',\n//   };\n//   const trHoverStyle = {\n//     backgroundColor: '#f5f5f5',\n//   };\n//   const buttonStyle = {\n//     padding: '6px 12px',\n//     margin: '2px',\n//     border: 'none',\n//     borderRadius: '4px',\n//     cursor: 'pointer',\n//     fontSize: '0.8rem',\n//   };\n\n//   return (\n//     <div style={{ display: 'flex', fontFamily: 'Poppins, sans-serif', background: '#f4f8fb', minHeight: '100vh' }}>\n//       <div style={{ width: sidebarCollapsed ? '0' : '250px', background: '#007bff', color: 'black', padding: '1rem', transition: 'width 0.3s', overflow: 'hidden' }}>\n//         <button onClick={() => { console.log('Sidebar toggle clicked'); setSidebarCollapsed(!sidebarCollapsed); }} style={{ background: 'none', border: 'none', color: 'black', fontSize: '1.5rem', cursor: 'pointer', fontWeight: 'bold' }}>\n//           ☰\n//         </button>\n//         <h2 style={{ color: 'black', fontWeight: 'bold' }}>Admin Menu</h2>\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\n//           <li><button onClick={() => { console.log('Create Doctor section clicked'); setActiveSection('createDoctor'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Create Doctor</button></li>\n//           <li><button onClick={() => { console.log('Create Patient section clicked'); setActiveSection('createPatient'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Create Patient</button></li>\n//           <li><button onClick={() => { console.log('Create Admin section clicked'); setActiveSection('createAdmin'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Create Admin</button></li>\n//           <li><button onClick={() => { console.log('Doctors section clicked'); setActiveSection('doctors'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Doctors</button></li>\n//           <li><button onClick={() => { console.log('Patients section clicked'); setActiveSection('patients'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Patients</button></li>\n//           <li><button onClick={() => { console.log('Admins section clicked'); setActiveSection('admins'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Admins</button></li>\n//           <li><button onClick={() => { console.log('Appointments section clicked'); setActiveSection('appointments'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Appointments</button></li>  \n//           <li><button onClick={() => { console.log('Reschedule Appointment section clicked'); setActiveSection('rescheduleAppointment'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Reschedule Appointment</button></li>\n//           <li><button onClick={() => { console.log('Reassign Appointment section clicked'); setActiveSection('reassignAppointment'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Reassign Appointment</button></li>\n//         </ul>\n//       </div>\n//       <div style={{ flex: 1, padding: '2rem', display: 'flex', flexDirection: 'column' }}>\n//         {loading && <p>Loading...</p>}\n//         {error && <p style={{ color: 'red' }}>{error}</p>}\n//         <div style={{ display: activeSection === 'createDoctor' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Create Doctor</h3>\n//             <form onSubmit={(e) => { e.preventDefault(); createDoctor(); }}>\n//               <input type=\"text\" placeholder=\"Full Name\" value={newDoctor.fullName} onChange={(e) => setNewDoctor({ ...newDoctor, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"email\" placeholder=\"Email\" value={newDoctor.emailId} onChange={(e) => setNewDoctor({ ...newDoctor, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"text\" placeholder=\"Phone\" value={newDoctor.phoneNumber} onChange={(e) => setNewDoctor({ ...newDoctor, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"password\" placeholder=\"Password\" value={newDoctor.rawPassword} onChange={(e) => setNewDoctor({ ...newDoctor, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"password\" placeholder=\"Confirm Password\" value={newDoctor.confirmPassword} onChange={(e) => setNewDoctor({ ...newDoctor, confirmPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}/>\n//               <select value={newDoctor.specialization} onChange={(e) => setNewDoctor({ ...newDoctor, specialization: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\n//                 <option value=\"\">Select Specialization</option>\n//                 <option value=\"CARDIOLOGIST\">Cardiologist</option>\n//                 <option value=\"ORTHOPEDIC\">Orthopedic</option>\n//                 <option value=\"DENTIST\">Dentist</option>\n//                 <option value=\"GYNAECOLOGIST\">Gynaecologist</option>\n//                 <option value=\"NEUROLOGIST\">Neurologist</option>\n//                 <option value=\"GASTROENTEROLOGIST\">Gastroenterologist</option>\n//                 <option value=\"PEDIATRICS\">Pediatrics</option>\n//                 <option value=\"RADIOLOGY\">Radiology</option>\n//                 <option value=\"GENERAL_PHYSICIAN\">General Physician</option>\n//                 <option value=\"OTOLARYNGOLOGIST_ENT\">Otolaryngologist ENT</option>\n//                 <option value=\"ENDOCRINOLOGIST\">Endocrinologist</option>\n//                 <option value=\"ONCOLOGY\">Oncology</option>\n//               </select>\n//               <input type=\"text\" placeholder=\"Qualification\" value={newDoctor.qualification} onChange={(e) => setNewDoctor({ ...newDoctor, qualification: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"number\" placeholder=\"Experience Years\" value={newDoctor.experienceYears} onChange={(e) => setNewDoctor({ ...newDoctor, experienceYears: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Create Doctor</button>\n//             </form>\n//           </div>\n//         </div>\n//         <div style={{ display: activeSection === 'createPatient' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Create Patient</h3>\n//             <form onSubmit={(e) => { e.preventDefault(); createPatient(); }}>\n//               <input type=\"text\" placeholder=\"Full Name\" value={newPatient.fullName} onChange={(e) => setNewPatient({ ...newPatient, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"email\" placeholder=\"Email\" value={newPatient.emailId} onChange={(e) => setNewPatient({ ...newPatient, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"text\" placeholder=\"Phone\" value={newPatient.phoneNumber} onChange={(e) => setNewPatient({ ...newPatient, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"password\" placeholder=\"Password\" value={newPatient.rawPassword} onChange={(e) => setNewPatient({ ...newPatient, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"password\" placeholder=\"Confirm Password\" value={newPatient.confirmPassword} onChange={(e) => setNewPatient({ ...newPatient, confirmPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <select value={newPatient.gender} onChange={(e) => setNewPatient({ ...newPatient, gender: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\n//                 <option value=\"\">Select Gender</option>\n//                 <option value=\"MALE\">Male</option>\n//                 <option value=\"FEMALE\">Female</option>\n//                 <option value=\"OTHER\">Other</option>\n//               </select>\n//               <input type=\"date\" value={newPatient.dateOfBirth} onChange={(e) => setNewPatient({ ...newPatient, dateOfBirth: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Create Patient</button>\n//             </form>\n//           </div>\n//         </div>\n//         <div style={{ display: activeSection === 'createAdmin' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Create Admin</h3>\n//             <form onSubmit={(e) => { e.preventDefault(); createAdmin(); }}>\n//               <input type=\"text\" placeholder=\"Full Name\" value={newAdmin.fullName} onChange={(e) => setNewAdmin({ ...newAdmin, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"email\" placeholder=\"Email\" value={newAdmin.email} onChange={(e) => setNewAdmin({ ...newAdmin, email: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"text\" placeholder=\"Phone\" value={newAdmin.phoneNumber} onChange={(e) => setNewAdmin({ ...newAdmin, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"password\" placeholder=\"Password\" value={newAdmin.rawPassword} onChange={(e) => setNewAdmin({ ...newAdmin, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"password\" placeholder=\"Confirm Password\" value={newAdmin.confirmPassword} onChange={(e) => setNewAdmin({ ...newAdmin, confirmPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <label><input type=\"checkbox\" checked={newAdmin.superAdmin} onChange={(e) => setNewAdmin({ ...newAdmin, superAdmin: e.target.checked })} /> Super Admin</label>\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Create Admin</button>\n//             </form>\n//           </div>\n//         </div>\n//         <div style={{ display: activeSection === 'doctors' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Doctors</h3>\n//             <table style={tableStyle}>\n//               <thead>\n//                 <tr>\n//                   <th style={thStyle}>Name</th>\n//                   <th style={thStyle}>Status</th>\n//                   <th style={thStyle}>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredDoctors.map((d, index) => (\n//                   <tr key={d.userId} style={index % 2 === 0 ? {} : trHoverStyle} onMouseEnter={(e) => e.target.style.backgroundColor = '#e9ecef'} onMouseLeave={(e) => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5'}>\n//                     <td style={tdStyle}>{d.fullName}</td>\n//                     <td style={tdStyle}>{d.status}</td>\n//                     <td style={tdStyle}>\n//                       <button onClick={() => approveDoctor(d.userId)} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Approve</button>\n//                       <button onClick={() => blockUser(d.userId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Block</button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//           <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\n//             <h4>Filters</h4>\n//             <select value={filters.doctors} onChange={(e) => setFilters({ ...filters, doctors: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\n//               <option value=\"all\">All</option>\n//               <option value=\"active\">Active</option>\n//               <option value=\"inactive\">Inactive</option>\n//               <option value=\"approved\">Approved</option>\n//               <option value=\"blocked\">Blocked</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div style={{ display: activeSection === 'patients' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Patients</h3>\n//             <table style={tableStyle}>\n//               <thead>\n//                 <tr>\n//                   <th style={thStyle}>Name</th>\n//                   <th style={thStyle}>Status</th>\n//                   <th style={thStyle}>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredPatients.map((p, index) => (\n//                   <tr key={p.userId} style={index % 2 === 0 ? {} : trHoverStyle} onMouseEnter={(e) => e.target.style.backgroundColor = '#e9ecef'} onMouseLeave={(e) => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5'}>\n//                     <td style={tdStyle}>{p.fullName}</td>\n//                     <td style={tdStyle}>{p.status}</td>\n//                     <td style={tdStyle}>\n//                       <button onClick={() => blockUser(p.userId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Block</button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//           <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\n//             <h4>Filters</h4>\n//             <select value={filters.patients} onChange={(e) => setFilters({ ...filters, patients: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\n//               <option value=\"all\">All</option>\n//               <option value=\"active\">Active</option>\n//               <option value=\"inactive\">Inactive</option>\n//               <option value=\"blocked\">Blocked</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div style={{ display: activeSection === 'admins' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Admins</h3>\n//             <table style={tableStyle}>\n//               <thead>\n//                 <tr>\n//                   <th style={thStyle}>Name</th>\n//                   <th style={thStyle}>Status</th>\n//                   <th style={thStyle}>Super Admin</th>\n//                   <th style={thStyle}>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredAdmins.map((a, index) => (\n//                   <tr key={a.adminId} style={index % 2 === 0 ? {} : trHoverStyle} onMouseEnter={(e) => e.target.style.backgroundColor = '#e9ecef'} onMouseLeave={(e) => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5'}>\n//                     <td style={tdStyle}>{a.fullName}</td>\n//                     <td style={tdStyle}>{a.status}</td>\n//                     <td style={tdStyle}>{a.superAdmin ? 'Yes' : 'No'}</td>\n//                     <td style={tdStyle}>\n//                       <button onClick={() => blockUser(a.adminId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Block</button>\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//           <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\n//             <h4>Filters</h4>\n//             <select value={filters.admins} onChange={(e) => setFilters({ ...filters, admins: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\n//               <option value=\"all\">All</option>\n//               <option value=\"active\">Active</option>\n//               <option value=\"inactive\">Inactive</option>\n//               <option value=\"blocked\">Blocked</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div style={{ display: activeSection === 'appointments' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>All Appointments</h3>\n//             <table style={tableStyle}>\n//               <thead>\n//                 <tr>\n//                   <th style={thStyle}>Appointment ID</th>\n//                   <th style={thStyle}>Patient Name & ID</th>\n//                   <th style={thStyle}>Doctor Name & Specialization</th>\n//                   <th style={thStyle}>Date & Time</th>\n//                   <th style={thStyle}>Status</th>\n//                   <th style={thStyle}>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredAppointments.length > 0 ? (\n//                   filteredAppointments.map((ap, index) => (\n//                     <tr key={ap.appointmentId || index} style={index % 2 === 0 ? {} : trHoverStyle} onMouseEnter={(e) => e.target.style.backgroundColor = '#e9ecef'} onMouseLeave={(e) => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5'}>\n//                       <td style={tdStyle}>{ap.appointmentId}</td>\n//                       <td style={tdStyle}>{ap.patient?.fullName || 'N/A'} ({ap.patient?.userId || 'N/A'})</td>\n//                       <td style={tdStyle}>{ap.doctor ? `${ap.doctor.fullName} (${ap.doctor.specialization})` : 'Not Assigned'}</td>\n//                       <td style={tdStyle}>{ap.scheduledDateTime || ap.preferredDate || 'N/A'}</td>\n//                       <td style={tdStyle}>{ap.status}</td>\n//                       <td style={tdStyle}>\n//                         {ap.status === 'PENDING' && (\n//                           <>\n//                             <button onClick={() => handleApprove(ap.appointmentId)} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Approve</button>\n//                             <button onClick={() => reschedulePending(ap.appointmentId)} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Reschedule</button>\n//                             <button onClick={() => cancelAppointment(ap.appointmentId)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Cancel</button>\n//                           </>\n//                         )}\n//                         {ap.status === 'CANCELLED' && (\n//                           <>\n//                             <button onClick={() => rescheduleCancelled(ap.appointmentId)} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Re-schedule</button>\n//                             <button onClick={() => archiveAppointment(ap.appointmentId)} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Archive</button>\n//                           </>\n//                         )}\n//                         <button onClick={() => viewDetails(ap)} style={{ ...buttonStyle, background: '#17a2b8', color: 'white' }}>View Details</button>\n//                       </td>\n//                     </tr>\n//                   ))\n//                 ) : (\n//                   <tr>\n//                     <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px' }}>No appointments available.</td>\n//                   </tr>\n//                 )}\n//               </tbody>\n//             </table>\n//           </div>\n//           <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\n//             <h4>Filters</h4>\n//             <select value={filters.appointments} onChange={(e) => setFilters({ ...filters, appointments: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\n//               <option value=\"all\">All</option>\n//               <option value=\"pending\">Pending</option>\n//               <option value=\"confirmed\">Confirmed</option>\n//               <option value=\"cancelled\">Cancelled</option>\n//             </select>\n//           </div>\n//         </div>\n//         <div style={{ display: activeSection === 'rescheduleAppointment' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Reschedule Appointment</h3>\n//             <form onSubmit={(e) => { e.preventDefault(); rescheduleAppointment(); }}>\n//               <input type=\"number\" placeholder=\"Appointment ID\" value={rescheduleData.appointmentId} onChange={(e) => setRescheduleData({ ...rescheduleData, appointmentId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"datetime-local\" value={rescheduleData.newRequestedDateTime} onChange={(e) => setRescheduleData({ ...rescheduleData, newRequestedDateTime: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"text\" placeholder=\"Reason\" value={rescheduleData.reason} onChange={(e) => setRescheduleData({ ...rescheduleData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Reschedule</button>\n//             </form>\n//           </div>\n//         </div>\n//         <div style={{ display: activeSection === 'reassignAppointment' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\n//           <div style={{ flex: 1 }}>\n//             <h3>Reassign Appointment</h3>\n//             <form onSubmit={(e) => { e.preventDefault(); reassignAppointment(); }}>\n//               <input type=\"number\" placeholder=\"Appointment ID\" value={reassignData.appointmentId} onChange={(e) => setReassignData({ ...reassignData, appointmentId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <select value={reassignData.newDoctorUserId} onChange={(e) => setReassignData({ ...reassignData, newDoctorUserId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\n//                 <option value=\"\">Select New Doctor</option>\n//                 {doctors.map(d => <option key={d.userId} value={d.userId}>{d.fullName} ({d.specialization})</option>)}\n//               </select>\n//               <input type=\"datetime-local\" value={reassignData.requestedDateTime} onChange={(e) => setReassignData({ ...reassignData, requestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <input type=\"text\" placeholder=\"Reason\" value={reassignData.reason} onChange={(e) => setReassignData({ ...reassignData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Reassign</button>\n//             </form>\n//           </div>\n//         </div>\n//       </div>\n\n//       {showApproveModal && (\n//         <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000 }}>\n//           <div style={{ background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', width: '400px' }}>\n//             <h3>Approve Appointment</h3>\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n//             <label>Doctor:</label>\n//             <select value={approveData.doctorUserId} onChange={(e) => setApproveData({ ...approveData, doctorUserId: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\n//               <option value=\"\">Select Doctor</option>\n//               {doctors.map(d => <option key={d.userId} value={d.userId}>{d.fullName} ({d.specialization})</option>)}\n//             </select>\n//             <label>Date/Time:</label>\n//             <input type=\"datetime-local\" value={approveData.requestedDateTime} onChange={(e) => setApproveData({ ...approveData, requestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <button onClick={submitApprove} style={{ ...buttonStyle, background: '#28a745', color: 'white', marginRight: '10px' }}>Approve</button>\n//             <button onClick={() => { setShowApproveModal(false); setError(''); }} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Cancel</button>\n//           </div>\n//         </div>\n//       )}\n\n//       {showRescheduleModal && (\n//         <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000 }}>\n//           <div style={{ background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', width: '400px' }}>\n//             <h3>Reschedule Cancelled Appointment</h3>\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n//             <label>Doctor:</label>\n//             <select value={rescheduleModalData.newDoctorUserId} onChange={(e) => setRescheduleModalData({ ...rescheduleModalData, newDoctorUserId: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\n//               <option value=\"\">Select Doctor</option>\n//               {doctors.map(d => <option key={d.userId} value={d.userId}>{d.fullName} ({d.specialization})</option>)}\n//             </select>\n//             <label>Date/Time:</label>\n//             <input type=\"datetime-local\" value={rescheduleModalData.requestedDateTime} onChange={(e) => setRescheduleModalData({ ...rescheduleModalData, requestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <label>Reason:</label>\n//             <input type=\"text\" placeholder=\"Reason for reschedule\" value={rescheduleModalData.reason} onChange={(e) => setRescheduleModalData({ ...rescheduleModalData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <button onClick={submitReschedule} style={{ ...buttonStyle, background: '#28a745', color: 'white', marginRight: '10px' }}>Reschedule</button>\n//             <button onClick={() => { setShowRescheduleModal(false); setError(''); }} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Cancel</button>\n//           </div>\n//         </div>\n//       )}\n//       {rescheduleModal && (\n//        <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 4px 10px rgba(0,0,0,0.1)', zIndex: 1000 }}>\n//          <h3>Reschedule Appointment</h3>\n//          <p>Patient: {selectedAppointment?.patient?.fullName || 'N/A'}</p>\n//          <p>Current Date/Time: {selectedAppointment?.scheduledDateTime || 'N/A'}</p>\n//          <input type=\"datetime-local\" value={newDateTime} onChange={(e) => setNewDateTime(e.target.value)} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//          <button onClick={() => {\n//            // UPDATED: Use selectedAppointment for modal-based reschedule\n//            adminAPI.rescheduleAppointment(selectedAppointment.appointmentId, { newRequestedDateTime: newDateTime });\n//            setRescheduleModal(false);\n//            setNewDateTime('');\n//            fetchData();\n//            alert('Appointment rescheduled successfully');\n//          }} style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Confirm</button>\n//          <button onClick={() => setRescheduleModal(false)} style={{ ...buttonStyle, background: '#ccc', color: 'black' }}>Cancel</button>\n//        </div>\n//      )}\n\n//       {showPendingRescheduleModal && (\n//         <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000 }}>\n//           <div style={{ background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', width: '400px' }}>\n//             <h3>Reschedule Pending Appointment</h3>\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\n//             <label>Date/Time:</label>\n//             <input type=\"datetime-local\" value={pendingRescheduleData.newRequestedDateTime} onChange={(e) => setPendingRescheduleData({ ...pendingRescheduleData, newRequestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <label>Reason:</label>\n//             <input type=\"text\" placeholder=\"Reason for reschedule\" value={pendingRescheduleData.reason} onChange={(e) => setPendingRescheduleData({ ...pendingRescheduleData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\n//             <button onClick={submitPendingReschedule} style={{ ...buttonStyle, background: '#28a745', color: 'white', marginRight: '10px' }}>Reschedule</button>\n//             <button onClick={() => { setShowPendingRescheduleModal(false); setError(''); }} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Cancel</button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport { adminAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  var _selectedAppointment$;\n  const [activeSection, setActiveSection] = useState('doctors');\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [doctors, setDoctors] = useState([]);\n  const [patients, setPatients] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  const [allAppointments, setAllAppointments] = useState([]); // Combined list for all appointments\n  const [newDoctor, setNewDoctor] = useState({\n    fullName: '',\n    emailId: '',\n    phoneNumber: '',\n    rawPassword: '',\n    confirmPassword: '',\n    specialization: '',\n    qualification: '',\n    experienceYears: ''\n  });\n  const [newPatient, setNewPatient] = useState({\n    fullName: '',\n    emailId: '',\n    phoneNumber: '',\n    rawPassword: '',\n    confirmPassword: '',\n    gender: '',\n    dateOfBirth: ''\n  });\n  const [newAdmin, setNewAdmin] = useState({\n    fullName: '',\n    email: '',\n    phoneNumber: '',\n    rawPassword: '',\n    confirmPassword: '',\n    superAdmin: false\n  });\n  const [reassignData, setReassignData] = useState({\n    appointmentId: '',\n    newDoctorUserId: '',\n    requestedDateTime: '',\n    reason: ''\n  });\n  const [rescheduleData, setRescheduleData] = useState({\n    appointmentId: '',\n    newRequestedDateTime: '',\n    reason: ''\n  });\n  const [filters, setFilters] = useState({\n    doctors: 'all',\n    patients: 'all',\n    admins: 'all',\n    appointments: 'all'\n  }); // Added appointments filter\n  const [loading, setLoading] = useState(false);\n  const [showApproveModal, setShowApproveModal] = useState(false);\n  const [approveData, setApproveData] = useState({\n    appointmentId: '',\n    doctorUserId: '',\n    requestedDateTime: ''\n  });\n  const [showRescheduleModal, setShowRescheduleModal] = useState(false); // For cancelled appointments\n  const [rescheduleModalData, setRescheduleModalData] = useState({\n    appointmentId: '',\n    newDoctorUserId: '',\n    requestedDateTime: '',\n    reason: ''\n  }); // For cancelled\n  const [showPendingRescheduleModal, setShowPendingRescheduleModal] = useState(false); // For pending appointments\n  const [pendingRescheduleData, setPendingRescheduleData] = useState({\n    appointmentId: '',\n    newRequestedDateTime: '',\n    reason: ''\n  }); // For pending\n  const [error, setError] = useState('');\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n  const [newDateTime, setNewDateTime] = useState('');\n  const [rescheduleModal, setRescheduleModal] = useState(false);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const [d, p, a, appts] = await Promise.all([adminAPI.getDoctors(), adminAPI.getPatients(), adminAPI.getAdmins(), adminAPI.getAllAppointments() // New: Fetch all appointments\n      ]);\n      setDoctors(d.data || []);\n      setPatients(p.data || []);\n      setAdmins(a.data || []);\n      setAllAppointments(appts.data || []);\n      console.log('Fetched doctors:', d.data);\n      console.log('Fetched patients:', p.data);\n      console.log('Fetched admins:', a.data);\n      console.log('Fetched all appointments:', appts.data);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Fetch error details:', err);\n      alert('Error fetching data: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const createDoctor = async () => {\n    console.log('Create Doctor button clicked');\n    if (newDoctor.rawPassword !== newDoctor.confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      await adminAPI.createDoctor(newDoctor);\n      setNewDoctor({\n        fullName: '',\n        emailId: '',\n        phoneNumber: '',\n        rawPassword: '',\n        confirmPassword: '',\n        specialization: '',\n        qualification: '',\n        experienceYears: ''\n      });\n      fetchData();\n      alert('Doctor created successfully!');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      alert('Error creating doctor: ' + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n    }\n  };\n  const createPatient = async () => {\n    console.log('Create Patient button clicked');\n    if (newPatient.rawPassword !== newPatient.confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      await adminAPI.createPatient(newPatient);\n      setNewPatient({\n        fullName: '',\n        emailId: '',\n        phoneNumber: '',\n        rawPassword: '',\n        confirmPassword: '',\n        gender: '',\n        dateOfBirth: ''\n      });\n      fetchData();\n      alert('Patient created successfully!');\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      alert('Error creating patient: ' + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  const createAdmin = async () => {\n    console.log('Create Admin button clicked');\n    if (newAdmin.rawPassword !== newAdmin.confirmPassword) {\n      alert('Passwords do not match');\n      return;\n    }\n    try {\n      await adminAPI.createAdmin(newAdmin);\n      setNewAdmin({\n        fullName: '',\n        email: '',\n        phoneNumber: '',\n        rawPassword: '',\n        confirmPassword: '',\n        superAdmin: false\n      });\n      fetchData();\n      alert('Admin created successfully!');\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      alert('Error creating admin: ' + (((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || err.message));\n    }\n  };\n  const approveDoctor = async id => {\n    console.log('Approve Doctor button clicked for ID:', id);\n    try {\n      await adminAPI.approveDoctor(id);\n      fetchData();\n      alert('Doctor approved!');\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      alert('Error approving doctor: ' + (((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || err.message));\n    }\n  };\n  const blockUser = async (id, status) => {\n    console.log('Block User button clicked for ID:', id, 'Status:', status);\n    try {\n      await adminAPI.blockUser(id, status);\n      fetchData();\n      alert('User status updated!');\n    } catch (err) {\n      var _err$response6, _err$response6$data;\n      alert('Error updating user status: ' + (((_err$response6 = err.response) === null || _err$response6 === void 0 ? void 0 : (_err$response6$data = _err$response6.data) === null || _err$response6$data === void 0 ? void 0 : _err$response6$data.message) || err.message));\n    }\n  };\n  const handleApprove = appointmentId => {\n    console.log('Approve Appointment button clicked for ID:', appointmentId);\n    const now = new Date();\n    const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n    nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n    if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n    if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n    setApproveData({\n      appointmentId,\n      doctorUserId: '',\n      requestedDateTime: nextHour.toISOString().slice(0, 16)\n    });\n    setShowApproveModal(true);\n  };\n  const submitApprove = async () => {\n    const {\n      appointmentId,\n      doctorUserId,\n      requestedDateTime\n    } = approveData;\n    if (!doctorUserId || !requestedDateTime) {\n      setError('Please select a doctor and date/time.');\n      return;\n    }\n    const doctorExists = doctors.some(d => d.userId == doctorUserId);\n    if (!doctorExists) {\n      setError('Invalid Doctor ID. Please select from the list.');\n      return;\n    }\n    const dt = new Date(requestedDateTime);\n    const now = new Date();\n    if (dt <= now) {\n      setError('Date/time must be in the future.');\n      return;\n    }\n    const hours = dt.getHours();\n    const minutes = dt.getMinutes();\n    if (hours < 9 || hours >= 17 || hours === 12 && minutes >= 0 || hours === 13 && minutes < 60) {\n      setError('Slot outside working hours. Working hours: 9:00 AM - 5:00 PM, excluding lunch 12:00-1:00 PM.');\n      return;\n    }\n    if (minutes % 20 !== 0) {\n      setError('Slot must align to 20-minute boundary (e.g., 09:00, 09:20).');\n      return;\n    }\n    try {\n      await adminAPI.approveAppointment(appointmentId, {\n        doctorUserId: parseInt(doctorUserId),\n        requestedDateTime\n      });\n      setShowApproveModal(false);\n      setApproveData({\n        appointmentId: '',\n        doctorUserId: '',\n        requestedDateTime: ''\n      });\n      setError('');\n      fetchData();\n      alert('Appointment approved!');\n    } catch (err) {\n      var _err$response7, _err$response7$data;\n      setError(((_err$response7 = err.response) === null || _err$response7 === void 0 ? void 0 : (_err$response7$data = _err$response7.data) === null || _err$response7$data === void 0 ? void 0 : _err$response7$data.message) || 'Error approving appointment: ' + err.message);\n    }\n  };\n  const cancelAppointment = async id => {\n    console.log('Cancel Appointment button clicked for ID:', id);\n    const reason = prompt('Enter cancellation reason:');\n    if (!reason) return;\n    try {\n      await adminAPI.cancelAppointment(id, {\n        reason\n      });\n      fetchData();\n      alert('Appointment cancelled!');\n    } catch (err) {\n      var _err$response8, _err$response8$data;\n      alert('Error cancelling appointment: ' + (((_err$response8 = err.response) === null || _err$response8 === void 0 ? void 0 : (_err$response8$data = _err$response8.data) === null || _err$response8$data === void 0 ? void 0 : _err$response8$data.message) || err.message));\n    }\n  };\n  const viewDetails = appointment => {\n    console.log('View Details button clicked for appointment:', appointment.appointmentId);\n    alert('Appointment Details:\\n' + JSON.stringify(appointment, null, 2));\n  };\n\n  // const rescheduleAppointment = async () => {\n  //   try {\n  //     // UPDATED: Pass appointmentId as path param, and data as body\n  //     await adminAPI.rescheduleAppointment(rescheduleData.appointmentId, {\n  //       newRequestedDateTime: rescheduleData.newRequestedDateTime,\n  //       reason: rescheduleData.reason\n  //     });\n  //     setRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\n  //     fetchData();\n  //     alert('Appointment rescheduled successfully!');\n  //   } catch (err) {\n  //     alert('Error rescheduling appointment: ' + (err.response?.data?.message || err.message));\n  //   }\n  // };\n\n  const rescheduleCancelled = async appointmentId => {\n    console.log('Re-schedule Cancelled button clicked for ID:', appointmentId);\n    const now = new Date();\n    const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n    nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n    if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n    if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n    // NEW: Set selectedAppointment to the current appointment for modal display\n    const appt = allAppointments.find(a => a.appointmentId === appointmentId);\n    setSelectedAppointment(appt);\n    setRescheduleModalData({\n      appointmentId,\n      newDoctorUserId: '',\n      requestedDateTime: nextHour.toISOString().slice(0, 16),\n      reason: ''\n    });\n    setShowRescheduleModal(true);\n  };\n  const reschedulePending = async appointmentId => {\n    console.log('Reschedule Pending button clicked for ID:', appointmentId);\n    const now = new Date();\n    const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n    nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n    if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n    if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n    // NEW: Set selectedAppointment\n    const appt = allAppointments.find(a => a.appointmentId === appointmentId);\n    setSelectedAppointment(appt);\n    setPendingRescheduleData({\n      appointmentId,\n      newRequestedDateTime: nextHour.toISOString().slice(0, 16),\n      reason: ''\n    });\n    setShowPendingRescheduleModal(true);\n  };\n  const rescheduleAppointment = async () => {\n    try {\n      // UPDATED: Use rescheduleData instead of  variables\n      await adminAPI.rescheduleAppointment(rescheduleData.appointmentId, {\n        newRequestedDateTime: rescheduleData.newRequestedDateTime,\n        reason: rescheduleData.reason\n      });\n      setRescheduleData({\n        appointmentId: '',\n        newRequestedDateTime: '',\n        reason: ''\n      });\n      fetchData();\n      alert('Appointment rescheduled successfully!');\n    } catch (err) {\n      var _err$response9, _err$response9$data;\n      alert('Error rescheduling: ' + (((_err$response9 = err.response) === null || _err$response9 === void 0 ? void 0 : (_err$response9$data = _err$response9.data) === null || _err$response9$data === void 0 ? void 0 : _err$response9$data.message) || err.message));\n    }\n  };\n  const reassignAppointment = async () => {\n    try {\n      // UPDATED: Pass appointmentId as path param, and data as body\n      await adminAPI.reassignAppointment(reassignData.appointmentId, {\n        newDoctorUserId: reassignData.newDoctorUserId,\n        requestedDateTime: reassignData.requestedDateTime,\n        reason: reassignData.reason\n      });\n      setReassignData({\n        appointmentId: '',\n        newDoctorUserId: '',\n        requestedDateTime: '',\n        reason: ''\n      });\n      fetchData();\n      alert('Appointment reassigned successfully!');\n    } catch (err) {\n      var _err$response0, _err$response0$data;\n      alert('Error reassigning appointment: ' + (((_err$response0 = err.response) === null || _err$response0 === void 0 ? void 0 : (_err$response0$data = _err$response0.data) === null || _err$response0$data === void 0 ? void 0 : _err$response0$data.message) || err.message));\n    }\n  };\n\n  // const rescheduleCancelled = async (appointmentId) => {\n  //   console.log('Re-schedule Cancelled button clicked for ID:', appointmentId);\n  //   const now = new Date();\n  //   const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n  //   nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n  //   if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n  //   if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n  //   setRescheduleModalData({ appointmentId, newDoctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\n  //   setShowRescheduleModal(true);\n  // };\n\n  const submitReschedule = async () => {\n    const {\n      appointmentId,\n      newDoctorUserId,\n      requestedDateTime,\n      reason\n    } = rescheduleModalData;\n    if (!newDoctorUserId || !requestedDateTime) {\n      setError('Please select a doctor and date/time.');\n      return;\n    }\n    const doctorExists = doctors.some(d => d.userId == newDoctorUserId);\n    if (!doctorExists) {\n      setError('Invalid Doctor ID. Please select from the list.');\n      return;\n    }\n    const dt = new Date(requestedDateTime);\n    const now = new Date();\n    if (dt <= now) {\n      setError('Date/time must be in the future.');\n      return;\n    }\n    const hours = dt.getHours();\n    const minutes = dt.getMinutes();\n    if (hours < 9 || hours >= 17 || hours === 12 && minutes >= 0 || hours === 13 && minutes < 60) {\n      setError('Slot outside working hours. Working hours: 9:00 AM - 5:00 PM, excluding lunch 12:00-1:00 PM.');\n      return;\n    }\n    if (minutes % 20 !== 0) {\n      setError('Slot must align to 20-minute boundary (e.g., 09:00, 09:20).');\n      return;\n    }\n    try {\n      await adminAPI.reassignAppointment({\n        appointmentId: parseInt(appointmentId),\n        newDoctorUserId: parseInt(newDoctorUserId),\n        requestedDateTime,\n        reason\n      });\n      setShowRescheduleModal(false);\n      setRescheduleModalData({\n        appointmentId: '',\n        newDoctorUserId: '',\n        requestedDateTime: '',\n        reason: ''\n      });\n      setError('');\n      fetchData();\n      alert('Appointment rescheduled!');\n    } catch (err) {\n      var _err$response1, _err$response1$data;\n      setError(((_err$response1 = err.response) === null || _err$response1 === void 0 ? void 0 : (_err$response1$data = _err$response1.data) === null || _err$response1$data === void 0 ? void 0 : _err$response1$data.message) || 'Error rescheduling appointment: ' + err.message);\n    }\n  };\n\n  // const reschedulePending = async (appointmentId) => {\n  //   console.log('Reschedule Pending button clicked for ID:', appointmentId);\n  //   const now = new Date();\n  //   const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\n  //   nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\n  //   if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\n  //   if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\n  //   setPendingRescheduleData({ appointmentId, newRequestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\n  //   setShowPendingRescheduleModal(true);\n  // };\n\n  const submitPendingReschedule = async () => {\n    const {\n      appointmentId,\n      newRequestedDateTime,\n      reason\n    } = pendingRescheduleData;\n    if (!newRequestedDateTime) {\n      setError('Please select a date/time.');\n      return;\n    }\n    const dt = new Date(newRequestedDateTime);\n    const now = new Date();\n    if (dt <= now) {\n      setError('Date/time must be in the future.');\n      return;\n    }\n    const hours = dt.getHours();\n    const minutes = dt.getMinutes();\n    if (hours < 9 || hours >= 17 || hours === 12 && minutes >= 0 || hours === 13 && minutes < 60) {\n      setError('Slot outside working hours.');\n      return;\n    }\n    if (minutes % 20 !== 0) {\n      setError('Slot must align to 20-minute boundary.');\n      return;\n    }\n    try {\n      await adminAPI.rescheduleAppointment({\n        appointmentId: parseInt(appointmentId),\n        newRequestedDateTime,\n        reason\n      });\n      setShowPendingRescheduleModal(false);\n      setPendingRescheduleData({\n        appointmentId: '',\n        newRequestedDateTime: '',\n        reason: ''\n      });\n      setError('');\n      fetchData();\n      alert('Appointment rescheduled!');\n    } catch (err) {\n      var _err$response10, _err$response10$data;\n      setError(((_err$response10 = err.response) === null || _err$response10 === void 0 ? void 0 : (_err$response10$data = _err$response10.data) === null || _err$response10$data === void 0 ? void 0 : _err$response10$data.message) || 'Error rescheduling appointment: ' + err.message);\n    }\n  };\n  const archiveAppointment = async id => {\n    try {\n      await adminAPI.archiveAppointment(id);\n      fetchData();\n      alert('Appointment archived!');\n    } catch (err) {\n      var _err$response11, _err$response11$data;\n      alert('Error archiving appointment: ' + (((_err$response11 = err.response) === null || _err$response11 === void 0 ? void 0 : (_err$response11$data = _err$response11.data) === null || _err$response11$data === void 0 ? void 0 : _err$response11$data.message) || err.message));\n    }\n  };\n  const filteredDoctors = doctors.filter(d => filters.doctors === 'all' || d.status.toLowerCase() === filters.doctors);\n  const filteredPatients = patients.filter(p => filters.patients === 'all' || p.status.toLowerCase() === filters.patients);\n  const filteredAdmins = admins.filter(a => filters.admins === 'all' || a.status.toLowerCase() === filters.admins);\n  const filteredAppointments = allAppointments.filter(ap => {\n    if (!ap) return false;\n    const searchTerm = filters.appointments.toLowerCase();\n    return searchTerm === 'all' || ap.status.toLowerCase() === searchTerm;\n  });\n  const tableStyle = {\n    width: '100%',\n    borderCollapse: 'collapse',\n    marginTop: '1rem',\n    fontSize: '0.9rem'\n  };\n  const thStyle = {\n    border: '1px solid #ddd',\n    padding: '12px',\n    backgroundColor: '#f2f2f2',\n    textAlign: 'left'\n  };\n  const tdStyle = {\n    border: '1px solid #ddd',\n    padding: '12px'\n  };\n  const trHoverStyle = {\n    backgroundColor: '#f5f5f5'\n  };\n  const buttonStyle = {\n    padding: '6px 12px',\n    margin: '2px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '0.8rem',\n    backgroundColor: '#343a40',\n    // Initial dark\n    color: 'white',\n    transition: 'background-color 0.3s' // For graded effect on click\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      fontFamily: 'Poppins, sans-serif',\n      background: '#f4f8fb',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .action-button:hover {\n            background-color: #343a40 !important; /* Keep dark on hover */\n            color: white !important;\n          }\n          .action-button.clicked {\n            background-color: #6c757d; /* Lighter shade for graded effect after click */\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: sidebarCollapsed ? '0' : '250px',\n        background: '#007bff',\n        color: 'black',\n        padding: '1rem',\n        transition: 'width 0.3s',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log('Sidebar toggle clicked');\n          setSidebarCollapsed(!sidebarCollapsed);\n        },\n        style: {\n          background: 'none',\n          border: 'none',\n          color: 'black',\n          fontSize: '1.5rem',\n          cursor: 'pointer',\n          fontWeight: 'bold'\n        },\n        children: \"\\u2630\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: 'black',\n          fontWeight: 'bold'\n        },\n        children: \"Admin Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: 'none',\n          padding: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Create Doctor section clicked');\n              setActiveSection('createDoctor');\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Create Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Create Patient section clicked');\n              setActiveSection('createPatient');\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Create Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1201,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1201,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Create Admin section clicked');\n              setActiveSection('createAdmin');\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Create Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Doctors section clicked');\n              setActiveSection('doctors');\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Patients section clicked');\n              setActiveSection('patients');\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Admins section clicked');\n              setActiveSection('admins');\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Admins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Appointments section clicked');\n              setActiveSection('appointments');\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Reschedule Appointment section clicked');\n              setActiveSection('rescheduleAppointment');\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Reschedule Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log('Reassign Appointment section clicked');\n              setActiveSection('reassignAppointment');\n            },\n            style: {\n              background: 'none',\n              border: 'none',\n              color: 'black',\n              cursor: 'pointer',\n              fontWeight: 'bold'\n            },\n            children: \"Reassign Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: '2rem',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1212,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: activeSection === 'createDoctor' ? 'flex' : 'none',\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              createDoctor();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Full Name\",\n              value: newDoctor.fullName,\n              onChange: e => setNewDoctor({\n                ...newDoctor,\n                fullName: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: newDoctor.emailId,\n              onChange: e => setNewDoctor({\n                ...newDoctor,\n                emailId: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Phone\",\n              value: newDoctor.phoneNumber,\n              onChange: e => setNewDoctor({\n                ...newDoctor,\n                phoneNumber: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: newDoctor.rawPassword,\n              onChange: e => setNewDoctor({\n                ...newDoctor,\n                rawPassword: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: newDoctor.confirmPassword,\n              onChange: e => setNewDoctor({\n                ...newDoctor,\n                confirmPassword: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newDoctor.specialization,\n              onChange: e => setNewDoctor({\n                ...newDoctor,\n                specialization: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Specialization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"CARDIOLOGIST\",\n                children: \"Cardiologist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ORTHOPEDIC\",\n                children: \"Orthopedic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"DENTIST\",\n                children: \"Dentist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"GYNAECOLOGIST\",\n                children: \"Gynaecologist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"NEUROLOGIST\",\n                children: \"Neurologist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"GASTROENTEROLOGIST\",\n                children: \"Gastroenterologist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1230,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"PEDIATRICS\",\n                children: \"Pediatrics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"RADIOLOGY\",\n                children: \"Radiology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1232,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"GENERAL_PHYSICIAN\",\n                children: \"General Physician\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1233,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"OTOLARYNGOLOGIST_ENT\",\n                children: \"Otolaryngologist ENT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1234,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ENDOCRINOLOGIST\",\n                children: \"Endocrinologist\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ONCOLOGY\",\n                children: \"Oncology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1236,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Qualification\",\n              value: newDoctor.qualification,\n              onChange: e => setNewDoctor({\n                ...newDoctor,\n                qualification: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Experience Years\",\n              value: newDoctor.experienceYears,\n              onChange: e => setNewDoctor({\n                ...newDoctor,\n                experienceYears: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                ...buttonStyle,\n                background: '#007bff',\n                color: 'white'\n              },\n              children: \"Create Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1217,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: activeSection === 'createPatient' ? 'flex' : 'none',\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create Patient\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              createPatient();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Full Name\",\n              value: newPatient.fullName,\n              onChange: e => setNewPatient({\n                ...newPatient,\n                fullName: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: newPatient.emailId,\n              onChange: e => setNewPatient({\n                ...newPatient,\n                emailId: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Phone\",\n              value: newPatient.phoneNumber,\n              onChange: e => setNewPatient({\n                ...newPatient,\n                phoneNumber: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: newPatient.rawPassword,\n              onChange: e => setNewPatient({\n                ...newPatient,\n                rawPassword: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: newPatient.confirmPassword,\n              onChange: e => setNewPatient({\n                ...newPatient,\n                confirmPassword: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newPatient.gender,\n              onChange: e => setNewPatient({\n                ...newPatient,\n                gender: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"MALE\",\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1255,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"FEMALE\",\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"OTHER\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: newPatient.dateOfBirth,\n              onChange: e => setNewPatient({\n                ...newPatient,\n                dateOfBirth: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                ...buttonStyle,\n                background: '#007bff',\n                color: 'white'\n              },\n              children: \"Create Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: activeSection === 'createAdmin' ? 'flex' : 'none',\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              createAdmin();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Full Name\",\n              value: newAdmin.fullName,\n              onChange: e => setNewAdmin({\n                ...newAdmin,\n                fullName: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: newAdmin.email,\n              onChange: e => setNewAdmin({\n                ...newAdmin,\n                email: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Phone\",\n              value: newAdmin.phoneNumber,\n              onChange: e => setNewAdmin({\n                ...newAdmin,\n                phoneNumber: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: newAdmin.rawPassword,\n              onChange: e => setNewAdmin({\n                ...newAdmin,\n                rawPassword: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: newAdmin.confirmPassword,\n              onChange: e => setNewAdmin({\n                ...newAdmin,\n                confirmPassword: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: newAdmin.superAdmin,\n                onChange: e => setNewAdmin({\n                  ...newAdmin,\n                  superAdmin: e.target.checked\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1273,\n                columnNumber: 22\n              }, this), \" Super Admin\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                ...buttonStyle,\n                background: '#007bff',\n                color: 'white'\n              },\n              children: \"Create Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: activeSection === 'doctors' ? 'flex' : 'none',\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Doctors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: tableStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Specialization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1286,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1287,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1288,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1283,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredDoctors.map((d, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: index % 2 === 0 ? {} : trHoverStyle,\n                onMouseEnter: e => e.target.style.backgroundColor = '#e9ecef',\n                onMouseLeave: e => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5',\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: d.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1294,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: d.specialization\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1295,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: d.emailId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1296,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: d.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1297,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: [d.status.toUpperCase() === 'ACTIVE' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"action-button\",\n                      style: {\n                        ...buttonStyle,\n                        background: '#28a745'\n                      },\n                      disabled: true,\n                      children: \"Approved\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1301,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"action-button\",\n                      onClick: () => blockUser(d.userId, 'BLOCKED'),\n                      style: {\n                        ...buttonStyle,\n                        background: '#dc3545'\n                      },\n                      children: \"Block\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1302,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true), d.status.toUpperCase() === 'INACTIVE' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"action-button\",\n                      onClick: () => approveDoctor(d.userId),\n                      style: {\n                        ...buttonStyle,\n                        background: '#28a745'\n                      },\n                      children: \"Approve\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1307,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"action-button\",\n                      onClick: () => blockUser(d.userId, 'BLOCKED'),\n                      style: {\n                        ...buttonStyle,\n                        background: '#dc3545'\n                      },\n                      children: \"Block\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1308,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true), d.status.toUpperCase() === 'BLOCKED' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"action-button\",\n                      onClick: () => approveDoctor(d.userId),\n                      style: {\n                        ...buttonStyle,\n                        background: '#28a745'\n                      },\n                      children: \"Approve\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1313,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"action-button\",\n                      onClick: () => blockUser(d.userId, 'ACTIVE'),\n                      style: {\n                        ...buttonStyle,\n                        background: '#dc3545'\n                      },\n                      children: \"Blocked\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1314,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1298,\n                  columnNumber: 21\n                }, this)]\n              }, d.userId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1293,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '200px',\n            marginLeft: '2rem',\n            marginTop: '-1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1324,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.doctors,\n            onChange: e => setFilters({\n              ...filters,\n              doctors: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: '10px',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1326,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"active\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1327,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inactive\",\n              children: \"Inactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1328,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"approved\",\n              children: \"Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1329,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"blocked\",\n              children: \"Blocked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1330,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1325,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1323,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: activeSection === 'patients' ? 'flex' : 'none',\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1336,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: tableStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1340,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1341,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1342,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1339,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1338,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredPatients.map((p, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: index % 2 === 0 ? {} : trHoverStyle,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: p.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1348,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: p.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1349,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: [p.status.toUpperCase() === 'ACTIVE' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button\",\n                    onClick: () => blockUser(p.userId, 'BLOCKED'),\n                    style: {\n                      ...buttonStyle,\n                      background: '#dc3545'\n                    },\n                    children: \"Block\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1352,\n                    columnNumber: 47\n                  }, this), p.status.toUpperCase() === 'BLOCKED' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button\",\n                    onClick: () => blockUser(p.userId, 'ACTIVE'),\n                    style: {\n                      ...buttonStyle,\n                      background: '#dc3545'\n                    },\n                    children: \"Blocked\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1355,\n                    columnNumber: 47\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1350,\n                  columnNumber: 43\n                }, this)]\n              }, p.userId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1347,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1345,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1337,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1335,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '200px',\n            marginLeft: '2rem',\n            marginTop: '-1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1364,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.patients,\n            onChange: e => setFilters({\n              ...filters,\n              patients: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: '10px',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1366,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"active\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1367,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inactive\",\n              children: \"Inactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1368,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"blocked\",\n              children: \"Blocked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1369,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1365,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1363,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: activeSection === 'admins' ? 'flex' : 'none',\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Admins\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1375,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: tableStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1379,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1380,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Super Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1381,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1382,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1378,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1377,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredAdmins.map((a, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: index % 2 === 0 ? {} : trHoverStyle,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: a.fullName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1388,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: a.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1389,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: a.superAdmin ? 'Yes' : 'No'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1390,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: tdStyle,\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-button\",\n                    onClick: () => blockUser(a.adminId, 'BLOCKED'),\n                    style: {\n                      ...buttonStyle,\n                      background: '#dc3545'\n                    },\n                    children: \"Block\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1392,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1391,\n                  columnNumber: 43\n                }, this)]\n              }, a.adminId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1387,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1385,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1376,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1374,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '200px',\n            marginLeft: '2rem',\n            marginTop: '-1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.admins,\n            onChange: e => setFilters({\n              ...filters,\n              admins: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: '10px',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1402,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"active\",\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1403,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"inactive\",\n              children: \"Inactive\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1404,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"blocked\",\n              children: \"Blocked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1405,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1401,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1399,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: activeSection === 'appointments' ? 'flex' : 'none',\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"All Appointments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1411,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: tableStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Appointment ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1415,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Patient Name & ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1416,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Doctor Name & Specialization\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1417,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Date & Time\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1418,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1419,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: thStyle,\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1420,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1414,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1413,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: filteredAppointments.length > 0 ? filteredAppointments.map((ap, index) => {\n                var _ap$patient, _ap$patient2;\n                return /*#__PURE__*/_jsxDEV(\"tr\", {\n                  style: index % 2 === 0 ? {} : trHoverStyle,\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    style: tdStyle,\n                    children: ap.appointmentId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1427,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: tdStyle,\n                    children: [((_ap$patient = ap.patient) === null || _ap$patient === void 0 ? void 0 : _ap$patient.fullName) || 'N/A', \" (\", ((_ap$patient2 = ap.patient) === null || _ap$patient2 === void 0 ? void 0 : _ap$patient2.userId) || 'N/A', \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1428,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: tdStyle,\n                    children: ap.doctor ? `${ap.doctor.fullName} (${ap.doctor.specialization})` : 'Not Assigned'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1429,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: tdStyle,\n                    children: ap.scheduledDateTime || ap.preferredDate || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1430,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: tdStyle,\n                    children: ap.status\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1431,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: tdStyle,\n                    children: [ap.status === 'PENDING' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button\",\n                        onClick: () => handleApprove(ap.appointmentId),\n                        style: {\n                          ...buttonStyle,\n                          background: '#28a745'\n                        },\n                        children: \"Approve\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1435,\n                        columnNumber: 51\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button\",\n                        onClick: () => reschedulePending(ap.appointmentId),\n                        style: {\n                          ...buttonStyle,\n                          background: '#ffc107'\n                        },\n                        children: \"Reschedule\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1436,\n                        columnNumber: 51\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button\",\n                        onClick: () => cancelAppointment(ap.appointmentId),\n                        style: {\n                          ...buttonStyle,\n                          background: '#dc3545'\n                        },\n                        children: \"Cancel\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1437,\n                        columnNumber: 51\n                      }, this)]\n                    }, void 0, true), ap.status === 'CANCELLED' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button\",\n                        onClick: () => rescheduleCancelled(ap.appointmentId),\n                        style: {\n                          ...buttonStyle,\n                          background: '#ffc107'\n                        },\n                        children: \"Re-schedule\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1442,\n                        columnNumber: 51\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"action-button\",\n                        onClick: () => archiveAppointment(ap.appointmentId),\n                        style: {\n                          ...buttonStyle,\n                          background: '#6c757d'\n                        },\n                        children: \"Archive\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1443,\n                        columnNumber: 51\n                      }, this)]\n                    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"action-button\",\n                      onClick: () => viewDetails(ap),\n                      style: {\n                        ...buttonStyle,\n                        background: '#17a2b8'\n                      },\n                      children: \"View Details\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1446,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1432,\n                    columnNumber: 45\n                  }, this)]\n                }, ap.appointmentId || index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1426,\n                  columnNumber: 43\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: \"6\",\n                  style: {\n                    textAlign: 'center',\n                    padding: '20px'\n                  },\n                  children: \"No appointments available.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1452,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1451,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1423,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1412,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1410,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '200px',\n            marginLeft: '2rem',\n            marginTop: '-1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1459,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: filters.appointments,\n            onChange: e => setFilters({\n              ...filters,\n              appointments: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: '10px',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1461,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1462,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"confirmed\",\n              children: \"Confirmed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1463,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cancelled\",\n              children: \"Cancelled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1464,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1460,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1458,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1409,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: activeSection === 'rescheduleAppointment' ? 'flex' : 'none',\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Reschedule Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1470,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              rescheduleAppointment();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Appointment ID\",\n              value: rescheduleData.appointmentId,\n              onChange: e => setRescheduleData({\n                ...rescheduleData,\n                appointmentId: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1472,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: rescheduleData.newRequestedDateTime,\n              onChange: e => setRescheduleData({\n                ...rescheduleData,\n                newRequestedDateTime: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1473,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Reason\",\n              value: rescheduleData.reason,\n              onChange: e => setRescheduleData({\n                ...rescheduleData,\n                reason: e.target.value\n              }),\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1474,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                ...buttonStyle,\n                background: '#007bff',\n                color: 'white'\n              },\n              children: \"Reschedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1475,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1471,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1469,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1468,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: activeSection === 'reassignAppointment' ? 'flex' : 'none',\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Reassign Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1481,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => {\n              e.preventDefault();\n              reassignAppointment();\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Appointment ID\",\n              value: reassignData.appointmentId,\n              onChange: e => setReassignData({\n                ...reassignData,\n                appointmentId: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1483,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: reassignData.newDoctorUserId,\n              onChange: e => setReassignData({\n                ...reassignData,\n                newDoctorUserId: e.target.value\n              }),\n              required: true,\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select New Doctor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1485,\n                columnNumber: 39\n              }, this), doctors.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d.userId,\n                children: [d.fullName, \" (\", d.specialization, \")\"]\n              }, d.userId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1486,\n                columnNumber: 57\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1484,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: reassignData.requestedDateTime,\n              onChange: e => setReassignData({\n                ...reassignData,\n                requestedDateTime: e.target.value\n              }),\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1488,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Reason\",\n              value: reassignData.reason,\n              onChange: e => setReassignData({\n                ...reassignData,\n                reason: e.target.value\n              }),\n              style: {\n                width: '100%',\n                padding: '10px',\n                margin: '10px 0',\n                border: '1px solid #ccc',\n                borderRadius: '4px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1489,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                ...buttonStyle,\n                background: '#007bff',\n                color: 'white'\n              },\n              children: \"Reassign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1490,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1482,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1480,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1479,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1211,\n      columnNumber: 7\n    }, this), showApproveModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        background: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          width: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Approve Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1499,\n          columnNumber: 35\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1500,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1501,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: approveData.doctorUserId,\n          onChange: e => setApproveData({\n            ...approveData,\n            doctorUserId: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: '10px',\n            margin: '10px 0',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1503,\n            columnNumber: 37\n          }, this), doctors.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d.userId,\n            children: [d.fullName, \" (\", d.specialization, \")\"]\n          }, d.userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1504,\n            columnNumber: 55\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1502,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date/Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1506,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: approveData.requestedDateTime,\n          onChange: e => setApproveData({\n            ...approveData,\n            requestedDateTime: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: '10px',\n            margin: '10px 0',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1507,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitApprove,\n          style: {\n            ...buttonStyle,\n            background: '#28a745',\n            color: 'white',\n            marginRight: '10px'\n          },\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowApproveModal(false);\n            setError('');\n          },\n          style: {\n            ...buttonStyle,\n            background: '#6c757d',\n            color: 'white'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1509,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1498,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1497,\n      columnNumber: 31\n    }, this), showRescheduleModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        background: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          width: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reschedule Cancelled Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1517,\n          columnNumber: 35\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1518,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Doctor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1519,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: rescheduleModalData.newDoctorUserId,\n          onChange: e => setRescheduleModalData({\n            ...rescheduleModalData,\n            newDoctorUserId: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: '10px',\n            margin: '10px 0',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1521,\n            columnNumber: 37\n          }, this), doctors.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d.userId,\n            children: [d.fullName, \" (\", d.specialization, \")\"]\n          }, d.userId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1522,\n            columnNumber: 55\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1520,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date/Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1524,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: rescheduleModalData.requestedDateTime,\n          onChange: e => setRescheduleModalData({\n            ...rescheduleModalData,\n            requestedDateTime: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: '10px',\n            margin: '10px 0',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1525,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reason:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1526,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Reason for reschedule\",\n          value: rescheduleModalData.reason,\n          onChange: e => setRescheduleModalData({\n            ...rescheduleModalData,\n            reason: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: '10px',\n            margin: '10px 0',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1527,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitReschedule,\n          style: {\n            ...buttonStyle,\n            background: '#28a745',\n            color: 'white',\n            marginRight: '10px'\n          },\n          children: \"Reschedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1528,\n          columnNumber: 35\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowRescheduleModal(false);\n            setError('');\n          },\n          style: {\n            ...buttonStyle,\n            background: '#6c757d',\n            color: 'white'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1529,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1516,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1515,\n      columnNumber: 31\n    }, this), rescheduleModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        background: 'white',\n        padding: '2rem',\n        borderRadius: '10px',\n        boxShadow: '0 4px 10px rgba(0,0,0,0.1)',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Reschedule Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1536,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Patient: \", (selectedAppointment === null || selectedAppointment === void 0 ? void 0 : (_selectedAppointment$ = selectedAppointment.patient) === null || _selectedAppointment$ === void 0 ? void 0 : _selectedAppointment$.fullName) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Date/Time: \", (selectedAppointment === null || selectedAppointment === void 0 ? void 0 : selectedAppointment.scheduledDateTime) || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1538,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"datetime-local\",\n        value: newDateTime,\n        onChange: e => setNewDateTime(e.target.value),\n        style: {\n          width: '100%',\n          padding: '10px',\n          margin: '10px 0',\n          border: '1px solid #ccc',\n          borderRadius: '4px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1539,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: async () => {\n          try {\n            await adminAPI.rescheduleAppointment(selectedAppointment.appointmentId, {\n              newRequestedDateTime: newDateTime\n            });\n            setRescheduleModal(false);\n            setNewDateTime('');\n            fetchData();\n            alert('Appointment rescheduled successfully');\n          } catch (err) {\n            var _err$response12, _err$response12$data;\n            alert('Error rescheduling: ' + (((_err$response12 = err.response) === null || _err$response12 === void 0 ? void 0 : (_err$response12$data = _err$response12.data) === null || _err$response12$data === void 0 ? void 0 : _err$response12$data.message) || err.message));\n          }\n        },\n        style: {\n          ...buttonStyle,\n          background: '#007bff',\n          color: 'white'\n        },\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1540,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRescheduleModal(false),\n        style: {\n          ...buttonStyle,\n          background: '#ccc',\n          color: 'black'\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1551,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1535,\n      columnNumber: 9\n    }, this), showPendingRescheduleModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        background: 'rgba(0,0,0,0.5)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'white',\n          padding: '2rem',\n          borderRadius: '10px',\n          boxShadow: '0 2px 6px rgba(0,0,0,0.1)',\n          width: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reschedule Pending Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1558,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date/Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1560,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          value: pendingRescheduleData.newRequestedDateTime,\n          onChange: e => setPendingRescheduleData({\n            ...pendingRescheduleData,\n            newRequestedDateTime: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: '10px',\n            margin: '10px 0',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1561,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reason:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1562,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Reason for reschedule\",\n          value: pendingRescheduleData.reason,\n          onChange: e => setPendingRescheduleData({\n            ...pendingRescheduleData,\n            reason: e.target.value\n          }),\n          style: {\n            width: '100%',\n            padding: '10px',\n            margin: '10px 0',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1563,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitPendingReschedule,\n          style: {\n            ...buttonStyle,\n            background: '#28a745',\n            color: 'white',\n            marginRight: '10px'\n          },\n          children: \"Reschedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1564,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setShowPendingRescheduleModal(false);\n            setError('');\n          },\n          style: {\n            ...buttonStyle,\n            background: '#6c757d',\n            color: 'white'\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1565,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1557,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1556,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1181,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"1uGb3mks7Qc0ZVZozuPmfmlyToo=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","adminAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","_selectedAppointment$","activeSection","setActiveSection","sidebarCollapsed","setSidebarCollapsed","doctors","setDoctors","patients","setPatients","admins","setAdmins","allAppointments","setAllAppointments","newDoctor","setNewDoctor","fullName","emailId","phoneNumber","rawPassword","confirmPassword","specialization","qualification","experienceYears","newPatient","setNewPatient","gender","dateOfBirth","newAdmin","setNewAdmin","email","superAdmin","reassignData","setReassignData","appointmentId","newDoctorUserId","requestedDateTime","reason","rescheduleData","setRescheduleData","newRequestedDateTime","filters","setFilters","appointments","loading","setLoading","showApproveModal","setShowApproveModal","approveData","setApproveData","doctorUserId","showRescheduleModal","setShowRescheduleModal","rescheduleModalData","setRescheduleModalData","showPendingRescheduleModal","setShowPendingRescheduleModal","pendingRescheduleData","setPendingRescheduleData","error","setError","selectedAppointment","setSelectedAppointment","newDateTime","setNewDateTime","rescheduleModal","setRescheduleModal","fetchData","d","p","a","appts","Promise","all","getDoctors","getPatients","getAdmins","getAllAppointments","data","console","log","err","_err$response","_err$response$data","alert","response","message","createDoctor","_err$response2","_err$response2$data","createPatient","_err$response3","_err$response3$data","createAdmin","_err$response4","_err$response4$data","approveDoctor","id","_err$response5","_err$response5$data","blockUser","status","_err$response6","_err$response6$data","handleApprove","now","Date","nextHour","getTime","setMinutes","Math","ceil","getMinutes","getHours","setHours","setDate","getDate","toISOString","slice","submitApprove","doctorExists","some","userId","dt","hours","minutes","approveAppointment","parseInt","_err$response7","_err$response7$data","cancelAppointment","prompt","_err$response8","_err$response8$data","viewDetails","appointment","JSON","stringify","rescheduleCancelled","appt","find","reschedulePending","rescheduleAppointment","_err$response9","_err$response9$data","reassignAppointment","_err$response0","_err$response0$data","submitReschedule","_err$response1","_err$response1$data","submitPendingReschedule","_err$response10","_err$response10$data","archiveAppointment","_err$response11","_err$response11$data","filteredDoctors","filter","toLowerCase","filteredPatients","filteredAdmins","filteredAppointments","ap","searchTerm","tableStyle","width","borderCollapse","marginTop","fontSize","thStyle","border","padding","backgroundColor","textAlign","tdStyle","trHoverStyle","buttonStyle","margin","borderRadius","cursor","color","transition","style","display","fontFamily","background","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","overflow","onClick","fontWeight","listStyle","flex","flexDirection","boxShadow","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","required","checked","map","index","onMouseEnter","onMouseLeave","toUpperCase","className","disabled","marginLeft","adminId","length","_ap$patient","_ap$patient2","patient","doctor","scheduledDateTime","preferredDate","colSpan","position","top","left","height","justifyContent","alignItems","zIndex","marginRight","transform","_err$response12","_err$response12$data","_c","$RefreshReg$"],"sources":["/Users/poojav/Desktop/MediCareOnline/FrontendMediCare/src/components/AdminDashboard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { adminAPI } from '../services/api';\r\n\r\n// const AdminDashboard = () => {\r\n//   const [activeSection, setActiveSection] = useState('doctors');\r\n//   const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n//   const [doctors, setDoctors] = useState([]);\r\n//   const [patients, setPatients] = useState([]);\r\n//   const [admins, setAdmins] = useState([]);\r\n//   const [allAppointments, setAllAppointments] = useState([]);  // Combined list for all appointments\r\n//   const [newDoctor, setNewDoctor] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', specialization: '', qualification: '', experienceYears: '' });\r\n//   const [newPatient, setNewPatient] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', gender: '', dateOfBirth: '' });\r\n//   const [newAdmin, setNewAdmin] = useState({ fullName: '', email: '', phoneNumber: '', rawPassword: '', confirmPassword: '', superAdmin: false });\r\n//   const [reassignData, setReassignData] = useState({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });\r\n//   const [rescheduleData, setRescheduleData] = useState({ appointmentId: '', newRequestedDateTime: '', reason: '' });\r\n//   const [filters, setFilters] = useState({ doctors: 'all', patients: 'all', admins: 'all', appointments: 'all' });  // Added appointments filter\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [showApproveModal, setShowApproveModal] = useState(false);\r\n//   const [approveData, setApproveData] = useState({ appointmentId: '', doctorUserId: '', requestedDateTime: '' });\r\n//   const [showRescheduleModal, setShowRescheduleModal] = useState(false);  // For cancelled appointments\r\n//   const [rescheduleModalData, setRescheduleModalData] = useState({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });  // For cancelled\r\n//   const [showPendingRescheduleModal, setShowPendingRescheduleModal] = useState(false);  // For pending appointments\r\n//   const [pendingRescheduleData, setPendingRescheduleData] = useState({ appointmentId: '', newRequestedDateTime: '', reason: '' });  // For pending\r\n//   const [error, setError] = useState('');\r\n//   const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n//      const [newDateTime, setNewDateTime] = useState('');\r\n//      const [rescheduleModal, setRescheduleModal] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     fetchData();\r\n//   }, []);\r\n\r\n//   const fetchData = async () => {\r\n//     setLoading(true);\r\n//     try {\r\n//       const [d, p, a, appts] = await Promise.all([\r\n//         adminAPI.getDoctors(),\r\n//         adminAPI.getPatients(),\r\n//         adminAPI.getAdmins(),\r\n//         adminAPI.getAllAppointments()  // New: Fetch all appointments\r\n//       ]);\r\n//       setDoctors(d.data || []);\r\n//       setPatients(p.data || []);\r\n//       setAdmins(a.data || []);\r\n//       setAllAppointments(appts.data || []);\r\n      \r\n//       console.log('Fetched doctors:', d.data);\r\n//       console.log('Fetched patients:', p.data);\r\n//       console.log('Fetched admins:', a.data);\r\n//       console.log('Fetched all appointments:', appts.data);\r\n//     } catch (err) {\r\n//       console.error('Fetch error details:', err);\r\n//       alert('Error fetching data: ' + (err.response?.data?.message || err.message));\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   const createDoctor = async () => {\r\n//     console.log('Create Doctor button clicked');\r\n//     if (newDoctor.rawPassword !== newDoctor.confirmPassword) {\r\n//       alert('Passwords do not match');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       await adminAPI.createDoctor(newDoctor);\r\n//       setNewDoctor({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', specialization: '', qualification: '', experienceYears: '' });\r\n//       fetchData();\r\n//       alert('Doctor created successfully!');\r\n//     } catch (err) {\r\n//       alert('Error creating doctor: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const createPatient = async () => {\r\n//     console.log('Create Patient button clicked');\r\n//     if (newPatient.rawPassword !== newPatient.confirmPassword) {\r\n//       alert('Passwords do not match');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       await adminAPI.createPatient(newPatient);\r\n//       setNewPatient({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', gender: '', dateOfBirth: '' });\r\n//       fetchData();\r\n//       alert('Patient created successfully!');\r\n//     } catch (err) {\r\n//       alert('Error creating patient: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const createAdmin = async () => {\r\n//     console.log('Create Admin button clicked');\r\n//     if (newAdmin.rawPassword !== newAdmin.confirmPassword) {\r\n//       alert('Passwords do not match');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       await adminAPI.createAdmin(newAdmin);\r\n//       setNewAdmin({ fullName: '', email: '', phoneNumber: '', rawPassword: '', confirmPassword: '', superAdmin: false });\r\n//       fetchData();\r\n//       alert('Admin created successfully!');\r\n//     } catch (err) {\r\n//       alert('Error creating admin: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const approveDoctor = async (id) => {\r\n//     console.log('Approve Doctor button clicked for ID:', id);\r\n//     try {\r\n//       await adminAPI.approveDoctor(id);\r\n//       fetchData();\r\n//       alert('Doctor approved!');\r\n//     } catch (err) {\r\n//       alert('Error approving doctor: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const blockUser = async (id, status) => {\r\n//     console.log('Block User button clicked for ID:', id, 'Status:', status);\r\n//     try {\r\n//       await adminAPI.blockUser(id, status);\r\n//       fetchData();\r\n//       alert('User status updated!');\r\n//     } catch (err) {\r\n//       alert('Error updating user status: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const handleApprove = (appointmentId) => {\r\n//     console.log('Approve Appointment button clicked for ID:', appointmentId);\r\n//     const now = new Date();\r\n//     const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n//     nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n//     if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n//     if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n//     setApproveData({ appointmentId, doctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16) });\r\n//     setShowApproveModal(true);\r\n//   };\r\n\r\n//   const submitApprove = async () => {\r\n//     const { appointmentId, doctorUserId, requestedDateTime } = approveData;\r\n//     if (!doctorUserId || !requestedDateTime) {\r\n//       setError('Please select a doctor and date/time.');\r\n//       return;\r\n//     }\r\n//     const doctorExists = doctors.some(d => d.userId == doctorUserId);\r\n//     if (!doctorExists) {\r\n//       setError('Invalid Doctor ID. Please select from the list.');\r\n//       return;\r\n//     }\r\n//     const dt = new Date(requestedDateTime);\r\n//     const now = new Date();\r\n//     if (dt <= now) {\r\n//       setError('Date/time must be in the future.');\r\n//       return;\r\n//     }\r\n//     const hours = dt.getHours();\r\n//     const minutes = dt.getMinutes();\r\n//     if (hours < 9 || hours >= 17 || (hours === 12 && minutes >= 0) || (hours === 13 && minutes < 60)) {\r\n//       setError('Slot outside working hours. Working hours: 9:00 AM - 5:00 PM, excluding lunch 12:00-1:00 PM.');\r\n//       return;\r\n//     }\r\n//     if (minutes % 20 !== 0) {\r\n//       setError('Slot must align to 20-minute boundary (e.g., 09:00, 09:20).');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       await adminAPI.approveAppointment(appointmentId, { doctorUserId: parseInt(doctorUserId), requestedDateTime });\r\n//       setShowApproveModal(false);\r\n//       setApproveData({ appointmentId: '', doctorUserId: '', requestedDateTime: '' });\r\n//       setError('');\r\n//       fetchData();\r\n//       alert('Appointment approved!');\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Error approving appointment: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   const cancelAppointment = async (id) => {\r\n//     console.log('Cancel Appointment button clicked for ID:', id);\r\n//     const reason = prompt('Enter cancellation reason:');\r\n//     if (!reason) return;\r\n//     try {\r\n//       await adminAPI.cancelAppointment(id, { reason });\r\n//       fetchData();\r\n//       alert('Appointment cancelled!');\r\n//     } catch (err) {\r\n//       alert('Error cancelling appointment: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const viewDetails = (appointment) => {\r\n//     console.log('View Details button clicked for appointment:', appointment.appointmentId);\r\n//     alert('Appointment Details:\\n' + JSON.stringify(appointment, null, 2));\r\n//   };\r\n\r\n//   // const rescheduleAppointment = async () => {\r\n//   //   try {\r\n//   //     // UPDATED: Pass appointmentId as path param, and data as body\r\n//   //     await adminAPI.rescheduleAppointment(rescheduleData.appointmentId, {\r\n//   //       newRequestedDateTime: rescheduleData.newRequestedDateTime,\r\n//   //       reason: rescheduleData.reason\r\n//   //     });\r\n//   //     setRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\r\n//   //     fetchData();\r\n//   //     alert('Appointment rescheduled successfully!');\r\n//   //   } catch (err) {\r\n//   //     alert('Error rescheduling appointment: ' + (err.response?.data?.message || err.message));\r\n//   //   }\r\n//   // };\r\n\r\n//   const rescheduleCancelled = async (appointmentId) => {\r\n//     console.log('Re-schedule Cancelled button clicked for ID:', appointmentId);\r\n//     const now = new Date();\r\n//     const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n//     nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n//     if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n//     if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n//     // NEW: Set selectedAppointment to the current appointment for modal display\r\n//     const appt = allAppointments.find(a => a.appointmentId === appointmentId);\r\n//     setSelectedAppointment(appt);\r\n//     setRescheduleModalData({ appointmentId, newDoctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\r\n//     setShowRescheduleModal(true);\r\n//   };\r\n//   const reschedulePending = async (appointmentId) => {\r\n//     console.log('Reschedule Pending button clicked for ID:', appointmentId);\r\n//     const now = new Date();\r\n//     const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n//     nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n//     if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n//     if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n//     // NEW: Set selectedAppointment\r\n//     const appt = allAppointments.find(a => a.appointmentId === appointmentId);\r\n//     setSelectedAppointment(appt);\r\n//     setPendingRescheduleData({ appointmentId, newRequestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\r\n//     setShowPendingRescheduleModal(true);\r\n//   };\r\n//   const rescheduleAppointment = async () => {\r\n//     try {\r\n//       // UPDATED: Use rescheduleData instead of  variables\r\n//       await adminAPI.rescheduleAppointment(rescheduleData.appointmentId, {\r\n//         newRequestedDateTime: rescheduleData.newRequestedDateTime,\r\n//         reason: rescheduleData.reason\r\n//       });\r\n//       setRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\r\n//       fetchData();\r\n//       alert('Appointment rescheduled successfully!');\r\n//     } catch (err) {\r\n//       alert('Error rescheduling: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const reassignAppointment = async () => {\r\n//     try {\r\n//       // UPDATED: Pass appointmentId as path param, and data as body\r\n//       await adminAPI.reassignAppointment(reassignData.appointmentId, {\r\n//         newDoctorUserId: reassignData.newDoctorUserId,\r\n//         requestedDateTime: reassignData.requestedDateTime,\r\n//         reason: reassignData.reason\r\n//       });\r\n//       setReassignData({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });\r\n//       fetchData();\r\n//       alert('Appointment reassigned successfully!');\r\n//     } catch (err) {\r\n//       alert('Error reassigning appointment: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   // const rescheduleCancelled = async (appointmentId) => {\r\n//   //   console.log('Re-schedule Cancelled button clicked for ID:', appointmentId);\r\n//   //   const now = new Date();\r\n//   //   const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n//   //   nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n//   //   if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n//   //   if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n//   //   setRescheduleModalData({ appointmentId, newDoctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\r\n//   //   setShowRescheduleModal(true);\r\n//   // };\r\n\r\n//   const submitReschedule = async () => {\r\n//     const { appointmentId, newDoctorUserId, requestedDateTime, reason } = rescheduleModalData;\r\n//     if (!newDoctorUserId || !requestedDateTime) {\r\n//       setError('Please select a doctor and date/time.');\r\n//       return;\r\n//     }\r\n//     const doctorExists = doctors.some(d => d.userId == newDoctorUserId);\r\n//     if (!doctorExists) {\r\n//       setError('Invalid Doctor ID. Please select from the list.');\r\n//       return;\r\n//     }\r\n//     const dt = new Date(requestedDateTime);\r\n//     const now = new Date();\r\n//     if (dt <= now) {\r\n//       setError('Date/time must be in the future.');\r\n//       return;\r\n//     }\r\n//     const hours = dt.getHours();\r\n//     const minutes = dt.getMinutes();\r\n//     if (hours < 9 || hours >= 17 || (hours === 12 && minutes >= 0) || (hours === 13 && minutes < 60)) {\r\n//       setError('Slot outside working hours. Working hours: 9:00 AM - 5:00 PM, excluding lunch 12:00-1:00 PM.');\r\n//       return;\r\n//     }\r\n//     if (minutes % 20 !== 0) {\r\n//       setError('Slot must align to 20-minute boundary (e.g., 09:00, 09:20).');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       await adminAPI.reassignAppointment({ appointmentId: parseInt(appointmentId), newDoctorUserId: parseInt(newDoctorUserId), requestedDateTime, reason });\r\n//       setShowRescheduleModal(false);\r\n//       setRescheduleModalData({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });\r\n//       setError('');\r\n//       fetchData();\r\n//       alert('Appointment rescheduled!');\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Error rescheduling appointment: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   // const reschedulePending = async (appointmentId) => {\r\n//   //   console.log('Reschedule Pending button clicked for ID:', appointmentId);\r\n//   //   const now = new Date();\r\n//   //   const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n//   //   nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n//   //   if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n//   //   if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n//   //   setPendingRescheduleData({ appointmentId, newRequestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\r\n//   //   setShowPendingRescheduleModal(true);\r\n//   // };\r\n\r\n//   const submitPendingReschedule = async () => {\r\n//     const { appointmentId, newRequestedDateTime, reason } = pendingRescheduleData;\r\n//     if (!newRequestedDateTime) {\r\n//       setError('Please select a date/time.');\r\n//       return;\r\n//     }\r\n//     const dt = new Date(newRequestedDateTime);\r\n//     const now = new Date();\r\n//     if (dt <= now) {\r\n//       setError('Date/time must be in the future.');\r\n//       return;\r\n//     }\r\n//     const hours = dt.getHours();\r\n//     const minutes = dt.getMinutes();\r\n//     if (hours < 9 || hours >= 17 || (hours === 12 && minutes >= 0) || (hours === 13 && minutes < 60)) {\r\n//       setError('Slot outside working hours.');\r\n//       return;\r\n//     }\r\n//     if (minutes % 20 !== 0) {\r\n//       setError('Slot must align to 20-minute boundary.');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       await adminAPI.rescheduleAppointment({ appointmentId: parseInt(appointmentId), newRequestedDateTime, reason });\r\n//       setShowPendingRescheduleModal(false);\r\n//       setPendingRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\r\n//       setError('');\r\n//       fetchData();\r\n//       alert('Appointment rescheduled!');\r\n//     } catch (err) {\r\n//       setError(err.response?.data?.message || 'Error rescheduling appointment: ' + err.message);\r\n//     }\r\n//   };\r\n\r\n//   const archiveAppointment = async (id) => {\r\n//     try {\r\n//       await adminAPI.archiveAppointment(id);\r\n//       fetchData();\r\n//       alert('Appointment archived!');\r\n//     } catch (err) {\r\n//       alert('Error archiving appointment: ' + (err.response?.data?.message || err.message));\r\n//     }\r\n//   };\r\n\r\n//   const filteredDoctors = doctors.filter(d => filters.doctors === 'all' || d.status.toLowerCase() === filters.doctors);\r\n//   const filteredPatients = patients.filter(p => filters.patients === 'all' || p.status.toLowerCase() === filters.patients);\r\n//   const filteredAdmins = admins.filter(a => filters.admins === 'all' || a.status.toLowerCase() === filters.admins);\r\n//   const filteredAppointments = allAppointments.filter(ap => {\r\n//     if (!ap) return false;\r\n//     const searchTerm = filters.appointments.toLowerCase();\r\n//     return searchTerm === 'all' || ap.status.toLowerCase() === searchTerm;\r\n//   });\r\n\r\n//   const tableStyle = {\r\n//     width: '100%',\r\n//     borderCollapse: 'collapse',\r\n//     marginTop: '1rem',\r\n//     fontSize: '0.9rem',\r\n//   };\r\n//   const thStyle = {\r\n//     border: '1px solid #ddd',\r\n//     padding: '12px',\r\n//     backgroundColor: '#f2f2f2',\r\n//     textAlign: 'left',\r\n//   };\r\n//   const tdStyle = {\r\n//     border: '1px solid #ddd',\r\n//     padding: '12px',\r\n//   };\r\n//   const trHoverStyle = {\r\n//     backgroundColor: '#f5f5f5',\r\n//   };\r\n//   const buttonStyle = {\r\n//     padding: '6px 12px',\r\n//     margin: '2px',\r\n//     border: 'none',\r\n//     borderRadius: '4px',\r\n//     cursor: 'pointer',\r\n//     fontSize: '0.8rem',\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: 'flex', fontFamily: 'Poppins, sans-serif', background: '#f4f8fb', minHeight: '100vh' }}>\r\n//       <div style={{ width: sidebarCollapsed ? '0' : '250px', background: '#007bff', color: 'black', padding: '1rem', transition: 'width 0.3s', overflow: 'hidden' }}>\r\n//         <button onClick={() => { console.log('Sidebar toggle clicked'); setSidebarCollapsed(!sidebarCollapsed); }} style={{ background: 'none', border: 'none', color: 'black', fontSize: '1.5rem', cursor: 'pointer', fontWeight: 'bold' }}>\r\n//           ☰\r\n//         </button>\r\n//         <h2 style={{ color: 'black', fontWeight: 'bold' }}>Admin Menu</h2>\r\n//         <ul style={{ listStyle: 'none', padding: 0 }}>\r\n//           <li><button onClick={() => { console.log('Create Doctor section clicked'); setActiveSection('createDoctor'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Create Doctor</button></li>\r\n//           <li><button onClick={() => { console.log('Create Patient section clicked'); setActiveSection('createPatient'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Create Patient</button></li>\r\n//           <li><button onClick={() => { console.log('Create Admin section clicked'); setActiveSection('createAdmin'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Create Admin</button></li>\r\n//           <li><button onClick={() => { console.log('Doctors section clicked'); setActiveSection('doctors'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Doctors</button></li>\r\n//           <li><button onClick={() => { console.log('Patients section clicked'); setActiveSection('patients'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Patients</button></li>\r\n//           <li><button onClick={() => { console.log('Admins section clicked'); setActiveSection('admins'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Admins</button></li>\r\n//           <li><button onClick={() => { console.log('Appointments section clicked'); setActiveSection('appointments'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Appointments</button></li>  \r\n//           <li><button onClick={() => { console.log('Reschedule Appointment section clicked'); setActiveSection('rescheduleAppointment'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Reschedule Appointment</button></li>\r\n//           <li><button onClick={() => { console.log('Reassign Appointment section clicked'); setActiveSection('reassignAppointment'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Reassign Appointment</button></li>\r\n//         </ul>\r\n//       </div>\r\n//       <div style={{ flex: 1, padding: '2rem', display: 'flex', flexDirection: 'column' }}>\r\n//         {loading && <p>Loading...</p>}\r\n//         {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//         <div style={{ display: activeSection === 'createDoctor' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Create Doctor</h3>\r\n//             <form onSubmit={(e) => { e.preventDefault(); createDoctor(); }}>\r\n//               <input type=\"text\" placeholder=\"Full Name\" value={newDoctor.fullName} onChange={(e) => setNewDoctor({ ...newDoctor, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"email\" placeholder=\"Email\" value={newDoctor.emailId} onChange={(e) => setNewDoctor({ ...newDoctor, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"text\" placeholder=\"Phone\" value={newDoctor.phoneNumber} onChange={(e) => setNewDoctor({ ...newDoctor, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"password\" placeholder=\"Password\" value={newDoctor.rawPassword} onChange={(e) => setNewDoctor({ ...newDoctor, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"password\" placeholder=\"Confirm Password\" value={newDoctor.confirmPassword} onChange={(e) => setNewDoctor({ ...newDoctor, confirmPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}/>\r\n//               <select value={newDoctor.specialization} onChange={(e) => setNewDoctor({ ...newDoctor, specialization: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//                 <option value=\"\">Select Specialization</option>\r\n//                 <option value=\"CARDIOLOGIST\">Cardiologist</option>\r\n//                 <option value=\"ORTHOPEDIC\">Orthopedic</option>\r\n//                 <option value=\"DENTIST\">Dentist</option>\r\n//                 <option value=\"GYNAECOLOGIST\">Gynaecologist</option>\r\n//                 <option value=\"NEUROLOGIST\">Neurologist</option>\r\n//                 <option value=\"GASTROENTEROLOGIST\">Gastroenterologist</option>\r\n//                 <option value=\"PEDIATRICS\">Pediatrics</option>\r\n//                 <option value=\"RADIOLOGY\">Radiology</option>\r\n//                 <option value=\"GENERAL_PHYSICIAN\">General Physician</option>\r\n//                 <option value=\"OTOLARYNGOLOGIST_ENT\">Otolaryngologist ENT</option>\r\n//                 <option value=\"ENDOCRINOLOGIST\">Endocrinologist</option>\r\n//                 <option value=\"ONCOLOGY\">Oncology</option>\r\n//               </select>\r\n//               <input type=\"text\" placeholder=\"Qualification\" value={newDoctor.qualification} onChange={(e) => setNewDoctor({ ...newDoctor, qualification: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"number\" placeholder=\"Experience Years\" value={newDoctor.experienceYears} onChange={(e) => setNewDoctor({ ...newDoctor, experienceYears: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Create Doctor</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//         <div style={{ display: activeSection === 'createPatient' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Create Patient</h3>\r\n//             <form onSubmit={(e) => { e.preventDefault(); createPatient(); }}>\r\n//               <input type=\"text\" placeholder=\"Full Name\" value={newPatient.fullName} onChange={(e) => setNewPatient({ ...newPatient, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"email\" placeholder=\"Email\" value={newPatient.emailId} onChange={(e) => setNewPatient({ ...newPatient, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"text\" placeholder=\"Phone\" value={newPatient.phoneNumber} onChange={(e) => setNewPatient({ ...newPatient, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"password\" placeholder=\"Password\" value={newPatient.rawPassword} onChange={(e) => setNewPatient({ ...newPatient, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"password\" placeholder=\"Confirm Password\" value={newPatient.confirmPassword} onChange={(e) => setNewPatient({ ...newPatient, confirmPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <select value={newPatient.gender} onChange={(e) => setNewPatient({ ...newPatient, gender: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//                 <option value=\"\">Select Gender</option>\r\n//                 <option value=\"MALE\">Male</option>\r\n//                 <option value=\"FEMALE\">Female</option>\r\n//                 <option value=\"OTHER\">Other</option>\r\n//               </select>\r\n//               <input type=\"date\" value={newPatient.dateOfBirth} onChange={(e) => setNewPatient({ ...newPatient, dateOfBirth: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Create Patient</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//         <div style={{ display: activeSection === 'createAdmin' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Create Admin</h3>\r\n//             <form onSubmit={(e) => { e.preventDefault(); createAdmin(); }}>\r\n//               <input type=\"text\" placeholder=\"Full Name\" value={newAdmin.fullName} onChange={(e) => setNewAdmin({ ...newAdmin, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"email\" placeholder=\"Email\" value={newAdmin.email} onChange={(e) => setNewAdmin({ ...newAdmin, email: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"text\" placeholder=\"Phone\" value={newAdmin.phoneNumber} onChange={(e) => setNewAdmin({ ...newAdmin, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"password\" placeholder=\"Password\" value={newAdmin.rawPassword} onChange={(e) => setNewAdmin({ ...newAdmin, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"password\" placeholder=\"Confirm Password\" value={newAdmin.confirmPassword} onChange={(e) => setNewAdmin({ ...newAdmin, confirmPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <label><input type=\"checkbox\" checked={newAdmin.superAdmin} onChange={(e) => setNewAdmin({ ...newAdmin, superAdmin: e.target.checked })} /> Super Admin</label>\r\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Create Admin</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//         <div style={{ display: activeSection === 'doctors' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Doctors</h3>\r\n//             <table style={tableStyle}>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th style={thStyle}>Name</th>\r\n//                   <th style={thStyle}>Status</th>\r\n//                   <th style={thStyle}>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredDoctors.map((d, index) => (\r\n//                   <tr key={d.userId} style={index % 2 === 0 ? {} : trHoverStyle} onMouseEnter={(e) => e.target.style.backgroundColor = '#e9ecef'} onMouseLeave={(e) => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5'}>\r\n//                     <td style={tdStyle}>{d.fullName}</td>\r\n//                     <td style={tdStyle}>{d.status}</td>\r\n//                     <td style={tdStyle}>\r\n//                       <button onClick={() => approveDoctor(d.userId)} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Approve</button>\r\n//                       <button onClick={() => blockUser(d.userId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Block</button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//           <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n//             <h4>Filters</h4>\r\n//             <select value={filters.doctors} onChange={(e) => setFilters({ ...filters, doctors: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//               <option value=\"all\">All</option>\r\n//               <option value=\"active\">Active</option>\r\n//               <option value=\"inactive\">Inactive</option>\r\n//               <option value=\"approved\">Approved</option>\r\n//               <option value=\"blocked\">Blocked</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <div style={{ display: activeSection === 'patients' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Patients</h3>\r\n//             <table style={tableStyle}>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th style={thStyle}>Name</th>\r\n//                   <th style={thStyle}>Status</th>\r\n//                   <th style={thStyle}>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredPatients.map((p, index) => (\r\n//                   <tr key={p.userId} style={index % 2 === 0 ? {} : trHoverStyle} onMouseEnter={(e) => e.target.style.backgroundColor = '#e9ecef'} onMouseLeave={(e) => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5'}>\r\n//                     <td style={tdStyle}>{p.fullName}</td>\r\n//                     <td style={tdStyle}>{p.status}</td>\r\n//                     <td style={tdStyle}>\r\n//                       <button onClick={() => blockUser(p.userId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Block</button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//           <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n//             <h4>Filters</h4>\r\n//             <select value={filters.patients} onChange={(e) => setFilters({ ...filters, patients: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//               <option value=\"all\">All</option>\r\n//               <option value=\"active\">Active</option>\r\n//               <option value=\"inactive\">Inactive</option>\r\n//               <option value=\"blocked\">Blocked</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <div style={{ display: activeSection === 'admins' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Admins</h3>\r\n//             <table style={tableStyle}>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th style={thStyle}>Name</th>\r\n//                   <th style={thStyle}>Status</th>\r\n//                   <th style={thStyle}>Super Admin</th>\r\n//                   <th style={thStyle}>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredAdmins.map((a, index) => (\r\n//                   <tr key={a.adminId} style={index % 2 === 0 ? {} : trHoverStyle} onMouseEnter={(e) => e.target.style.backgroundColor = '#e9ecef'} onMouseLeave={(e) => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5'}>\r\n//                     <td style={tdStyle}>{a.fullName}</td>\r\n//                     <td style={tdStyle}>{a.status}</td>\r\n//                     <td style={tdStyle}>{a.superAdmin ? 'Yes' : 'No'}</td>\r\n//                     <td style={tdStyle}>\r\n//                       <button onClick={() => blockUser(a.adminId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Block</button>\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//           <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n//             <h4>Filters</h4>\r\n//             <select value={filters.admins} onChange={(e) => setFilters({ ...filters, admins: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//               <option value=\"all\">All</option>\r\n//               <option value=\"active\">Active</option>\r\n//               <option value=\"inactive\">Inactive</option>\r\n//               <option value=\"blocked\">Blocked</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <div style={{ display: activeSection === 'appointments' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>All Appointments</h3>\r\n//             <table style={tableStyle}>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th style={thStyle}>Appointment ID</th>\r\n//                   <th style={thStyle}>Patient Name & ID</th>\r\n//                   <th style={thStyle}>Doctor Name & Specialization</th>\r\n//                   <th style={thStyle}>Date & Time</th>\r\n//                   <th style={thStyle}>Status</th>\r\n//                   <th style={thStyle}>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredAppointments.length > 0 ? (\r\n//                   filteredAppointments.map((ap, index) => (\r\n//                     <tr key={ap.appointmentId || index} style={index % 2 === 0 ? {} : trHoverStyle} onMouseEnter={(e) => e.target.style.backgroundColor = '#e9ecef'} onMouseLeave={(e) => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5'}>\r\n//                       <td style={tdStyle}>{ap.appointmentId}</td>\r\n//                       <td style={tdStyle}>{ap.patient?.fullName || 'N/A'} ({ap.patient?.userId || 'N/A'})</td>\r\n//                       <td style={tdStyle}>{ap.doctor ? `${ap.doctor.fullName} (${ap.doctor.specialization})` : 'Not Assigned'}</td>\r\n//                       <td style={tdStyle}>{ap.scheduledDateTime || ap.preferredDate || 'N/A'}</td>\r\n//                       <td style={tdStyle}>{ap.status}</td>\r\n//                       <td style={tdStyle}>\r\n//                         {ap.status === 'PENDING' && (\r\n//                           <>\r\n//                             <button onClick={() => handleApprove(ap.appointmentId)} style={{ ...buttonStyle, background: '#28a745', color: 'white' }}>Approve</button>\r\n//                             <button onClick={() => reschedulePending(ap.appointmentId)} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Reschedule</button>\r\n//                             <button onClick={() => cancelAppointment(ap.appointmentId)} style={{ ...buttonStyle, background: '#dc3545', color: 'white' }}>Cancel</button>\r\n//                           </>\r\n//                         )}\r\n//                         {ap.status === 'CANCELLED' && (\r\n//                           <>\r\n//                             <button onClick={() => rescheduleCancelled(ap.appointmentId)} style={{ ...buttonStyle, background: '#ffc107', color: 'white' }}>Re-schedule</button>\r\n//                             <button onClick={() => archiveAppointment(ap.appointmentId)} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Archive</button>\r\n//                           </>\r\n//                         )}\r\n//                         <button onClick={() => viewDetails(ap)} style={{ ...buttonStyle, background: '#17a2b8', color: 'white' }}>View Details</button>\r\n//                       </td>\r\n//                     </tr>\r\n//                   ))\r\n//                 ) : (\r\n//                   <tr>\r\n//                     <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px' }}>No appointments available.</td>\r\n//                   </tr>\r\n//                 )}\r\n//               </tbody>\r\n//             </table>\r\n//           </div>\r\n//           <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n//             <h4>Filters</h4>\r\n//             <select value={filters.appointments} onChange={(e) => setFilters({ ...filters, appointments: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//               <option value=\"all\">All</option>\r\n//               <option value=\"pending\">Pending</option>\r\n//               <option value=\"confirmed\">Confirmed</option>\r\n//               <option value=\"cancelled\">Cancelled</option>\r\n//             </select>\r\n//           </div>\r\n//         </div>\r\n//         <div style={{ display: activeSection === 'rescheduleAppointment' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Reschedule Appointment</h3>\r\n//             <form onSubmit={(e) => { e.preventDefault(); rescheduleAppointment(); }}>\r\n//               <input type=\"number\" placeholder=\"Appointment ID\" value={rescheduleData.appointmentId} onChange={(e) => setRescheduleData({ ...rescheduleData, appointmentId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"datetime-local\" value={rescheduleData.newRequestedDateTime} onChange={(e) => setRescheduleData({ ...rescheduleData, newRequestedDateTime: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"text\" placeholder=\"Reason\" value={rescheduleData.reason} onChange={(e) => setRescheduleData({ ...rescheduleData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Reschedule</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//         <div style={{ display: activeSection === 'reassignAppointment' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n//           <div style={{ flex: 1 }}>\r\n//             <h3>Reassign Appointment</h3>\r\n//             <form onSubmit={(e) => { e.preventDefault(); reassignAppointment(); }}>\r\n//               <input type=\"number\" placeholder=\"Appointment ID\" value={reassignData.appointmentId} onChange={(e) => setReassignData({ ...reassignData, appointmentId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <select value={reassignData.newDoctorUserId} onChange={(e) => setReassignData({ ...reassignData, newDoctorUserId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//                 <option value=\"\">Select New Doctor</option>\r\n//                 {doctors.map(d => <option key={d.userId} value={d.userId}>{d.fullName} ({d.specialization})</option>)}\r\n//               </select>\r\n//               <input type=\"datetime-local\" value={reassignData.requestedDateTime} onChange={(e) => setReassignData({ ...reassignData, requestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <input type=\"text\" placeholder=\"Reason\" value={reassignData.reason} onChange={(e) => setReassignData({ ...reassignData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//               <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Reassign</button>\r\n//             </form>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {showApproveModal && (\r\n//         <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000 }}>\r\n//           <div style={{ background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', width: '400px' }}>\r\n//             <h3>Approve Appointment</h3>\r\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//             <label>Doctor:</label>\r\n//             <select value={approveData.doctorUserId} onChange={(e) => setApproveData({ ...approveData, doctorUserId: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//               <option value=\"\">Select Doctor</option>\r\n//               {doctors.map(d => <option key={d.userId} value={d.userId}>{d.fullName} ({d.specialization})</option>)}\r\n//             </select>\r\n//             <label>Date/Time:</label>\r\n//             <input type=\"datetime-local\" value={approveData.requestedDateTime} onChange={(e) => setApproveData({ ...approveData, requestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <button onClick={submitApprove} style={{ ...buttonStyle, background: '#28a745', color: 'white', marginRight: '10px' }}>Approve</button>\r\n//             <button onClick={() => { setShowApproveModal(false); setError(''); }} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Cancel</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {showRescheduleModal && (\r\n//         <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000 }}>\r\n//           <div style={{ background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', width: '400px' }}>\r\n//             <h3>Reschedule Cancelled Appointment</h3>\r\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//             <label>Doctor:</label>\r\n//             <select value={rescheduleModalData.newDoctorUserId} onChange={(e) => setRescheduleModalData({ ...rescheduleModalData, newDoctorUserId: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n//               <option value=\"\">Select Doctor</option>\r\n//               {doctors.map(d => <option key={d.userId} value={d.userId}>{d.fullName} ({d.specialization})</option>)}\r\n//             </select>\r\n//             <label>Date/Time:</label>\r\n//             <input type=\"datetime-local\" value={rescheduleModalData.requestedDateTime} onChange={(e) => setRescheduleModalData({ ...rescheduleModalData, requestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <label>Reason:</label>\r\n//             <input type=\"text\" placeholder=\"Reason for reschedule\" value={rescheduleModalData.reason} onChange={(e) => setRescheduleModalData({ ...rescheduleModalData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <button onClick={submitReschedule} style={{ ...buttonStyle, background: '#28a745', color: 'white', marginRight: '10px' }}>Reschedule</button>\r\n//             <button onClick={() => { setShowRescheduleModal(false); setError(''); }} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Cancel</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       {rescheduleModal && (\r\n//        <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 4px 10px rgba(0,0,0,0.1)', zIndex: 1000 }}>\r\n//          <h3>Reschedule Appointment</h3>\r\n//          <p>Patient: {selectedAppointment?.patient?.fullName || 'N/A'}</p>\r\n//          <p>Current Date/Time: {selectedAppointment?.scheduledDateTime || 'N/A'}</p>\r\n//          <input type=\"datetime-local\" value={newDateTime} onChange={(e) => setNewDateTime(e.target.value)} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//          <button onClick={() => {\r\n//            // UPDATED: Use selectedAppointment for modal-based reschedule\r\n//            adminAPI.rescheduleAppointment(selectedAppointment.appointmentId, { newRequestedDateTime: newDateTime });\r\n//            setRescheduleModal(false);\r\n//            setNewDateTime('');\r\n//            fetchData();\r\n//            alert('Appointment rescheduled successfully');\r\n//          }} style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Confirm</button>\r\n//          <button onClick={() => setRescheduleModal(false)} style={{ ...buttonStyle, background: '#ccc', color: 'black' }}>Cancel</button>\r\n//        </div>\r\n//      )}\r\n\r\n\r\n//       {showPendingRescheduleModal && (\r\n//         <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000 }}>\r\n//           <div style={{ background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', width: '400px' }}>\r\n//             <h3>Reschedule Pending Appointment</h3>\r\n//             {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//             <label>Date/Time:</label>\r\n//             <input type=\"datetime-local\" value={pendingRescheduleData.newRequestedDateTime} onChange={(e) => setPendingRescheduleData({ ...pendingRescheduleData, newRequestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <label>Reason:</label>\r\n//             <input type=\"text\" placeholder=\"Reason for reschedule\" value={pendingRescheduleData.reason} onChange={(e) => setPendingRescheduleData({ ...pendingRescheduleData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n//             <button onClick={submitPendingReschedule} style={{ ...buttonStyle, background: '#28a745', color: 'white', marginRight: '10px' }}>Reschedule</button>\r\n//             <button onClick={() => { setShowPendingRescheduleModal(false); setError(''); }} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Cancel</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { adminAPI } from '../services/api';\r\n\r\nconst AdminDashboard = () => {\r\n  const [activeSection, setActiveSection] = useState('doctors');\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [patients, setPatients] = useState([]);\r\n  const [admins, setAdmins] = useState([]);\r\n  const [allAppointments, setAllAppointments] = useState([]);  // Combined list for all appointments\r\n  const [newDoctor, setNewDoctor] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', specialization: '', qualification: '', experienceYears: '' });\r\n  const [newPatient, setNewPatient] = useState({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', gender: '', dateOfBirth: '' });\r\n  const [newAdmin, setNewAdmin] = useState({ fullName: '', email: '', phoneNumber: '', rawPassword: '', confirmPassword: '', superAdmin: false });\r\n  const [reassignData, setReassignData] = useState({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });\r\n  const [rescheduleData, setRescheduleData] = useState({ appointmentId: '', newRequestedDateTime: '', reason: '' });\r\n  const [filters, setFilters] = useState({ doctors: 'all', patients: 'all', admins: 'all', appointments: 'all' });  // Added appointments filter\r\n  const [loading, setLoading] = useState(false);\r\n  const [showApproveModal, setShowApproveModal] = useState(false);\r\n  const [approveData, setApproveData] = useState({ appointmentId: '', doctorUserId: '', requestedDateTime: '' });\r\n  const [showRescheduleModal, setShowRescheduleModal] = useState(false);  // For cancelled appointments\r\n  const [rescheduleModalData, setRescheduleModalData] = useState({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });  // For cancelled\r\n  const [showPendingRescheduleModal, setShowPendingRescheduleModal] = useState(false);  // For pending appointments\r\n  const [pendingRescheduleData, setPendingRescheduleData] = useState({ appointmentId: '', newRequestedDateTime: '', reason: '' });  // For pending\r\n  const [error, setError] = useState('');\r\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\r\n     const [newDateTime, setNewDateTime] = useState('');\r\n     const [rescheduleModal, setRescheduleModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const [d, p, a, appts] = await Promise.all([\r\n        adminAPI.getDoctors(),\r\n        adminAPI.getPatients(),\r\n        adminAPI.getAdmins(),\r\n        adminAPI.getAllAppointments()  // New: Fetch all appointments\r\n      ]);\r\n      setDoctors(d.data || []);\r\n      setPatients(p.data || []);\r\n      setAdmins(a.data || []);\r\n      setAllAppointments(appts.data || []);\r\n      \r\n      console.log('Fetched doctors:', d.data);\r\n      console.log('Fetched patients:', p.data);\r\n      console.log('Fetched admins:', a.data);\r\n      console.log('Fetched all appointments:', appts.data);\r\n    } catch (err) {\r\n      console.error('Fetch error details:', err);\r\n      alert('Error fetching data: ' + (err.response?.data?.message || err.message));\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const createDoctor = async () => {\r\n    console.log('Create Doctor button clicked');\r\n    if (newDoctor.rawPassword !== newDoctor.confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n    try {\r\n      await adminAPI.createDoctor(newDoctor);\r\n      setNewDoctor({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', specialization: '', qualification: '', experienceYears: '' });\r\n      fetchData();\r\n      alert('Doctor created successfully!');\r\n    } catch (err) {\r\n      alert('Error creating doctor: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const createPatient = async () => {\r\n    console.log('Create Patient button clicked');\r\n    if (newPatient.rawPassword !== newPatient.confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n    try {\r\n      await adminAPI.createPatient(newPatient);\r\n      setNewPatient({ fullName: '', emailId: '', phoneNumber: '', rawPassword: '', confirmPassword: '', gender: '', dateOfBirth: '' });\r\n      fetchData();\r\n      alert('Patient created successfully!');\r\n    } catch (err) {\r\n      alert('Error creating patient: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const createAdmin = async () => {\r\n    console.log('Create Admin button clicked');\r\n    if (newAdmin.rawPassword !== newAdmin.confirmPassword) {\r\n      alert('Passwords do not match');\r\n      return;\r\n    }\r\n    try {\r\n      await adminAPI.createAdmin(newAdmin);\r\n      setNewAdmin({ fullName: '', email: '', phoneNumber: '', rawPassword: '', confirmPassword: '', superAdmin: false });\r\n      fetchData();\r\n      alert('Admin created successfully!');\r\n    } catch (err) {\r\n      alert('Error creating admin: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const approveDoctor = async (id) => {\r\n    console.log('Approve Doctor button clicked for ID:', id);\r\n    try {\r\n      await adminAPI.approveDoctor(id);\r\n      fetchData();\r\n      alert('Doctor approved!');\r\n    } catch (err) {\r\n      alert('Error approving doctor: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const blockUser = async (id, status) => {\r\n    console.log('Block User button clicked for ID:', id, 'Status:', status);\r\n    try {\r\n      await adminAPI.blockUser(id, status);\r\n      fetchData();\r\n      alert('User status updated!');\r\n    } catch (err) {\r\n      alert('Error updating user status: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const handleApprove = (appointmentId) => {\r\n    console.log('Approve Appointment button clicked for ID:', appointmentId);\r\n    const now = new Date();\r\n    const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n    nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n    if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n    if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n    setApproveData({ appointmentId, doctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16) });\r\n    setShowApproveModal(true);\r\n  };\r\n\r\n  const submitApprove = async () => {\r\n    const { appointmentId, doctorUserId, requestedDateTime } = approveData;\r\n    if (!doctorUserId || !requestedDateTime) {\r\n      setError('Please select a doctor and date/time.');\r\n      return;\r\n    }\r\n    const doctorExists = doctors.some(d => d.userId == doctorUserId);\r\n    if (!doctorExists) {\r\n      setError('Invalid Doctor ID. Please select from the list.');\r\n      return;\r\n    }\r\n    const dt = new Date(requestedDateTime);\r\n    const now = new Date();\r\n    if (dt <= now) {\r\n      setError('Date/time must be in the future.');\r\n      return;\r\n    }\r\n    const hours = dt.getHours();\r\n    const minutes = dt.getMinutes();\r\n    if (hours < 9 || hours >= 17 || (hours === 12 && minutes >= 0) || (hours === 13 && minutes < 60)) {\r\n      setError('Slot outside working hours. Working hours: 9:00 AM - 5:00 PM, excluding lunch 12:00-1:00 PM.');\r\n      return;\r\n    }\r\n    if (minutes % 20 !== 0) {\r\n      setError('Slot must align to 20-minute boundary (e.g., 09:00, 09:20).');\r\n      return;\r\n    }\r\n    try {\r\n      await adminAPI.approveAppointment(appointmentId, { doctorUserId: parseInt(doctorUserId), requestedDateTime });\r\n      setShowApproveModal(false);\r\n      setApproveData({ appointmentId: '', doctorUserId: '', requestedDateTime: '' });\r\n      setError('');\r\n      fetchData();\r\n      alert('Appointment approved!');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error approving appointment: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const cancelAppointment = async (id) => {\r\n    console.log('Cancel Appointment button clicked for ID:', id);\r\n    const reason = prompt('Enter cancellation reason:');\r\n    if (!reason) return;\r\n    try {\r\n      await adminAPI.cancelAppointment(id, { reason });\r\n      fetchData();\r\n      alert('Appointment cancelled!');\r\n    } catch (err) {\r\n      alert('Error cancelling appointment: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const viewDetails = (appointment) => {\r\n    console.log('View Details button clicked for appointment:', appointment.appointmentId);\r\n    alert('Appointment Details:\\n' + JSON.stringify(appointment, null, 2));\r\n  };\r\n\r\n  // const rescheduleAppointment = async () => {\r\n  //   try {\r\n  //     // UPDATED: Pass appointmentId as path param, and data as body\r\n  //     await adminAPI.rescheduleAppointment(rescheduleData.appointmentId, {\r\n  //       newRequestedDateTime: rescheduleData.newRequestedDateTime,\r\n  //       reason: rescheduleData.reason\r\n  //     });\r\n  //     setRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\r\n  //     fetchData();\r\n  //     alert('Appointment rescheduled successfully!');\r\n  //   } catch (err) {\r\n  //     alert('Error rescheduling appointment: ' + (err.response?.data?.message || err.message));\r\n  //   }\r\n  // };\r\n\r\n  const rescheduleCancelled = async (appointmentId) => {\r\n    console.log('Re-schedule Cancelled button clicked for ID:', appointmentId);\r\n    const now = new Date();\r\n    const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n    nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n    if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n    if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n    // NEW: Set selectedAppointment to the current appointment for modal display\r\n    const appt = allAppointments.find(a => a.appointmentId === appointmentId);\r\n    setSelectedAppointment(appt);\r\n    setRescheduleModalData({ appointmentId, newDoctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\r\n    setShowRescheduleModal(true);\r\n  };\r\n  const reschedulePending = async (appointmentId) => {\r\n    console.log('Reschedule Pending button clicked for ID:', appointmentId);\r\n    const now = new Date();\r\n    const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n    nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n    if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n    if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n    // NEW: Set selectedAppointment\r\n    const appt = allAppointments.find(a => a.appointmentId === appointmentId);\r\n    setSelectedAppointment(appt);\r\n    setPendingRescheduleData({ appointmentId, newRequestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\r\n    setShowPendingRescheduleModal(true);\r\n  };\r\n  const rescheduleAppointment = async () => {\r\n    try {\r\n      // UPDATED: Use rescheduleData instead of  variables\r\n      await adminAPI.rescheduleAppointment(rescheduleData.appointmentId, {\r\n        newRequestedDateTime: rescheduleData.newRequestedDateTime,\r\n        reason: rescheduleData.reason\r\n      });\r\n      setRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\r\n      fetchData();\r\n      alert('Appointment rescheduled successfully!');\r\n    } catch (err) {\r\n      alert('Error rescheduling: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const reassignAppointment = async () => {\r\n    try {\r\n      // UPDATED: Pass appointmentId as path param, and data as body\r\n      await adminAPI.reassignAppointment(reassignData.appointmentId, {\r\n        newDoctorUserId: reassignData.newDoctorUserId,\r\n        requestedDateTime: reassignData.requestedDateTime,\r\n        reason: reassignData.reason\r\n      });\r\n      setReassignData({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });\r\n      fetchData();\r\n      alert('Appointment reassigned successfully!');\r\n    } catch (err) {\r\n      alert('Error reassigning appointment: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  // const rescheduleCancelled = async (appointmentId) => {\r\n  //   console.log('Re-schedule Cancelled button clicked for ID:', appointmentId);\r\n  //   const now = new Date();\r\n  //   const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n  //   nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n  //   if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n  //   if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n  //   setRescheduleModalData({ appointmentId, newDoctorUserId: '', requestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\r\n  //   setShowRescheduleModal(true);\r\n  // };\r\n\r\n  const submitReschedule = async () => {\r\n    const { appointmentId, newDoctorUserId, requestedDateTime, reason } = rescheduleModalData;\r\n    if (!newDoctorUserId || !requestedDateTime) {\r\n      setError('Please select a doctor and date/time.');\r\n      return;\r\n    }\r\n    const doctorExists = doctors.some(d => d.userId == newDoctorUserId);\r\n    if (!doctorExists) {\r\n      setError('Invalid Doctor ID. Please select from the list.');\r\n      return;\r\n    }\r\n    const dt = new Date(requestedDateTime);\r\n    const now = new Date();\r\n    if (dt <= now) {\r\n      setError('Date/time must be in the future.');\r\n      return;\r\n    }\r\n    const hours = dt.getHours();\r\n    const minutes = dt.getMinutes();\r\n    if (hours < 9 || hours >= 17 || (hours === 12 && minutes >= 0) || (hours === 13 && minutes < 60)) {\r\n      setError('Slot outside working hours. Working hours: 9:00 AM - 5:00 PM, excluding lunch 12:00-1:00 PM.');\r\n      return;\r\n    }\r\n    if (minutes % 20 !== 0) {\r\n      setError('Slot must align to 20-minute boundary (e.g., 09:00, 09:20).');\r\n      return;\r\n    }\r\n    try {\r\n      await adminAPI.reassignAppointment({ appointmentId: parseInt(appointmentId), newDoctorUserId: parseInt(newDoctorUserId), requestedDateTime, reason });\r\n      setShowRescheduleModal(false);\r\n      setRescheduleModalData({ appointmentId: '', newDoctorUserId: '', requestedDateTime: '', reason: '' });\r\n      setError('');\r\n      fetchData();\r\n      alert('Appointment rescheduled!');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error rescheduling appointment: ' + err.message);\r\n    }\r\n  };\r\n\r\n  // const reschedulePending = async (appointmentId) => {\r\n  //   console.log('Reschedule Pending button clicked for ID:', appointmentId);\r\n  //   const now = new Date();\r\n  //   const nextHour = new Date(now.getTime() + 60 * 60 * 1000);\r\n  //   nextHour.setMinutes(Math.ceil(nextHour.getMinutes() / 20) * 20);\r\n  //   if (nextHour.getHours() < 9) nextHour.setHours(9, 0, 0, 0);\r\n  //   if (nextHour.getHours() >= 17) nextHour.setDate(nextHour.getDate() + 1, 9, 0, 0, 0);\r\n  //   setPendingRescheduleData({ appointmentId, newRequestedDateTime: nextHour.toISOString().slice(0, 16), reason: '' });\r\n  //   setShowPendingRescheduleModal(true);\r\n  // };\r\n\r\n  const submitPendingReschedule = async () => {\r\n    const { appointmentId, newRequestedDateTime, reason } = pendingRescheduleData;\r\n    if (!newRequestedDateTime) {\r\n      setError('Please select a date/time.');\r\n      return;\r\n    }\r\n    const dt = new Date(newRequestedDateTime);\r\n    const now = new Date();\r\n    if (dt <= now) {\r\n      setError('Date/time must be in the future.');\r\n      return;\r\n    }\r\n    const hours = dt.getHours();\r\n    const minutes = dt.getMinutes();\r\n    if (hours < 9 || hours >= 17 || (hours === 12 && minutes >= 0) || (hours === 13 && minutes < 60)) {\r\n      setError('Slot outside working hours.');\r\n      return;\r\n    }\r\n    if (minutes % 20 !== 0) {\r\n      setError('Slot must align to 20-minute boundary.');\r\n      return;\r\n    }\r\n    try {\r\n      await adminAPI.rescheduleAppointment({ appointmentId: parseInt(appointmentId), newRequestedDateTime, reason });\r\n      setShowPendingRescheduleModal(false);\r\n      setPendingRescheduleData({ appointmentId: '', newRequestedDateTime: '', reason: '' });\r\n      setError('');\r\n      fetchData();\r\n      alert('Appointment rescheduled!');\r\n    } catch (err) {\r\n      setError(err.response?.data?.message || 'Error rescheduling appointment: ' + err.message);\r\n    }\r\n  };\r\n\r\n  const archiveAppointment = async (id) => {\r\n    try {\r\n      await adminAPI.archiveAppointment(id);\r\n      fetchData();\r\n      alert('Appointment archived!');\r\n    } catch (err) {\r\n      alert('Error archiving appointment: ' + (err.response?.data?.message || err.message));\r\n    }\r\n  };\r\n\r\n  const filteredDoctors = doctors.filter(d => filters.doctors === 'all' || d.status.toLowerCase() === filters.doctors);\r\n  const filteredPatients = patients.filter(p => filters.patients === 'all' || p.status.toLowerCase() === filters.patients);\r\n  const filteredAdmins = admins.filter(a => filters.admins === 'all' || a.status.toLowerCase() === filters.admins);\r\n  const filteredAppointments = allAppointments.filter(ap => {\r\n    if (!ap) return false;\r\n    const searchTerm = filters.appointments.toLowerCase();\r\n    return searchTerm === 'all' || ap.status.toLowerCase() === searchTerm;\r\n  });\r\n\r\n  const tableStyle = {\r\n    width: '100%',\r\n    borderCollapse: 'collapse',\r\n    marginTop: '1rem',\r\n    fontSize: '0.9rem',\r\n  };\r\n  const thStyle = {\r\n    border: '1px solid #ddd',\r\n    padding: '12px',\r\n    backgroundColor: '#f2f2f2',\r\n    textAlign: 'left',\r\n  };\r\n  const tdStyle = {\r\n    border: '1px solid #ddd',\r\n    padding: '12px',\r\n  };\r\n  const trHoverStyle = {\r\n    backgroundColor: '#f5f5f5',\r\n  };\r\n  const buttonStyle = {\r\n    padding: '6px 12px',\r\n    margin: '2px',\r\n    border: 'none',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    fontSize: '0.8rem',\r\n    backgroundColor: '#343a40', // Initial dark\r\n    color: 'white',\r\n    transition: 'background-color 0.3s', // For graded effect on click\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', fontFamily: 'Poppins, sans-serif', background: '#f4f8fb', minHeight: '100vh' }}>\r\n      {/* CSS to prevent hover from changing button color to white */}\r\n      <style>\r\n        {`\r\n          .action-button:hover {\r\n            background-color: #343a40 !important; /* Keep dark on hover */\r\n            color: white !important;\r\n          }\r\n          .action-button.clicked {\r\n            background-color: #6c757d; /* Lighter shade for graded effect after click */\r\n          }\r\n        `}\r\n      </style>\r\n      <div style={{ width: sidebarCollapsed ? '0' : '250px', background: '#007bff', color: 'black', padding: '1rem', transition: 'width 0.3s', overflow: 'hidden' }}>\r\n        <button onClick={() => { console.log('Sidebar toggle clicked'); setSidebarCollapsed(!sidebarCollapsed); }} style={{ background: 'none', border: 'none', color: 'black', fontSize: '1.5rem', cursor: 'pointer', fontWeight: 'bold' }}>\r\n          ☰\r\n        </button>\r\n        <h2 style={{ color: 'black', fontWeight: 'bold' }}>Admin Menu</h2>\r\n        <ul style={{ listStyle: 'none', padding: 0 }}>\r\n          <li><button onClick={() => { console.log('Create Doctor section clicked'); setActiveSection('createDoctor'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Create Doctor</button></li>\r\n          <li><button onClick={() => { console.log('Create Patient section clicked'); setActiveSection('createPatient'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Create Patient</button></li>\r\n          <li><button onClick={() => { console.log('Create Admin section clicked'); setActiveSection('createAdmin'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Create Admin</button></li>\r\n          <li><button onClick={() => { console.log('Doctors section clicked'); setActiveSection('doctors'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Doctors</button></li>\r\n          <li><button onClick={() => { console.log('Patients section clicked'); setActiveSection('patients'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Patients</button></li>\r\n          <li><button onClick={() => { console.log('Admins section clicked'); setActiveSection('admins'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Admins</button></li>\r\n          <li><button onClick={() => { console.log('Appointments section clicked'); setActiveSection('appointments'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Appointments</button></li>  \r\n          <li><button onClick={() => { console.log('Reschedule Appointment section clicked'); setActiveSection('rescheduleAppointment'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Reschedule Appointment</button></li>\r\n          <li><button onClick={() => { console.log('Reassign Appointment section clicked'); setActiveSection('reassignAppointment'); }} style={{ background: 'none', border: 'none', color: 'black', cursor: 'pointer', fontWeight: 'bold' }}>Reassign Appointment</button></li>\r\n        </ul>\r\n      </div>\r\n      <div style={{ flex: 1, padding: '2rem', display: 'flex', flexDirection: 'column' }}>\r\n        {loading && <p>Loading...</p>}\r\n        {error && <p style={{ color: 'red' }}>{error}</p>}\r\n        <div style={{ display: activeSection === 'createDoctor' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n          <div style={{ flex: 1 }}>\r\n            <h3>Create Doctor</h3>\r\n            <form onSubmit={(e) => { e.preventDefault(); createDoctor(); }}>\r\n              <input type=\"text\" placeholder=\"Full Name\" value={newDoctor.fullName} onChange={(e) => setNewDoctor({ ...newDoctor, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"email\" placeholder=\"Email\" value={newDoctor.emailId} onChange={(e) => setNewDoctor({ ...newDoctor, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"text\" placeholder=\"Phone\" value={newDoctor.phoneNumber} onChange={(e) => setNewDoctor({ ...newDoctor, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"password\" placeholder=\"Password\" value={newDoctor.rawPassword} onChange={(e) => setNewDoctor({ ...newDoctor, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"password\" placeholder=\"Confirm Password\" value={newDoctor.confirmPassword} onChange={(e) => setNewDoctor({ ...newDoctor, confirmPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}/>\r\n              <select value={newDoctor.specialization} onChange={(e) => setNewDoctor({ ...newDoctor, specialization: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                <option value=\"\">Select Specialization</option>\r\n                <option value=\"CARDIOLOGIST\">Cardiologist</option>\r\n                <option value=\"ORTHOPEDIC\">Orthopedic</option>\r\n                <option value=\"DENTIST\">Dentist</option>\r\n                <option value=\"GYNAECOLOGIST\">Gynaecologist</option>\r\n                <option value=\"NEUROLOGIST\">Neurologist</option>\r\n                <option value=\"GASTROENTEROLOGIST\">Gastroenterologist</option>\r\n                <option value=\"PEDIATRICS\">Pediatrics</option>\r\n                <option value=\"RADIOLOGY\">Radiology</option>\r\n                <option value=\"GENERAL_PHYSICIAN\">General Physician</option>\r\n                <option value=\"OTOLARYNGOLOGIST_ENT\">Otolaryngologist ENT</option>\r\n                <option value=\"ENDOCRINOLOGIST\">Endocrinologist</option>\r\n                <option value=\"ONCOLOGY\">Oncology</option>\r\n              </select>\r\n              <input type=\"text\" placeholder=\"Qualification\" value={newDoctor.qualification} onChange={(e) => setNewDoctor({ ...newDoctor, qualification: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"number\" placeholder=\"Experience Years\" value={newDoctor.experienceYears} onChange={(e) => setNewDoctor({ ...newDoctor, experienceYears: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Create Doctor</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: activeSection === 'createPatient' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n          <div style={{ flex: 1 }}>\r\n            <h3>Create Patient</h3>\r\n            <form onSubmit={(e) => { e.preventDefault(); createPatient(); }}>\r\n              <input type=\"text\" placeholder=\"Full Name\" value={newPatient.fullName} onChange={(e) => setNewPatient({ ...newPatient, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"email\" placeholder=\"Email\" value={newPatient.emailId} onChange={(e) => setNewPatient({ ...newPatient, emailId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"text\" placeholder=\"Phone\" value={newPatient.phoneNumber} onChange={(e) => setNewPatient({ ...newPatient, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"password\" placeholder=\"Password\" value={newPatient.rawPassword} onChange={(e) => setNewPatient({ ...newPatient, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"password\" placeholder=\"Confirm Password\" value={newPatient.confirmPassword} onChange={(e) => setNewPatient({ ...newPatient, confirmPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <select value={newPatient.gender} onChange={(e) => setNewPatient({ ...newPatient, gender: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                <option value=\"\">Select Gender</option>\r\n                <option value=\"MALE\">Male</option>\r\n                <option value=\"FEMALE\">Female</option>\r\n                <option value=\"OTHER\">Other</option>\r\n              </select>\r\n              <input type=\"date\" value={newPatient.dateOfBirth} onChange={(e) => setNewPatient({ ...newPatient, dateOfBirth: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Create Patient</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: activeSection === 'createAdmin' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n          <div style={{ flex: 1 }}>\r\n            <h3>Create Admin</h3>\r\n            <form onSubmit={(e) => { e.preventDefault(); createAdmin(); }}>\r\n              <input type=\"text\" placeholder=\"Full Name\" value={newAdmin.fullName} onChange={(e) => setNewAdmin({ ...newAdmin, fullName: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"email\" placeholder=\"Email\" value={newAdmin.email} onChange={(e) => setNewAdmin({ ...newAdmin, email: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"text\" placeholder=\"Phone\" value={newAdmin.phoneNumber} onChange={(e) => setNewAdmin({ ...newAdmin, phoneNumber: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"password\" placeholder=\"Password\" value={newAdmin.rawPassword} onChange={(e) => setNewAdmin({ ...newAdmin, rawPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <input type=\"password\" placeholder=\"Confirm Password\" value={newAdmin.confirmPassword} onChange={(e) => setNewAdmin({ ...newAdmin, confirmPassword: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n              <label><input type=\"checkbox\" checked={newAdmin.superAdmin} onChange={(e) => setNewAdmin({ ...newAdmin, superAdmin: e.target.checked })} /> Super Admin</label>\r\n              <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Create Admin</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: activeSection === 'doctors' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n          <div style={{ flex: 1 }}>\r\n            <h3>Doctors</h3>\r\n            <table style={tableStyle}>\r\n              <thead>\r\n                <tr>\r\n                  <th style={thStyle}>Name</th>\r\n                  <th style={thStyle}>Specialization</th>\r\n                  <th style={thStyle}>Email</th>\r\n                  <th style={thStyle}>Status</th>\r\n                  <th style={thStyle}>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredDoctors.map((d, index) => (\r\n                  <tr key={d.userId} style={index % 2 === 0 ? {} : trHoverStyle} onMouseEnter={(e) => e.target.style.backgroundColor = '#e9ecef'} onMouseLeave={(e) => e.target.style.backgroundColor = index % 2 === 0 ? 'white' : '#f5f5f5'}>\r\n                    <td style={tdStyle}>{d.fullName}</td>\r\n                    <td style={tdStyle}>{d.specialization}</td>\r\n                    <td style={tdStyle}>{d.emailId}</td>\r\n                    <td style={tdStyle}>{d.status}</td>\r\n                    <td style={tdStyle}>\r\n                      {d.status.toUpperCase() === 'ACTIVE' && (\r\n                        <>\r\n                          <button className=\"action-button\" style={{ ...buttonStyle, background: '#28a745' }} disabled>Approved</button>\r\n                          <button className=\"action-button\" onClick={() => blockUser(d.userId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545' }}>Block</button>\r\n                        </>\r\n                      )}\r\n                      {d.status.toUpperCase() === 'INACTIVE' && (\r\n                                                <>\r\n                                                <button className=\"action-button\" onClick={() => approveDoctor(d.userId)} style={{ ...buttonStyle, background: '#28a745' }}>Approve</button>\r\n                                                <button className=\"action-button\" onClick={() => blockUser(d.userId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545' }}>Block</button>\r\n                                              </>\r\n                                            )}\r\n                                            {d.status.toUpperCase() === 'BLOCKED' && (\r\n                                              <>\r\n                                                <button className=\"action-button\" onClick={() => approveDoctor(d.userId)} style={{ ...buttonStyle, background: '#28a745' }}>Approve</button>\r\n                                                <button className=\"action-button\" onClick={() => blockUser(d.userId, 'ACTIVE')} style={{ ...buttonStyle, background: '#dc3545' }}>Blocked</button>\r\n                                              </>\r\n                                            )}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ))}\r\n                                    </tbody>\r\n                                  </table>\r\n                                </div>\r\n                                <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n                                  <h4>Filters</h4>\r\n                                  <select value={filters.doctors} onChange={(e) => setFilters({ ...filters, doctors: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                                    <option value=\"all\">All</option>\r\n                                    <option value=\"active\">Active</option>\r\n                                    <option value=\"inactive\">Inactive</option>\r\n                                    <option value=\"approved\">Approved</option>\r\n                                    <option value=\"blocked\">Blocked</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ display: activeSection === 'patients' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n                                <div style={{ flex: 1 }}>\r\n                                  <h3>Patients</h3>\r\n                                  <table style={tableStyle}>\r\n                                    <thead>\r\n                                      <tr>\r\n                                        <th style={thStyle}>Name</th>\r\n                                        <th style={thStyle}>Status</th>\r\n                                        <th style={thStyle}>Actions</th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {filteredPatients.map((p, index) => (\r\n                                        <tr key={p.userId} style={index % 2 === 0 ? {} : trHoverStyle}>\r\n                                          <td style={tdStyle}>{p.fullName}</td>\r\n                                          <td style={tdStyle}>{p.status}</td>\r\n                                          <td style={tdStyle}>\r\n                                            {p.status.toUpperCase() === 'ACTIVE' && (\r\n                                              <button className=\"action-button\" onClick={() => blockUser(p.userId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545' }}>Block</button>\r\n                                            )}\r\n                                            {p.status.toUpperCase() === 'BLOCKED' && (\r\n                                              <button className=\"action-button\" onClick={() => blockUser(p.userId, 'ACTIVE')} style={{ ...buttonStyle, background: '#dc3545' }}>Blocked</button>\r\n                                            )}\r\n                                          </td>\r\n                                        </tr>\r\n                                      ))}\r\n                                    </tbody>\r\n                                  </table>\r\n                                </div>\r\n                                <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n                                  <h4>Filters</h4>\r\n                                  <select value={filters.patients} onChange={(e) => setFilters({ ...filters, patients: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                                    <option value=\"all\">All</option>\r\n                                    <option value=\"active\">Active</option>\r\n                                    <option value=\"inactive\">Inactive</option>\r\n                                    <option value=\"blocked\">Blocked</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ display: activeSection === 'admins' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n                                <div style={{ flex: 1 }}>\r\n                                  <h3>Admins</h3>\r\n                                  <table style={tableStyle}>\r\n                                    <thead>\r\n                                      <tr>\r\n                                        <th style={thStyle}>Name</th>\r\n                                        <th style={thStyle}>Status</th>\r\n                                        <th style={thStyle}>Super Admin</th>\r\n                                        <th style={thStyle}>Actions</th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {filteredAdmins.map((a, index) => (\r\n                                        <tr key={a.adminId} style={index % 2 === 0 ? {} : trHoverStyle}>\r\n                                          <td style={tdStyle}>{a.fullName}</td>\r\n                                          <td style={tdStyle}>{a.status}</td>\r\n                                          <td style={tdStyle}>{a.superAdmin ? 'Yes' : 'No'}</td>\r\n                                          <td style={tdStyle}>\r\n                                            <button className=\"action-button\" onClick={() => blockUser(a.adminId, 'BLOCKED')} style={{ ...buttonStyle, background: '#dc3545' }}>Block</button>\r\n                                          </td>\r\n                                        </tr>\r\n                                      ))}\r\n                                    </tbody>\r\n                                  </table>\r\n                                </div>\r\n                                <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n                                  <h4>Filters</h4>\r\n                                  <select value={filters.admins} onChange={(e) => setFilters({ ...filters, admins: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                                    <option value=\"all\">All</option>\r\n                                    <option value=\"active\">Active</option>\r\n                                    <option value=\"inactive\">Inactive</option>\r\n                                    <option value=\"blocked\">Blocked</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ display: activeSection === 'appointments' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n                                <div style={{ flex: 1 }}>\r\n                                  <h3>All Appointments</h3>\r\n                                  <table style={tableStyle}>\r\n                                    <thead>\r\n                                      <tr>\r\n                                        <th style={thStyle}>Appointment ID</th>\r\n                                        <th style={thStyle}>Patient Name & ID</th>\r\n                                        <th style={thStyle}>Doctor Name & Specialization</th>\r\n                                        <th style={thStyle}>Date & Time</th>\r\n                                        <th style={thStyle}>Status</th>\r\n                                        <th style={thStyle}>Actions</th>\r\n                                      </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                      {filteredAppointments.length > 0 ? (\r\n                                        filteredAppointments.map((ap, index) => (\r\n                                          <tr key={ap.appointmentId || index} style={index % 2 === 0 ? {} : trHoverStyle}>\r\n                                            <td style={tdStyle}>{ap.appointmentId}</td>\r\n                                            <td style={tdStyle}>{ap.patient?.fullName || 'N/A'} ({ap.patient?.userId || 'N/A'})</td>\r\n                                            <td style={tdStyle}>{ap.doctor ? `${ap.doctor.fullName} (${ap.doctor.specialization})` : 'Not Assigned'}</td>\r\n                                            <td style={tdStyle}>{ap.scheduledDateTime || ap.preferredDate || 'N/A'}</td>\r\n                                            <td style={tdStyle}>{ap.status}</td>\r\n                                            <td style={tdStyle}>\r\n                                              {ap.status === 'PENDING' && (\r\n                                                <>\r\n                                                  <button className=\"action-button\" onClick={() => handleApprove(ap.appointmentId)} style={{ ...buttonStyle, background: '#28a745' }}>Approve</button>\r\n                                                  <button className=\"action-button\" onClick={() => reschedulePending(ap.appointmentId)} style={{ ...buttonStyle, background: '#ffc107' }}>Reschedule</button>\r\n                                                  <button className=\"action-button\" onClick={() => cancelAppointment(ap.appointmentId)} style={{ ...buttonStyle, background: '#dc3545' }}>Cancel</button>\r\n                                                </>\r\n                                              )}\r\n                                              {ap.status === 'CANCELLED' && (\r\n                                                <>\r\n                                                  <button className=\"action-button\" onClick={() => rescheduleCancelled(ap.appointmentId)} style={{ ...buttonStyle, background: '#ffc107' }}>Re-schedule</button>\r\n                                                  <button className=\"action-button\" onClick={() => archiveAppointment(ap.appointmentId)} style={{ ...buttonStyle, background: '#6c757d' }}>Archive</button>\r\n                                                </>\r\n                                              )}\r\n                                              <button className=\"action-button\" onClick={() => viewDetails(ap)} style={{ ...buttonStyle, background: '#17a2b8' }}>View Details</button>\r\n                                            </td>\r\n                                          </tr>\r\n                                        ))\r\n                                      ) : (\r\n                                        <tr>\r\n                                          <td colSpan=\"6\" style={{ textAlign: 'center', padding: '20px' }}>No appointments available.</td>\r\n                                        </tr>\r\n                                      )}\r\n                                    </tbody>\r\n                                  </table>\r\n                                </div>\r\n                                <div style={{ width: '200px', marginLeft: '2rem', marginTop: '-1rem' }}>\r\n                                  <h4>Filters</h4>\r\n                                  <select value={filters.appointments} onChange={(e) => setFilters({ ...filters, appointments: e.target.value })} style={{ width: '100%', padding: '10px', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                                    <option value=\"all\">All</option>\r\n                                    <option value=\"pending\">Pending</option>\r\n                                    <option value=\"confirmed\">Confirmed</option>\r\n                                    <option value=\"cancelled\">Cancelled</option>\r\n                                  </select>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ display: activeSection === 'rescheduleAppointment' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n                                <div style={{ flex: 1 }}>\r\n                                  <h3>Reschedule Appointment</h3>\r\n                                  <form onSubmit={(e) => { e.preventDefault(); rescheduleAppointment(); }}>\r\n                                    <input type=\"number\" placeholder=\"Appointment ID\" value={rescheduleData.appointmentId} onChange={(e) => setRescheduleData({ ...rescheduleData, appointmentId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n                                    <input type=\"datetime-local\" value={rescheduleData.newRequestedDateTime} onChange={(e) => setRescheduleData({ ...rescheduleData, newRequestedDateTime: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n                                    <input type=\"text\" placeholder=\"Reason\" value={rescheduleData.reason} onChange={(e) => setRescheduleData({ ...rescheduleData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n                                    <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Reschedule</button>\r\n                                  </form>\r\n                                </div>\r\n                              </div>\r\n                              <div style={{ display: activeSection === 'reassignAppointment' ? 'flex' : 'none', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', flex: 1 }}>\r\n                                <div style={{ flex: 1 }}>\r\n                                  <h3>Reassign Appointment</h3>\r\n                                  <form onSubmit={(e) => { e.preventDefault(); reassignAppointment(); }}>\r\n                                    <input type=\"number\" placeholder=\"Appointment ID\" value={reassignData.appointmentId} onChange={(e) => setReassignData({ ...reassignData, appointmentId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n                                    <select value={reassignData.newDoctorUserId} onChange={(e) => setReassignData({ ...reassignData, newDoctorUserId: e.target.value })} required style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                                      <option value=\"\">Select New Doctor</option>\r\n                                      {doctors.map(d => <option key={d.userId} value={d.userId}>{d.fullName} ({d.specialization})</option>)}\r\n                                    </select>\r\n                                    <input type=\"datetime-local\" value={reassignData.requestedDateTime} onChange={(e) => setReassignData({ ...reassignData, requestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n                                    <input type=\"text\" placeholder=\"Reason\" value={reassignData.reason} onChange={(e) => setReassignData({ ...reassignData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n                                    <button type=\"submit\" style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Reassign</button>\r\n                                  </form>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                      \r\n                            {showApproveModal && (\r\n                              <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000 }}>\r\n                                <div style={{ background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', width: '400px' }}>\r\n                                  <h3>Approve Appointment</h3>\r\n                                  {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                                  <label>Doctor:</label>\r\n                                  <select value={approveData.doctorUserId} onChange={(e) => setApproveData({ ...approveData, doctorUserId: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                                    <option value=\"\">Select Doctor</option>\r\n                                    {doctors.map(d => <option key={d.userId} value={d.userId}>{d.fullName} ({d.specialization})</option>)}\r\n                                  </select>\r\n                                  <label>Date/Time:</label>\r\n                                  <input type=\"datetime-local\" value={approveData.requestedDateTime} onChange={(e) => setApproveData({ ...approveData, requestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n                                  <button onClick={submitApprove} style={{ ...buttonStyle, background: '#28a745', color: 'white', marginRight: '10px' }}>Approve</button>\r\n                                  <button onClick={() => { setShowApproveModal(false); setError(''); }} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Cancel</button>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                      \r\n                            {showRescheduleModal && (\r\n                              <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000 }}>\r\n                                <div style={{ background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', width: '400px' }}>\r\n                                  <h3>Reschedule Cancelled Appointment</h3>\r\n                                  {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                                  <label>Doctor:</label>\r\n                                  <select value={rescheduleModalData.newDoctorUserId} onChange={(e) => setRescheduleModalData({ ...rescheduleModalData, newDoctorUserId: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }}>\r\n                                    <option value=\"\">Select Doctor</option>\r\n                                    {doctors.map(d => <option key={d.userId} value={d.userId}>{d.fullName} ({d.specialization})</option>)}\r\n                                  </select>\r\n                                  <label>Date/Time:</label>\r\n                                  <input type=\"datetime-local\" value={rescheduleModalData.requestedDateTime} onChange={(e) => setRescheduleModalData({ ...rescheduleModalData, requestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n                                  <label>Reason:</label>\r\n                                  <input type=\"text\" placeholder=\"Reason for reschedule\" value={rescheduleModalData.reason} onChange={(e) => setRescheduleModalData({ ...rescheduleModalData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n                                  <button onClick={submitReschedule} style={{ ...buttonStyle, background: '#28a745', color: 'white', marginRight: '10px' }}>Reschedule</button>\r\n            <button onClick={() => { setShowRescheduleModal(false); setError(''); }} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {rescheduleModal && (\r\n        <div style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 4px 10px rgba(0,0,0,0.1)', zIndex: 1000 }}>\r\n          <h3>Reschedule Appointment</h3>\r\n          <p>Patient: {selectedAppointment?.patient?.fullName || 'N/A'}</p>\r\n          <p>Current Date/Time: {selectedAppointment?.scheduledDateTime || 'N/A'}</p>\r\n          <input type=\"datetime-local\" value={newDateTime} onChange={(e) => setNewDateTime(e.target.value)} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n          <button onClick={async () => {\r\n            try {\r\n              await adminAPI.rescheduleAppointment(selectedAppointment.appointmentId, { newRequestedDateTime: newDateTime });\r\n              setRescheduleModal(false);\r\n              setNewDateTime('');\r\n              fetchData();\r\n              alert('Appointment rescheduled successfully');\r\n            } catch (err) {\r\n              alert('Error rescheduling: ' + (err.response?.data?.message || err.message));\r\n            }\r\n          }} style={{ ...buttonStyle, background: '#007bff', color: 'white' }}>Confirm</button>\r\n          <button onClick={() => setRescheduleModal(false)} style={{ ...buttonStyle, background: '#ccc', color: 'black' }}>Cancel</button>\r\n        </div>\r\n      )}\r\n\r\n      {showPendingRescheduleModal && (\r\n        <div style={{ position: 'fixed', top: 0, left: 0, width: '100%', height: '100%', background: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center', zIndex: 1000 }}>\r\n          <div style={{ background: 'white', padding: '2rem', borderRadius: '10px', boxShadow: '0 2px 6px rgba(0,0,0,0.1)', width: '400px' }}>\r\n            <h3>Reschedule Pending Appointment</h3>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <label>Date/Time:</label>\r\n            <input type=\"datetime-local\" value={pendingRescheduleData.newRequestedDateTime} onChange={(e) => setPendingRescheduleData({ ...pendingRescheduleData, newRequestedDateTime: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n            <label>Reason:</label>\r\n            <input type=\"text\" placeholder=\"Reason for reschedule\" value={pendingRescheduleData.reason} onChange={(e) => setPendingRescheduleData({ ...pendingRescheduleData, reason: e.target.value })} style={{ width: '100%', padding: '10px', margin: '10px 0', border: '1px solid #ccc', borderRadius: '4px' }} />\r\n            <button onClick={submitPendingReschedule} style={{ ...buttonStyle, background: '#28a745', color: 'white', marginRight: '10px' }}>Reschedule</button>\r\n            <button onClick={() => { setShowPendingRescheduleModal(false); setError(''); }} style={{ ...buttonStyle, background: '#6c757d', color: 'white' }}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}