{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharu\\\\Downloads\\\\hms-frontend (3)\\\\src\\\\pages\\\\Patient\\\\AddAppointment.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import api from '../../services/api';\n// import Form from '../../components/Form';\n\n// const AddAppointment = () => {\n//   const [doctors, setDoctors] = useState([]);\n\n//   useEffect(() => {\n//     api.get('/patient/doctors').then(res => setDoctors(res.data));\n//   }, []);\n\n//   const handleSubmit = (data) => {\n//     // Simulate payment\n//     alert('Payment successful! Amount: $50');\n//     api.post('/patient/appointments', data).then(() => alert('Appointment booked'));\n//   };\n\n//   return (\n//     <div>\n//       <h2>Add Appointment</h2>\n//       <Form \n//         fields={[\n//           { name: 'symptoms', type: 'textarea', placeholder: 'Symptoms', required: true },\n//           { name: 'date', type: 'date', required: true },\n//           { name: 'doctorId', type: 'select', placeholder: 'Select Doctor', options: doctors.map(d => ({ value: d.id, label: d.name })), required: true }\n//         ]}\n//         onSubmit={handleSubmit}\n//         buttonText=\"Book and Pay\"\n//       />\n//     </div>\n//   );\n// };\n\n// export default AddAppointment;\n// import React, { useState, useEffect } from 'react';\n// import api from '../../services/api';\n\n// const AddAppointment = () => {\n//   const [doctors, setDoctors] = useState([]);\n//   const [form, setForm] = useState({ symptoms: '', date: '', doctorId: '' });\n\n//   useEffect(() => {\n//     api.get('/patient/doctors').then(res => setDoctors(res.data));\n//   }, []);\n\n//   const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     alert('Payment successful! Amount: $50');\n//     api.post('/patient/appointments', form).then(() => alert('Appointment booked'));\n//   };\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>Add Appointment</h2>\n//       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 15, maxWidth: 500 }}>\n//         <textarea\n//           name=\"symptoms\"\n//           placeholder=\"Symptoms\"\n//           value={form.symptoms}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <input\n//           type=\"date\"\n//           name=\"date\"\n//           value={form.date}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <select name=\"doctorId\" value={form.doctorId} onChange={handleChange} required style={styles.input}>\n//           <option value=\"\">Select Doctor</option>\n//           {doctors.map(d => <option key={d.id} value={d.id}>{d.name}</option>)}\n//         </select>\n//         <button type=\"submit\" style={styles.button}>Book and Pay</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   input: { padding: 12, borderRadius: 6, border: '1px solid #ccc', fontSize: 14 },\n//   button: { padding: 12, background: '#0077b6', color: '#fff', border: 'none', borderRadius: 6, cursor: 'pointer', fontWeight: 600 }\n// };\n\n// export default AddAppointment;\n// import React, { useState, useEffect } from 'react';\n// import api from '../../services/api';\n\n// const AddAppointment = () => {\n//   const [doctors, setDoctors] = useState([]);\n//   const [form, setForm] = useState({ symptoms: '', date: '', doctorId: '' });\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState('');\n\n//   useEffect(() => {\n//     api.get('/patient/doctors')\n//       .then(res => setDoctors(res.data))\n//       .catch(err => console.error('Error fetching doctors:', err));\n//   }, []);\n\n//   const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setMessage('');\n\n//     try {\n//       const patientId = JSON.parse(localStorage.getItem('user')).id; // logged in patient\n//       const payload = {\n//         patient: { id: patientId },\n//         doctor: { id: form.doctorId },\n//         date: form.date,\n//         symptoms: form.symptoms,\n//       };\n\n//       const response = await api.post('/admin/appointments/book', payload);\n\n//       if (response.data) {\n//         setMessage(`Appointment booked successfully for ${form.date}. An email confirmation has been sent.`);\n//         setForm({ symptoms: '', date: '', doctorId: '' });\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setMessage('Failed to book appointment. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>Add Appointment</h2>\n//       {message && <p style={{ marginBottom: 15, color: message.includes('successfully') ? 'green' : 'red' }}>{message}</p>}\n//       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 15, maxWidth: 500 }}>\n//         <textarea\n//           name=\"symptoms\"\n//           placeholder=\"Symptoms\"\n//           value={form.symptoms}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <input\n//           type=\"date\"\n//           name=\"date\"\n//           value={form.date}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <select name=\"doctorId\" value={form.doctorId} onChange={handleChange} required style={styles.input}>\n//           <option value=\"\">Select Doctor</option>\n//           {doctors.map(d => <option key={d.id} value={d.id}>{d.name}</option>)}\n//         </select>\n//         <button type=\"submit\" disabled={loading} style={styles.button}>\n//           {loading ? 'Booking...' : 'Book and Pay'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   input: { padding: 12, borderRadius: 6, border: '1px solid #ccc', fontSize: 14 },\n//   button: { padding: 12, background: '#0077b6', color: '#fff', border: 'none', borderRadius: 6, cursor: 'pointer', fontWeight: 600 }\n// };\n\n// export default AddAppointment;\n// import React, { useState, useEffect } from 'react';\n// import api from '../../services/api';\n\n// const AddAppointment = () => {\n//   const [doctors, setDoctors] = useState([]);\n//   const [form, setForm] = useState({ symptoms: '', date: '', doctorId: '' });\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState('');\n\n//   useEffect(() => {\n//     api.get('/patient/doctors')\n//       .then(res => setDoctors(res.data))\n//       .catch(err => console.error('Error fetching doctors:', err));\n//   }, []);\n\n//   const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setMessage('');\n\n//     try {\n//       const patientId = JSON.parse(localStorage.getItem('user')).id;\n//       const payload = {\n//         patient: { id: patientId },\n//         doctor: { id: form.doctorId },\n//         date: form.date,\n//         symptoms: form.symptoms,\n//       };\n\n//       const response = await api.post('/admin/appointments/book', payload);\n\n//       if (response.data) {\n//         setMessage(`Appointment booked successfully for ${form.date}. An email confirmation has been sent.`);\n//         setForm({ symptoms: '', date: '', doctorId: '' });\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setMessage('Failed to book appointment. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>Add Appointment</h2>\n//       {message && <p style={{ marginBottom: 15, color: message.includes('successfully') ? 'green' : 'red' }}>{message}</p>}\n//       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 15, maxWidth: 500 }}>\n//         <textarea\n//           name=\"symptoms\"\n//           placeholder=\"Symptoms\"\n//           value={form.symptoms}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <input\n//           type=\"date\"\n//           name=\"date\"\n//           value={form.date}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <select name=\"doctorId\" value={form.doctorId} onChange={handleChange} required style={styles.input}>\n//           <option value=\"\">Select Doctor</option>\n//           {doctors.map(d => <option key={d.id} value={d.id}>{d.name}</option>)}\n//         </select>\n//         <button type=\"submit\" disabled={loading} style={styles.button}>\n//           {loading ? 'Booking...' : 'Book and Pay'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   input: { padding: 12, borderRadius: 6, border: '1px solid #ccc', fontSize: 14 },\n//   button: { padding: 12, background: '#0077b6', color: '#fff', border: 'none', borderRadius: 6, cursor: 'pointer', fontWeight: 600 }\n// };\n\n// export default AddAppointment;\nimport React, { useState, useEffect } from 'react';\nimport api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddAppointment = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [form, setForm] = useState({\n    symptoms: '',\n    date: '',\n    doctorId: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    api.get('/patient/doctors').then(res => setDoctors(res.data)).catch(err => console.error('Error fetching doctors:', err));\n  }, []);\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n    try {\n      const patientId = JSON.parse(localStorage.getItem('user')).id;\n      const payload = {\n        patient: {\n          id: patientId\n        },\n        doctor: {\n          id: form.doctorId\n        },\n        date: form.date,\n        symptoms: form.symptoms\n      };\n\n      // Book appointment via admin controller\n      const response = await api.post('/admin/appointments/book', payload);\n      if (response.data) {\n        setMessage(`Appointment booked successfully for ${form.date}. An email confirmation has been sent.`);\n\n        // Proceed to payment\n        handlePayment(response.data.id, 500); // Example: 500 INR for appointment\n\n        setForm({\n          symptoms: '',\n          date: '',\n          doctorId: ''\n        });\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('Failed to book appointment. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Razorpay payment\n  const handlePayment = async (appointmentId, amount) => {\n    try {\n      const res = await api.post('/payment/create-order', {\n        amount: amount * 100\n      }); // convert to paise\n      const {\n        orderId,\n        key,\n        currency\n      } = res.data;\n      const options = {\n        key,\n        amount: amount * 100,\n        currency,\n        name: \"Hospital Management System\",\n        description: \"Appointment Payment\",\n        order_id: orderId,\n        handler: async function (response) {\n          await api.post(`/patient/appointments/${appointmentId}/pay`, response);\n          alert(\"Payment Successful!\");\n        },\n        prefill: {\n          name: JSON.parse(localStorage.getItem('user')).name,\n          email: JSON.parse(localStorage.getItem('user')).email\n        },\n        theme: {\n          color: \"#0077b6\"\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (err) {\n      console.error(err);\n      alert(\"Payment failed. Try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#0077b6',\n        marginBottom: 20\n      },\n      children: \"Add Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginBottom: 15,\n        color: message.includes('successfully') ? 'green' : 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 15,\n        maxWidth: 500\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"symptoms\",\n        placeholder: \"Symptoms\",\n        value: form.symptoms,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: form.date,\n        onChange: handleChange,\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"doctorId\",\n        value: form.doctorId,\n        onChange: handleChange,\n        required: true,\n        style: styles.input,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), doctors.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d.id,\n          children: d.name\n        }, d.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        style: styles.button,\n        children: loading ? 'Booking...' : 'Book and Pay'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAppointment, \"mlBTH4xFqJ9UKRk/ILV21Z4uLUI=\");\n_c = AddAppointment;\nconst styles = {\n  input: {\n    padding: 12,\n    borderRadius: 6,\n    border: '1px solid #ccc',\n    fontSize: 14\n  },\n  button: {\n    padding: 12,\n    background: '#0077b6',\n    color: '#fff',\n    border: 'none',\n    borderRadius: 6,\n    cursor: 'pointer',\n    fontWeight: 600\n  }\n};\nexport default AddAppointment;\nvar _c;\n$RefreshReg$(_c, \"AddAppointment\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","AddAppointment","_s","doctors","setDoctors","form","setForm","symptoms","date","doctorId","loading","setLoading","message","setMessage","get","then","res","data","catch","err","console","error","handleChange","e","target","name","value","handleSubmit","preventDefault","patientId","JSON","parse","localStorage","getItem","id","payload","patient","doctor","response","post","handlePayment","appointmentId","amount","orderId","key","currency","options","description","order_id","handler","alert","prefill","email","theme","color","rzp","window","Razorpay","open","style","padding","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","includes","onSubmit","display","flexDirection","gap","maxWidth","placeholder","onChange","required","styles","input","type","map","d","disabled","button","_c","borderRadius","border","fontSize","background","cursor","fontWeight","$RefreshReg$"],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/pages/Patient/AddAppointment.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import api from '../../services/api';\n// import Form from '../../components/Form';\n\n// const AddAppointment = () => {\n//   const [doctors, setDoctors] = useState([]);\n\n//   useEffect(() => {\n//     api.get('/patient/doctors').then(res => setDoctors(res.data));\n//   }, []);\n\n//   const handleSubmit = (data) => {\n//     // Simulate payment\n//     alert('Payment successful! Amount: $50');\n//     api.post('/patient/appointments', data).then(() => alert('Appointment booked'));\n//   };\n\n//   return (\n//     <div>\n//       <h2>Add Appointment</h2>\n//       <Form \n//         fields={[\n//           { name: 'symptoms', type: 'textarea', placeholder: 'Symptoms', required: true },\n//           { name: 'date', type: 'date', required: true },\n//           { name: 'doctorId', type: 'select', placeholder: 'Select Doctor', options: doctors.map(d => ({ value: d.id, label: d.name })), required: true }\n//         ]}\n//         onSubmit={handleSubmit}\n//         buttonText=\"Book and Pay\"\n//       />\n//     </div>\n//   );\n// };\n\n// export default AddAppointment;\n// import React, { useState, useEffect } from 'react';\n// import api from '../../services/api';\n\n// const AddAppointment = () => {\n//   const [doctors, setDoctors] = useState([]);\n//   const [form, setForm] = useState({ symptoms: '', date: '', doctorId: '' });\n\n//   useEffect(() => {\n//     api.get('/patient/doctors').then(res => setDoctors(res.data));\n//   }, []);\n\n//   const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     alert('Payment successful! Amount: $50');\n//     api.post('/patient/appointments', form).then(() => alert('Appointment booked'));\n//   };\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>Add Appointment</h2>\n//       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 15, maxWidth: 500 }}>\n//         <textarea\n//           name=\"symptoms\"\n//           placeholder=\"Symptoms\"\n//           value={form.symptoms}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <input\n//           type=\"date\"\n//           name=\"date\"\n//           value={form.date}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <select name=\"doctorId\" value={form.doctorId} onChange={handleChange} required style={styles.input}>\n//           <option value=\"\">Select Doctor</option>\n//           {doctors.map(d => <option key={d.id} value={d.id}>{d.name}</option>)}\n//         </select>\n//         <button type=\"submit\" style={styles.button}>Book and Pay</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   input: { padding: 12, borderRadius: 6, border: '1px solid #ccc', fontSize: 14 },\n//   button: { padding: 12, background: '#0077b6', color: '#fff', border: 'none', borderRadius: 6, cursor: 'pointer', fontWeight: 600 }\n// };\n\n// export default AddAppointment;\n// import React, { useState, useEffect } from 'react';\n// import api from '../../services/api';\n\n// const AddAppointment = () => {\n//   const [doctors, setDoctors] = useState([]);\n//   const [form, setForm] = useState({ symptoms: '', date: '', doctorId: '' });\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState('');\n\n//   useEffect(() => {\n//     api.get('/patient/doctors')\n//       .then(res => setDoctors(res.data))\n//       .catch(err => console.error('Error fetching doctors:', err));\n//   }, []);\n\n//   const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setMessage('');\n\n//     try {\n//       const patientId = JSON.parse(localStorage.getItem('user')).id; // logged in patient\n//       const payload = {\n//         patient: { id: patientId },\n//         doctor: { id: form.doctorId },\n//         date: form.date,\n//         symptoms: form.symptoms,\n//       };\n\n//       const response = await api.post('/admin/appointments/book', payload);\n      \n//       if (response.data) {\n//         setMessage(`Appointment booked successfully for ${form.date}. An email confirmation has been sent.`);\n//         setForm({ symptoms: '', date: '', doctorId: '' });\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setMessage('Failed to book appointment. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>Add Appointment</h2>\n//       {message && <p style={{ marginBottom: 15, color: message.includes('successfully') ? 'green' : 'red' }}>{message}</p>}\n//       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 15, maxWidth: 500 }}>\n//         <textarea\n//           name=\"symptoms\"\n//           placeholder=\"Symptoms\"\n//           value={form.symptoms}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <input\n//           type=\"date\"\n//           name=\"date\"\n//           value={form.date}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <select name=\"doctorId\" value={form.doctorId} onChange={handleChange} required style={styles.input}>\n//           <option value=\"\">Select Doctor</option>\n//           {doctors.map(d => <option key={d.id} value={d.id}>{d.name}</option>)}\n//         </select>\n//         <button type=\"submit\" disabled={loading} style={styles.button}>\n//           {loading ? 'Booking...' : 'Book and Pay'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   input: { padding: 12, borderRadius: 6, border: '1px solid #ccc', fontSize: 14 },\n//   button: { padding: 12, background: '#0077b6', color: '#fff', border: 'none', borderRadius: 6, cursor: 'pointer', fontWeight: 600 }\n// };\n\n// export default AddAppointment;\n// import React, { useState, useEffect } from 'react';\n// import api from '../../services/api';\n\n// const AddAppointment = () => {\n//   const [doctors, setDoctors] = useState([]);\n//   const [form, setForm] = useState({ symptoms: '', date: '', doctorId: '' });\n//   const [loading, setLoading] = useState(false);\n//   const [message, setMessage] = useState('');\n\n//   useEffect(() => {\n//     api.get('/patient/doctors')\n//       .then(res => setDoctors(res.data))\n//       .catch(err => console.error('Error fetching doctors:', err));\n//   }, []);\n\n//   const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async e => {\n//     e.preventDefault();\n//     setLoading(true);\n//     setMessage('');\n\n//     try {\n//       const patientId = JSON.parse(localStorage.getItem('user')).id;\n//       const payload = {\n//         patient: { id: patientId },\n//         doctor: { id: form.doctorId },\n//         date: form.date,\n//         symptoms: form.symptoms,\n//       };\n\n//       const response = await api.post('/admin/appointments/book', payload);\n      \n//       if (response.data) {\n//         setMessage(`Appointment booked successfully for ${form.date}. An email confirmation has been sent.`);\n//         setForm({ symptoms: '', date: '', doctorId: '' });\n//       }\n//     } catch (error) {\n//       console.error(error);\n//       setMessage('Failed to book appointment. Please try again.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: 20 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>Add Appointment</h2>\n//       {message && <p style={{ marginBottom: 15, color: message.includes('successfully') ? 'green' : 'red' }}>{message}</p>}\n//       <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 15, maxWidth: 500 }}>\n//         <textarea\n//           name=\"symptoms\"\n//           placeholder=\"Symptoms\"\n//           value={form.symptoms}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <input\n//           type=\"date\"\n//           name=\"date\"\n//           value={form.date}\n//           onChange={handleChange}\n//           required\n//           style={styles.input}\n//         />\n//         <select name=\"doctorId\" value={form.doctorId} onChange={handleChange} required style={styles.input}>\n//           <option value=\"\">Select Doctor</option>\n//           {doctors.map(d => <option key={d.id} value={d.id}>{d.name}</option>)}\n//         </select>\n//         <button type=\"submit\" disabled={loading} style={styles.button}>\n//           {loading ? 'Booking...' : 'Book and Pay'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   input: { padding: 12, borderRadius: 6, border: '1px solid #ccc', fontSize: 14 },\n//   button: { padding: 12, background: '#0077b6', color: '#fff', border: 'none', borderRadius: 6, cursor: 'pointer', fontWeight: 600 }\n// };\n\n// export default AddAppointment;\nimport React, { useState, useEffect } from 'react';\nimport api from '../../services/api';\n\nconst AddAppointment = () => {\n  const [doctors, setDoctors] = useState([]);\n  const [form, setForm] = useState({ symptoms: '', date: '', doctorId: '' });\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  useEffect(() => {\n    api.get('/patient/doctors')\n      .then(res => setDoctors(res.data))\n      .catch(err => console.error('Error fetching doctors:', err));\n  }, []);\n\n  const handleChange = e => setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage('');\n\n    try {\n      const patientId = JSON.parse(localStorage.getItem('user')).id;\n      const payload = {\n        patient: { id: patientId },\n        doctor: { id: form.doctorId },\n        date: form.date,\n        symptoms: form.symptoms,\n      };\n\n      // Book appointment via admin controller\n      const response = await api.post('/admin/appointments/book', payload);\n\n      if (response.data) {\n        setMessage(`Appointment booked successfully for ${form.date}. An email confirmation has been sent.`);\n\n        // Proceed to payment\n        handlePayment(response.data.id, 500); // Example: 500 INR for appointment\n\n        setForm({ symptoms: '', date: '', doctorId: '' });\n      }\n    } catch (error) {\n      console.error(error);\n      setMessage('Failed to book appointment. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Razorpay payment\n  const handlePayment = async (appointmentId, amount) => {\n    try {\n      const res = await api.post('/payment/create-order', { amount: amount * 100 }); // convert to paise\n      const { orderId, key, currency } = res.data;\n\n      const options = {\n        key,\n        amount: amount * 100,\n        currency,\n        name: \"Hospital Management System\",\n        description: \"Appointment Payment\",\n        order_id: orderId,\n        handler: async function (response) {\n          await api.post(`/patient/appointments/${appointmentId}/pay`, response);\n          alert(\"Payment Successful!\");\n        },\n        prefill: {\n          name: JSON.parse(localStorage.getItem('user')).name,\n          email: JSON.parse(localStorage.getItem('user')).email,\n        },\n        theme: { color: \"#0077b6\" },\n      };\n\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n\n    } catch (err) {\n      console.error(err);\n      alert(\"Payment failed. Try again.\");\n    }\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2 style={{ color: '#0077b6', marginBottom: 20 }}>Add Appointment</h2>\n      {message && <p style={{ marginBottom: 15, color: message.includes('successfully') ? 'green' : 'red' }}>{message}</p>}\n      <form onSubmit={handleSubmit} style={{ display: 'flex', flexDirection: 'column', gap: 15, maxWidth: 500 }}>\n        <textarea\n          name=\"symptoms\"\n          placeholder=\"Symptoms\"\n          value={form.symptoms}\n          onChange={handleChange}\n          required\n          style={styles.input}\n        />\n        <input\n          type=\"date\"\n          name=\"date\"\n          value={form.date}\n          onChange={handleChange}\n          required\n          style={styles.input}\n        />\n        <select name=\"doctorId\" value={form.doctorId} onChange={handleChange} required style={styles.input}>\n          <option value=\"\">Select Doctor</option>\n          {doctors.map(d => <option key={d.id} value={d.id}>{d.name}</option>)}\n        </select>\n        <button type=\"submit\" disabled={loading} style={styles.button}>\n          {loading ? 'Booking...' : 'Book and Pay'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst styles = {\n  input: { padding: 12, borderRadius: 6, border: '1px solid #ccc', fontSize: 14 },\n  button: { padding: 12, background: '#0077b6', color: '#fff', border: 'none', borderRadius: 6, cursor: 'pointer', fontWeight: 600 }\n};\n\nexport default AddAppointment;\n\n\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}