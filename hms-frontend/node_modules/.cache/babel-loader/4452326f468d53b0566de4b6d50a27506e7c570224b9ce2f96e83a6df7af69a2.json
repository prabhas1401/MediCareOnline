{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const [form, setForm] = useState({ email: '', password: '', role: 'patient' });\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await api.post('/auth/login', form);\n//       localStorage.setItem('token', res.data.token);\n//       localStorage.setItem('role', form.role);\n//       navigate(`/${form.role}`);\n//     } catch (err) {\n//       alert('Login failed');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <select name=\"role\" value={form.role} onChange={handleChange}>\n//             <option value=\"admin\">Admin</option>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"patient\">Patient</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const [form, setForm] = useState({ email: '', password: '' });\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     setLoading(true);\n\n//     try {\n//       // Hardcoded admin login\n//       if (form.email === 'admin@hms.com' && form.password === 'admin123') {\n//         const adminUser = {\n//           email: 'admin@hms.com',\n//           role: 'ADMIN',\n//           token: 'admin-token', // dummy token\n//         };\n//         localStorage.setItem('loggedInUser', JSON.stringify(adminUser));\n//         navigate('/admin/');\n//         setLoading(false);\n//         return;\n//       }\n\n//       // Normal login for doctor/patient\n//       const res = await api.post('/auth/login', form);\n\n//       if (res.data?.token) {\n//         const user = {\n//           email: form.email,\n//           role: res.data.role.toUpperCase(), // backend must return role\n//           token: res.data.token,\n//         };\n//         localStorage.setItem('loggedInUser', JSON.stringify(user));\n\n//         if (user.role === 'DOCTOR') navigate('/doctor/');\n//         else if (user.role === 'PATIENT') navigate('/patient/');\n//         else navigate('/'); // fallback\n//       } else {\n//         setError(res.data?.message || 'Invalid credentials.');\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       const msg = err.response?.data?.message || 'Server error. Try again later.';\n//       setError(msg);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Email\"\n//             value={form.email}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//             value={form.password}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         {error && <div className=\"error\">{error}</div>}\n//         <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n//           {loading ? 'Logging in...' : 'Login'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const [form, setForm] = useState({ email: '', password: '', role: 'patient' });\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await api.post('/auth/login', form);\n//       localStorage.setItem('token', res.data.token);\n//       localStorage.setItem('role', form.role);\n//       navigate(`/${form.role}`);\n//     } catch (err) {\n//       alert('Login failed');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <select name=\"role\" value={form.role} onChange={handleChange}>\n//             <option value=\"admin\">Admin</option>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"patient\">Patient</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const [form, setForm] = useState({ email: '', password: '' });\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     setLoading(true);\n\n//     try {\n//       // Hardcoded admin login\n//       if (form.email === 'admin@hms.com' && form.password === 'admin123') {\n//         const adminUser = {\n//           email: 'admin@hms.com',\n//           role: 'ADMIN',\n//           token: 'admin-token', // dummy token\n//         };\n//         localStorage.setItem('loggedInUser', JSON.stringify(adminUser));\n//         navigate('/admin/');\n//         setLoading(false);\n//         return;\n//       }\n\n//       // Normal login for doctor/patient\n//       const res = await api.post('/auth/login', form);\n\n//       if (res.data?.token) {\n//         const user = {\n//           email: form.email,\n//           role: res.data.role.toUpperCase(), // backend must return role\n//           token: res.data.token,\n//         };\n//         localStorage.setItem('loggedInUser', JSON.stringify(user));\n\n//         if (user.role === 'DOCTOR') navigate('/doctor/');\n//         else if (user.role === 'PATIENT') navigate('/patient/');\n//         else navigate('/'); // fallback\n//       } else {\n//         setError(res.data?.message || 'Invalid credentials.');\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       const msg = err.response?.data?.message || 'Server error. Try again later.';\n//       setError(msg);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Email\"\n//             value={form.email}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//             value={form.password}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         {error && <div className=\"error\">{error}</div>}\n//         <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n//           {loading ? 'Logging in...' : 'Login'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}