{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharu\\\\Downloads\\\\hms-frontend (3)\\\\src\\\\pages\\\\Patient\\\\Records.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Table from '../../components/Table';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Records = () => {\n  _s();\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    api.get('/patient/records').then(res => setRecords(res.data));\n  }, []);\n  const handleUpload = e => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    api.post('/patient/records', formData).then(() => alert('Uploaded'));\n  };\n  const actions = record => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => window.open(`/view/${record.id}`, '_blank'),\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: () => api.delete(`/patient/records/${record.id}`).then(() => setRecords(records.filter(r => r.id !== record.id))),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Records\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      headers: ['File Name', 'Date'],\n      data: records,\n      actions: actions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Records, \"2hVe065MKzxnAZ4C3qrhRP61L3w=\");\n_c = Records;\nexport default Records;\nvar _c;\n$RefreshReg$(_c, \"Records\");","map":{"version":3,"names":["React","useEffect","useState","api","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","Records","_s","records","setRecords","get","then","res","data","handleUpload","e","file","target","files","formData","FormData","append","post","alert","actions","record","children","className","onClick","window","open","id","fileName","_jsxFileName","lineNumber","columnNumber","delete","filter","r","type","onChange","headers","_c","$RefreshReg$"],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/pages/Patient/Records.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Table from '../../components/Table';\n\nconst Records = () => {\n  const [records, setRecords] = useState([]);\n\n  useEffect(() => {\n    api.get('/patient/records').then(res => setRecords(res.data));\n  }, []);\n\n  const handleUpload = (e) => {\n    const file = e.target.files[0];\n    const formData = new FormData();\n    formData.append('file', file);\n    api.post('/patient/records', formData).then(() => alert('Uploaded'));\n  };\n\n  const actions = (record) => (\n    <>\n      <button className=\"btn btn-primary\" onClick={() => window.open(`/view/${record.id}`, '_blank')}>View</button>\n      <button className=\"btn btn-danger\" onClick={() => api.delete(`/patient/records/${record.id}`).then(() => setRecords(records.filter(r => r.id !== record.id)))}>Delete</button>\n    </>\n  );\n\n  return (\n    <div>\n      <h2>My Records</h2>\n      <input type=\"file\" onChange={handleUpload} />\n      <Table headers={['File Name', 'Date']} data={records} actions={actions} />\n    </div>\n  );\n};\n\nexport default Records;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdE,GAAG,CAACU,GAAG,CAAC,kBAAkB,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIH,UAAU,CAACG,GAAG,CAACC,IAAI,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAC7BhB,GAAG,CAACsB,IAAI,CAAC,kBAAkB,EAAEH,QAAQ,CAAC,CAACR,IAAI,CAAC,MAAMY,KAAK,CAAC,UAAU,CAAC,CAAC;EACtE,CAAC;EAED,MAAMC,OAAO,GAAIC,MAAM,iBACrBtB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACEvB,OAAA;MAAQwB,SAAS,EAAC,iBAAiB;MAACC,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,IAAI,CAAC,SAASL,MAAM,CAACM,EAAE,EAAE,EAAE,QAAQ,CAAE;MAAAL,QAAA,EAAC;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7GhC,OAAA;MAAQwB,SAAS,EAAC,gBAAgB;MAACC,OAAO,EAAEA,CAAA,KAAM5B,GAAG,CAACoC,MAAM,CAAC,oBAAoBX,MAAM,CAACM,EAAE,EAAE,CAAC,CAACpB,IAAI,CAAC,MAAMF,UAAU,CAACD,OAAO,CAAC6B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACP,EAAE,KAAKN,MAAM,CAACM,EAAE,CAAC,CAAC,CAAE;MAAAL,QAAA,EAAC;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC9K,CACH;EAED,oBACEhC,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhC,OAAA;MAAOoC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE1B;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7ChC,OAAA,CAACF,KAAK;MAACwC,OAAO,EAAE,CAAC,WAAW,EAAE,MAAM,CAAE;MAAC5B,IAAI,EAAEL,OAAQ;MAACgB,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA5BID,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AA8Bb,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}