{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Chart from '../../components/Chart';\n// import Table from '../../components/Table';\n\n// const Dashboard = () => {\n//   const [stats, setStats] = useState({});\n//   const [chartData, setChartData] = useState({});\n\n//   useEffect(() => {\n//     api.get('/doctor/stats').then(res => {\n//       setStats(res.data);\n//       setChartData({\n//         labels: ['Appointments', 'Patients'],\n//         datasets: [{ label: 'Counts', data: [res.data.appointments, res.data.patients] }]\n//       });\n//     });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Doctor Dashboard</h2>\n//       <div className=\"card\">\n//         <Chart data={chartData} />\n//       </div>\n//       <div className=\"card\">\n//         <Table headers={['Metric', 'Value']} data={Object.entries(stats).map(([k, v]) => ({ metric: k, value: v }))} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Chart from '../../components/Chart';\n// import Table from '../../components/Table';\n\n// const Dashboard = () => {\n//   const [stats, setStats] = useState({});\n//   const [chartData, setChartData] = useState(null); // null initially\n\n//   useEffect(() => {\n//     const fetchStats = async () => {\n//       try {\n//         const res = await api.get('/doctor/stats');\n//         const data = res.data || {};\n//         setStats(data);\n\n//         // Ensure valid fallback values\n//         setChartData({\n//           labels: ['Appointments', 'Patients'],\n//           datasets: [\n//             {\n//               label: 'Counts',\n//               data: [data.appointments || 0, data.patients || 0],\n//               backgroundColor: ['#36A2EB', '#FF6384'],\n//             },\n//           ],\n//         });\n//       } catch (error) {\n//         console.error('Error fetching stats:', error);\n//         setStats({ appointments: 0, patients: 0 });\n//         setChartData({\n//           labels: ['Appointments', 'Patients'],\n//           datasets: [\n//             {\n//               label: 'Counts',\n//               data: [0, 0],\n//               backgroundColor: ['#36A2EB', '#FF6384'],\n//             },\n//           ],\n//         });\n//       }\n//     };\n//     fetchStats();\n//   }, []);\n\n//   // ðŸ©µ Prevent rendering before data is ready\n//   if (!chartData) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h2>Doctor Dashboard</h2>\n//       <div className=\"card\">\n//         <Chart data={chartData} />\n//       </div>\n//       <div className=\"card\">\n//         {stats && Object.keys(stats).length > 0 ? (\n//           <Table\n//             headers={['Metric', 'Value']}\n//             data={Object.entries(stats).map(([k, v]) => ({\n//               metric: k,\n//               value: v,\n//             }))}\n//           />\n//         ) : (\n//           <p>No statistics available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/pages/Doctor/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Chart from '../../components/Chart';\n// import Table from '../../components/Table';\n\n// const Dashboard = () => {\n//   const [stats, setStats] = useState({});\n//   const [chartData, setChartData] = useState({});\n\n//   useEffect(() => {\n//     api.get('/doctor/stats').then(res => {\n//       setStats(res.data);\n//       setChartData({\n//         labels: ['Appointments', 'Patients'],\n//         datasets: [{ label: 'Counts', data: [res.data.appointments, res.data.patients] }]\n//       });\n//     });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Doctor Dashboard</h2>\n//       <div className=\"card\">\n//         <Chart data={chartData} />\n//       </div>\n//       <div className=\"card\">\n//         <Table headers={['Metric', 'Value']} data={Object.entries(stats).map(([k, v]) => ({ metric: k, value: v }))} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Chart from '../../components/Chart';\n// import Table from '../../components/Table';\n\n// const Dashboard = () => {\n//   const [stats, setStats] = useState({});\n//   const [chartData, setChartData] = useState(null); // null initially\n\n//   useEffect(() => {\n//     const fetchStats = async () => {\n//       try {\n//         const res = await api.get('/doctor/stats');\n//         const data = res.data || {};\n//         setStats(data);\n\n//         // Ensure valid fallback values\n//         setChartData({\n//           labels: ['Appointments', 'Patients'],\n//           datasets: [\n//             {\n//               label: 'Counts',\n//               data: [data.appointments || 0, data.patients || 0],\n//               backgroundColor: ['#36A2EB', '#FF6384'],\n//             },\n//           ],\n//         });\n//       } catch (error) {\n//         console.error('Error fetching stats:', error);\n//         setStats({ appointments: 0, patients: 0 });\n//         setChartData({\n//           labels: ['Appointments', 'Patients'],\n//           datasets: [\n//             {\n//               label: 'Counts',\n//               data: [0, 0],\n//               backgroundColor: ['#36A2EB', '#FF6384'],\n//             },\n//           ],\n//         });\n//       }\n//     };\n//     fetchStats();\n//   }, []);\n\n//   // ðŸ©µ Prevent rendering before data is ready\n//   if (!chartData) {\n//     return <div>Loading...</div>;\n//   }\n\n//   return (\n//     <div>\n//       <h2>Doctor Dashboard</h2>\n//       <div className=\"card\">\n//         <Chart data={chartData} />\n//       </div>\n//       <div className=\"card\">\n//         {stats && Object.keys(stats).length > 0 ? (\n//           <Table\n//             headers={['Metric', 'Value']}\n//             data={Object.entries(stats).map(([k, v]) => ({\n//               metric: k,\n//               value: v,\n//             }))}\n//           />\n//         ) : (\n//           <p>No statistics available.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}