{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharu\\\\Downloads\\\\hms-frontend (3)\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Register = () => {\n//   const [role, setRole] = useState('patient');\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     password: '',\n//     confirmPassword: '',\n//     phone: '',\n//     qualification: '',\n//     experience: '',\n//     specialization: '',\n//     dob: '',\n//     mobile: '',\n//     gender: ''\n//   });\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (form.password !== form.confirmPassword) {\n//       alert('Passwords do not match');\n//       return;\n//     }\n//     try {\n//       await api.post('/auth/register', { ...form, role });\n//       alert('Registration successful. For doctors, wait for admin approval.');\n//       navigate('/login');\n//     } catch (err) {\n//       alert('Registration failed');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Register</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <select name=\"role\" value={role} onChange={(e) => setRole(e.target.value)}>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"patient\">Patient</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"text\" name=\"name\" placeholder=\"Name\" value={form.name} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" value={form.confirmPassword} onChange={handleChange} required />\n//         </div>\n//         {role === 'doctor' && (\n//           <>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"phone\" placeholder=\"Phone\" value={form.phone} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" value={form.qualification} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"experience\" placeholder=\"Experience\" value={form.experience} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" value={form.specialization} onChange={handleChange} required />\n//             </div>\n//           </>\n//         )}\n//         {role === 'patient' && (\n//           <>\n//             <div className=\"form-group\">\n//               <input type=\"date\" name=\"dob\" value={form.dob} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"mobile\" placeholder=\"Mobile\" value={form.mobile} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <select name=\"gender\" value={form.gender} onChange={handleChange} required>\n//                 <option value=\"\">Select Gender</option>\n//                 <option value=\"male\">Male</option>\n//                 <option value=\"female\">Female</option>\n//                 <option value=\"other\">Other</option>\n//               </select>\n//             </div>\n//           </>\n//         )}\n//         <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Register = () => {\n//   const navigate = useNavigate();\n//   const [step, setStep] = useState(1); // Step 1: role selection, Step 2: form\n//   const [role, setRole] = useState('');\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     password: '',\n//     confirmPassword: '',\n//     phone: '',\n//     qualification: '',\n//     experience: '',\n//     specialization: '',\n//     dob: '',\n//     mobile: '',\n//     gender: ''\n//   });\n//   const [error, setError] = useState('');\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleRoleSelect = (selectedRole) => {\n//     setRole(selectedRole);\n//     setStep(2);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     if (form.password !== form.confirmPassword) {\n//       setError('Passwords do not match');\n//       return;\n//     }\n\n//     try {\n//       await api.post('/auth/register', { ...form, role });\n//       alert('Registration successful! For doctors, wait for admin approval.');\n//       navigate('/login');\n//     } catch (err) {\n//       console.error(err);\n//       setError(err.response?.data?.message || 'Registration failed. Try again.');\n//     }\n//   };\n\n//   return (\n//     <div style={styles.page}>\n//       <div style={styles.card}>\n//         {step === 1 && (\n//           <>\n//             <h2 style={styles.heading}>Select Role</h2>\n//             <div style={styles.roleContainer}>\n//               <button style={styles.roleButton} onClick={() => handleRoleSelect('patient')}>\n//                 Register as Patient\n//               </button>\n//               <button style={styles.roleButton} onClick={() => handleRoleSelect('doctor')}>\n//                 Register as Doctor\n//               </button>\n//             </div>\n//           </>\n//         )}\n\n//         {step === 2 && (\n//           <>\n//             <h2 style={styles.heading}>Register as {role.charAt(0).toUpperCase() + role.slice(1)}</h2>\n//             <form onSubmit={handleSubmit} style={styles.form}>\n//               <input name=\"name\" type=\"text\" placeholder=\"Name\" value={form.name} onChange={handleChange} required />\n//               <input name=\"email\" type=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//               <input name=\"password\" type=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//               <input name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" value={form.confirmPassword} onChange={handleChange} required />\n\n//               {role === 'doctor' && (\n//                 <>\n//                   <input name=\"phone\" type=\"text\" placeholder=\"Phone\" value={form.phone} onChange={handleChange} required />\n//                   <input name=\"qualification\" type=\"text\" placeholder=\"Qualification\" value={form.qualification} onChange={handleChange} required />\n//                   <input name=\"experience\" type=\"text\" placeholder=\"Experience\" value={form.experience} onChange={handleChange} required />\n//                   <input name=\"specialization\" type=\"text\" placeholder=\"Specialization\" value={form.specialization} onChange={handleChange} required />\n//                 </>\n//               )}\n\n//               {role === 'patient' && (\n//                 <>\n//                   <input name=\"dob\" type=\"date\" value={form.dob} onChange={handleChange} required />\n//                   <input name=\"mobile\" type=\"text\" placeholder=\"Mobile\" value={form.mobile} onChange={handleChange} required />\n//                   <select name=\"gender\" value={form.gender} onChange={handleChange} required>\n//                     <option value=\"\">Select Gender</option>\n//                     <option value=\"male\">Male</option>\n//                     <option value=\"female\">Female</option>\n//                     <option value=\"other\">Other</option>\n//                   </select>\n//                 </>\n//               )}\n\n//               {error && <div style={styles.error}>{error}</div>}\n\n//               <div style={{ display: 'flex', justifyContent: 'space-between', gap: 10 }}>\n//                 <button type=\"button\" style={{ ...styles.button, background: '#6c757d' }} onClick={() => setStep(1)}>\n//                   Back\n//                 </button>\n//                 <button type=\"submit\" style={styles.button}>\n//                   Register\n//                 </button>\n//               </div>\n//             </form>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   page: {\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     background: '#f3f7fa',\n//     padding: 20,\n//   },\n//   card: {\n//     width: 450,\n//     padding: 30,\n//     borderRadius: 12,\n//     background: '#fff',\n//     boxShadow: '0 6px 18px rgba(0,0,0,0.08)',\n//   },\n//   heading: {\n//     color: '#0077b6',\n//     textAlign: 'center',\n//     marginBottom: 20,\n//   },\n//   roleContainer: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: 15,\n//   },\n//   roleButton: {\n//     padding: 15,\n//     background: '#0077b6',\n//     color: '#fff',\n//     border: 'none',\n//     borderRadius: 8,\n//     cursor: 'pointer',\n//     fontSize: 16,\n//   },\n//   form: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: 12,\n//   },\n//   button: {\n//     padding: 12,\n//     background: '#0077b6',\n//     color: '#fff',\n//     border: 'none',\n//     borderRadius: 6,\n//     cursor: 'pointer',\n//     fontWeight: 'bold',\n//     marginTop: 10,\n//   },\n//   error: {\n//     color: 'red',\n//     fontSize: 14,\n//     textAlign: 'center',\n//   },\n// };\n\n// export default Register;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1); // Step 1: role selection, Step 2: form\n  const [role, setRole] = useState('');\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    phone: '',\n    qualification: '',\n    experience: '',\n    specialization: '',\n    dob: '',\n    mobile: '',\n    gender: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleRoleSelect = selectedRole => {\n    setRole(selectedRole);\n    setStep(2);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (form.password !== form.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      await api.post('/auth/register', {\n        ...form,\n        role\n      });\n      alert('Registration successful! For doctors, wait for admin approval.');\n      navigate('/login');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Registration failed. Try again.');\n    }\n  };\n  const specializations = ['Cardiologist', 'Orthopedic', 'Dentist', 'Gynaecologist', 'Neurologist', 'Gastroenterologist', 'Pediatrics', 'Radiology', 'General Physician', 'Otolaryngologist-ENT', 'Endocrinologist', 'Oncology'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.page,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [step === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.heading,\n          children: \"Choose Your Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.roleContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.roleSelectButton,\n              onClick: () => handleRoleSelect('patient'),\n              children: \"Register as Patient\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.roleSelectButton,\n              onClick: () => handleRoleSelect('doctor'),\n              children: \"Register as Doctor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.infoText,\n            children: \"Select a role to continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), step === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.heading,\n          children: [\"Register as \", role.charAt(0).toUpperCase() + role.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          style: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"name\",\n            type: \"text\",\n            placeholder: \"Full Name\",\n            value: form.name,\n            onChange: handleChange,\n            required: true,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Email\",\n            value: form.email,\n            onChange: handleChange,\n            required: true,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            placeholder: \"Password\",\n            value: form.password,\n            onChange: handleChange,\n            required: true,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"confirmPassword\",\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: form.confirmPassword,\n            onChange: handleChange,\n            required: true,\n            style: styles.input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), role === 'doctor' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"phone\",\n              type: \"text\",\n              placeholder: \"Phone Number\",\n              value: form.phone,\n              onChange: handleChange,\n              required: true,\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"qualification\",\n              type: \"text\",\n              placeholder: \"Qualification\",\n              value: form.qualification,\n              onChange: handleChange,\n              required: true,\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"experience\",\n              type: \"text\",\n              placeholder: \"Experience (years)\",\n              value: form.experience,\n              onChange: handleChange,\n              required: true,\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"specialization\",\n              value: form.specialization,\n              onChange: handleChange,\n              required: true,\n              style: styles.input,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Specialization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this), specializations.map((spec, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: spec,\n                children: spec\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), role === 'patient' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"dob\",\n              type: \"date\",\n              value: form.dob,\n              onChange: handleChange,\n              required: true,\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"mobile\",\n              type: \"text\",\n              placeholder: \"Mobile Number\",\n              value: form.mobile,\n              onChange: handleChange,\n              required: true,\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"gender\",\n              value: form.gender,\n              onChange: handleChange,\n              required: true,\n              style: styles.input,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"male\",\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"female\",\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.error,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.buttonGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              style: {\n                ...styles.button,\n                background: '#6c757d'\n              },\n              onClick: () => setStep(1),\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: styles.button,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"+RtjlN57+u++XuwSnnT4+uX5gU8=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nconst styles = {\n  page: {\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: 'linear-gradient(135deg, #e0f7fa, #f1f8ff)',\n    padding: 20\n  },\n  card: {\n    width: 500,\n    padding: 35,\n    borderRadius: 15,\n    background: '#fff',\n    boxShadow: '0 10px 25px rgba(0,0,0,0.1)',\n    transition: 'all 0.3s ease-in-out'\n  },\n  heading: {\n    color: '#0077b6',\n    textAlign: 'center',\n    marginBottom: 25,\n    fontSize: 24,\n    fontWeight: 700\n  },\n  roleContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 15,\n    alignItems: 'center'\n  },\n  roleSelectButton: {\n    padding: '10px 20px',\n    background: '#0077b6',\n    color: '#fff',\n    border: 'none',\n    borderRadius: 8,\n    cursor: 'pointer',\n    fontWeight: '600',\n    transition: 'all 0.3s'\n  },\n  infoText: {\n    fontSize: 14,\n    color: '#555',\n    marginTop: 10,\n    textAlign: 'center'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 15\n  },\n  input: {\n    padding: 12,\n    borderRadius: 8,\n    border: '1px solid #ccc',\n    outline: 'none',\n    fontSize: 14,\n    transition: 'all 0.3s'\n  },\n  buttonGroup: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: 15\n  },\n  button: {\n    flex: 1,\n    padding: 12,\n    margin: '0 5px',\n    background: '#0077b6',\n    color: '#fff',\n    border: 'none',\n    borderRadius: 8,\n    fontWeight: '600',\n    cursor: 'pointer',\n    transition: 'all 0.3s'\n  },\n  error: {\n    color: 'red',\n    fontSize: 14,\n    textAlign: 'center'\n  }\n};\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","navigate","step","setStep","role","setRole","form","setForm","name","email","password","confirmPassword","phone","qualification","experience","specialization","dob","mobile","gender","error","setError","handleChange","e","target","value","handleRoleSelect","selectedRole","handleSubmit","preventDefault","post","alert","err","_err$response","_err$response$data","console","response","data","message","specializations","style","styles","page","children","card","heading","fileName","_jsxFileName","lineNumber","columnNumber","roleContainer","display","gap","roleSelectButton","onClick","infoText","charAt","toUpperCase","slice","onSubmit","type","placeholder","onChange","required","input","map","spec","index","buttonGroup","button","background","_c","minHeight","alignItems","justifyContent","padding","width","borderRadius","boxShadow","transition","color","textAlign","marginBottom","fontSize","fontWeight","flexDirection","border","cursor","marginTop","outline","flex","margin","$RefreshReg$"],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/components/Register.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Register = () => {\n//   const [role, setRole] = useState('patient');\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     password: '',\n//     confirmPassword: '',\n//     phone: '',\n//     qualification: '',\n//     experience: '',\n//     specialization: '',\n//     dob: '',\n//     mobile: '',\n//     gender: ''\n//   });\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (form.password !== form.confirmPassword) {\n//       alert('Passwords do not match');\n//       return;\n//     }\n//     try {\n//       await api.post('/auth/register', { ...form, role });\n//       alert('Registration successful. For doctors, wait for admin approval.');\n//       navigate('/login');\n//     } catch (err) {\n//       alert('Registration failed');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Register</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <select name=\"role\" value={role} onChange={(e) => setRole(e.target.value)}>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"patient\">Patient</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"text\" name=\"name\" placeholder=\"Name\" value={form.name} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" value={form.confirmPassword} onChange={handleChange} required />\n//         </div>\n//         {role === 'doctor' && (\n//           <>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"phone\" placeholder=\"Phone\" value={form.phone} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" value={form.qualification} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"experience\" placeholder=\"Experience\" value={form.experience} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" value={form.specialization} onChange={handleChange} required />\n//             </div>\n//           </>\n//         )}\n//         {role === 'patient' && (\n//           <>\n//             <div className=\"form-group\">\n//               <input type=\"date\" name=\"dob\" value={form.dob} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <input type=\"text\" name=\"mobile\" placeholder=\"Mobile\" value={form.mobile} onChange={handleChange} required />\n//             </div>\n//             <div className=\"form-group\">\n//               <select name=\"gender\" value={form.gender} onChange={handleChange} required>\n//                 <option value=\"\">Select Gender</option>\n//                 <option value=\"male\">Male</option>\n//                 <option value=\"female\">Female</option>\n//                 <option value=\"other\">Other</option>\n//               </select>\n//             </div>\n//           </>\n//         )}\n//         <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Register;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Register = () => {\n//   const navigate = useNavigate();\n//   const [step, setStep] = useState(1); // Step 1: role selection, Step 2: form\n//   const [role, setRole] = useState('');\n//   const [form, setForm] = useState({\n//     name: '',\n//     email: '',\n//     password: '',\n//     confirmPassword: '',\n//     phone: '',\n//     qualification: '',\n//     experience: '',\n//     specialization: '',\n//     dob: '',\n//     mobile: '',\n//     gender: ''\n//   });\n//   const [error, setError] = useState('');\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleRoleSelect = (selectedRole) => {\n//     setRole(selectedRole);\n//     setStep(2);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n\n//     if (form.password !== form.confirmPassword) {\n//       setError('Passwords do not match');\n//       return;\n//     }\n\n//     try {\n//       await api.post('/auth/register', { ...form, role });\n//       alert('Registration successful! For doctors, wait for admin approval.');\n//       navigate('/login');\n//     } catch (err) {\n//       console.error(err);\n//       setError(err.response?.data?.message || 'Registration failed. Try again.');\n//     }\n//   };\n\n//   return (\n//     <div style={styles.page}>\n//       <div style={styles.card}>\n//         {step === 1 && (\n//           <>\n//             <h2 style={styles.heading}>Select Role</h2>\n//             <div style={styles.roleContainer}>\n//               <button style={styles.roleButton} onClick={() => handleRoleSelect('patient')}>\n//                 Register as Patient\n//               </button>\n//               <button style={styles.roleButton} onClick={() => handleRoleSelect('doctor')}>\n//                 Register as Doctor\n//               </button>\n//             </div>\n//           </>\n//         )}\n\n//         {step === 2 && (\n//           <>\n//             <h2 style={styles.heading}>Register as {role.charAt(0).toUpperCase() + role.slice(1)}</h2>\n//             <form onSubmit={handleSubmit} style={styles.form}>\n//               <input name=\"name\" type=\"text\" placeholder=\"Name\" value={form.name} onChange={handleChange} required />\n//               <input name=\"email\" type=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//               <input name=\"password\" type=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//               <input name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" value={form.confirmPassword} onChange={handleChange} required />\n\n//               {role === 'doctor' && (\n//                 <>\n//                   <input name=\"phone\" type=\"text\" placeholder=\"Phone\" value={form.phone} onChange={handleChange} required />\n//                   <input name=\"qualification\" type=\"text\" placeholder=\"Qualification\" value={form.qualification} onChange={handleChange} required />\n//                   <input name=\"experience\" type=\"text\" placeholder=\"Experience\" value={form.experience} onChange={handleChange} required />\n//                   <input name=\"specialization\" type=\"text\" placeholder=\"Specialization\" value={form.specialization} onChange={handleChange} required />\n//                 </>\n//               )}\n\n//               {role === 'patient' && (\n//                 <>\n//                   <input name=\"dob\" type=\"date\" value={form.dob} onChange={handleChange} required />\n//                   <input name=\"mobile\" type=\"text\" placeholder=\"Mobile\" value={form.mobile} onChange={handleChange} required />\n//                   <select name=\"gender\" value={form.gender} onChange={handleChange} required>\n//                     <option value=\"\">Select Gender</option>\n//                     <option value=\"male\">Male</option>\n//                     <option value=\"female\">Female</option>\n//                     <option value=\"other\">Other</option>\n//                   </select>\n//                 </>\n//               )}\n\n//               {error && <div style={styles.error}>{error}</div>}\n\n//               <div style={{ display: 'flex', justifyContent: 'space-between', gap: 10 }}>\n//                 <button type=\"button\" style={{ ...styles.button, background: '#6c757d' }} onClick={() => setStep(1)}>\n//                   Back\n//                 </button>\n//                 <button type=\"submit\" style={styles.button}>\n//                   Register\n//                 </button>\n//               </div>\n//             </form>\n//           </>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   page: {\n//     minHeight: '100vh',\n//     display: 'flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     background: '#f3f7fa',\n//     padding: 20,\n//   },\n//   card: {\n//     width: 450,\n//     padding: 30,\n//     borderRadius: 12,\n//     background: '#fff',\n//     boxShadow: '0 6px 18px rgba(0,0,0,0.08)',\n//   },\n//   heading: {\n//     color: '#0077b6',\n//     textAlign: 'center',\n//     marginBottom: 20,\n//   },\n//   roleContainer: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: 15,\n//   },\n//   roleButton: {\n//     padding: 15,\n//     background: '#0077b6',\n//     color: '#fff',\n//     border: 'none',\n//     borderRadius: 8,\n//     cursor: 'pointer',\n//     fontSize: 16,\n//   },\n//   form: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: 12,\n//   },\n//   button: {\n//     padding: 12,\n//     background: '#0077b6',\n//     color: '#fff',\n//     border: 'none',\n//     borderRadius: 6,\n//     cursor: 'pointer',\n//     fontWeight: 'bold',\n//     marginTop: 10,\n//   },\n//   error: {\n//     color: 'red',\n//     fontSize: 14,\n//     textAlign: 'center',\n//   },\n// };\n\n// export default Register;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\n\nconst Register = () => {\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1); // Step 1: role selection, Step 2: form\n  const [role, setRole] = useState('');\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    phone: '',\n    qualification: '',\n    experience: '',\n    specialization: '',\n    dob: '',\n    mobile: '',\n    gender: ''\n  });\n  const [error, setError] = useState('');\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleRoleSelect = (selectedRole) => {\n    setRole(selectedRole);\n    setStep(2);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    if (form.password !== form.confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    try {\n      await api.post('/auth/register', { ...form, role });\n      alert('Registration successful! For doctors, wait for admin approval.');\n      navigate('/login');\n    } catch (err) {\n      console.error(err);\n      setError(err.response?.data?.message || 'Registration failed. Try again.');\n    }\n  };\n\n  const specializations = [\n    'Cardiologist',\n    'Orthopedic',\n    'Dentist',\n    'Gynaecologist',\n    'Neurologist',\n    'Gastroenterologist',\n    'Pediatrics',\n    'Radiology',\n    'General Physician',\n    'Otolaryngologist-ENT',\n    'Endocrinologist',\n    'Oncology'\n  ];\n\n  return (\n    <div style={styles.page}>\n      <div style={styles.card}>\n        {step === 1 && (\n          <>\n            <h2 style={styles.heading}>Choose Your Role</h2>\n            <div style={styles.roleContainer}>\n              <div style={{ display: 'flex', gap: 10 }}>\n                <button style={styles.roleSelectButton} onClick={() => handleRoleSelect('patient')}>\n                  Register as Patient\n                </button>\n                <button style={styles.roleSelectButton} onClick={() => handleRoleSelect('doctor')}>\n                  Register as Doctor\n                </button>\n              </div>\n              <div style={styles.infoText}>Select a role to continue</div>\n            </div>\n          </>\n        )}\n\n        {step === 2 && (\n          <>\n            <h2 style={styles.heading}>Register as {role.charAt(0).toUpperCase() + role.slice(1)}</h2>\n            <form onSubmit={handleSubmit} style={styles.form}>\n              <input name=\"name\" type=\"text\" placeholder=\"Full Name\" value={form.name} onChange={handleChange} required style={styles.input} />\n              <input name=\"email\" type=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required style={styles.input} />\n              <input name=\"password\" type=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required style={styles.input} />\n              <input name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" value={form.confirmPassword} onChange={handleChange} required style={styles.input} />\n\n              {role === 'doctor' && (\n                <>\n                  <input name=\"phone\" type=\"text\" placeholder=\"Phone Number\" value={form.phone} onChange={handleChange} required style={styles.input} />\n                  <input name=\"qualification\" type=\"text\" placeholder=\"Qualification\" value={form.qualification} onChange={handleChange} required style={styles.input} />\n                  <input name=\"experience\" type=\"text\" placeholder=\"Experience (years)\" value={form.experience} onChange={handleChange} required style={styles.input} />\n                  <select name=\"specialization\" value={form.specialization} onChange={handleChange} required style={styles.input}>\n                    <option value=\"\">Select Specialization</option>\n                    {specializations.map((spec, index) => (\n                      <option key={index} value={spec}>{spec}</option>\n                    ))}\n                  </select>\n                </>\n              )}\n\n              {role === 'patient' && (\n                <>\n                  <input name=\"dob\" type=\"date\" value={form.dob} onChange={handleChange} required style={styles.input} />\n                  <input name=\"mobile\" type=\"text\" placeholder=\"Mobile Number\" value={form.mobile} onChange={handleChange} required style={styles.input} />\n                  <select name=\"gender\" value={form.gender} onChange={handleChange} required style={styles.input}>\n                    <option value=\"\">Select Gender</option>\n                    <option value=\"male\">Male</option>\n                    <option value=\"female\">Female</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </>\n              )}\n\n              {error && <div style={styles.error}>{error}</div>}\n\n              <div style={styles.buttonGroup}>\n                <button type=\"button\" style={{ ...styles.button, background: '#6c757d' }} onClick={() => setStep(1)}>\n                  Back\n                </button>\n                <button type=\"submit\" style={styles.button}>\n                  Register\n                </button>\n              </div>\n            </form>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  page: {\n    minHeight: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    background: 'linear-gradient(135deg, #e0f7fa, #f1f8ff)',\n    padding: 20,\n  },\n  card: {\n    width: 500,\n    padding: 35,\n    borderRadius: 15,\n    background: '#fff',\n    boxShadow: '0 10px 25px rgba(0,0,0,0.1)',\n    transition: 'all 0.3s ease-in-out',\n  },\n  heading: {\n    color: '#0077b6',\n    textAlign: 'center',\n    marginBottom: 25,\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  roleContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 15,\n    alignItems: 'center',\n  },\n  roleSelectButton: {\n    padding: '10px 20px',\n    background: '#0077b6',\n    color: '#fff',\n    border: 'none',\n    borderRadius: 8,\n    cursor: 'pointer',\n    fontWeight: '600',\n    transition: 'all 0.3s',\n  },\n  infoText: {\n    fontSize: 14,\n    color: '#555',\n    marginTop: 10,\n    textAlign: 'center'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 15,\n  },\n  input: {\n    padding: 12,\n    borderRadius: 8,\n    border: '1px solid #ccc',\n    outline: 'none',\n    fontSize: 14,\n    transition: 'all 0.3s',\n  },\n  buttonGroup: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginTop: 15,\n  },\n  button: {\n    flex: 1,\n    padding: 12,\n    margin: '0 5px',\n    background: '#0077b6',\n    color: '#fff',\n    border: 'none',\n    borderRadius: 8,\n    fontWeight: '600',\n    cursor: 'pointer',\n    transition: 'all 0.3s',\n  },\n  error: {\n    color: 'red',\n    fontSize: 14,\n    textAlign: 'center',\n  },\n};\n\nexport default Register;\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}