{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharu\\\\Downloads\\\\hms-frontend (3)\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const [form, setForm] = useState({ email: '', password: '', role: 'patient' });\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await api.post('/auth/login', form);\n//       localStorage.setItem('token', res.data.token);\n//       localStorage.setItem('role', form.role);\n//       navigate(`/${form.role}`);\n//     } catch (err) {\n//       alert('Login failed');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <select name=\"role\" value={form.role} onChange={handleChange}>\n//             <option value=\"admin\">Admin</option>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"patient\">Patient</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      var _res$data;\n      // Hardcoded admin login\n      if (form.email === 'admin@hms.com' && form.password === 'admin123') {\n        const adminUser = {\n          email: 'admin@hms.com',\n          role: 'ADMIN',\n          token: 'admin-token' // dummy token\n        };\n        localStorage.setItem('loggedInUser', JSON.stringify(adminUser));\n        navigate('/admin/');\n        setLoading(false);\n        return;\n      }\n\n      // Normal login for doctor/patient\n      const res = await api.post('/auth/login', form);\n      if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.token) {\n        const user = {\n          email: form.email,\n          role: res.data.role.toUpperCase(),\n          // backend must return role\n          token: res.data.token\n        };\n        localStorage.setItem('loggedInUser', JSON.stringify(user));\n        if (user.role === 'DOCTOR') navigate('/doctor/');else if (user.role === 'PATIENT') navigate('/patient/');else navigate('/'); // fallback\n      } else {\n        var _res$data2;\n        setError(((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.message) || 'Invalid credentials.');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      const msg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Server error. Try again later.';\n      setError(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: form.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: form.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"7gVpDrpZ/kyTIF6Esj7dZ2xtbow=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","api","jsxDEV","_jsxDEV","Login","_s","navigate","form","setForm","email","password","error","setError","loading","setLoading","handleChange","e","target","name","value","handleSubmit","preventDefault","_res$data","adminUser","role","token","localStorage","setItem","JSON","stringify","res","post","data","user","toUpperCase","_res$data2","message","err","_err$response","_err$response$data","console","msg","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const [form, setForm] = useState({ email: '', password: '', role: 'patient' });\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await api.post('/auth/login', form);\n//       localStorage.setItem('token', res.data.token);\n//       localStorage.setItem('role', form.role);\n//       navigate(`/${form.role}`);\n//     } catch (err) {\n//       alert('Login failed');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <select name=\"role\" value={form.role} onChange={handleChange}>\n//             <option value=\"admin\">Admin</option>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"patient\">Patient</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [form, setForm] = useState({ email: '', password: '' });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      // Hardcoded admin login\n      if (form.email === 'admin@hms.com' && form.password === 'admin123') {\n        const adminUser = {\n          email: 'admin@hms.com',\n          role: 'ADMIN',\n          token: 'admin-token', // dummy token\n        };\n        localStorage.setItem('loggedInUser', JSON.stringify(adminUser));\n        navigate('/admin/');\n        setLoading(false);\n        return;\n      }\n\n      // Normal login for doctor/patient\n      const res = await api.post('/auth/login', form);\n\n      if (res.data?.token) {\n        const user = {\n          email: form.email,\n          role: res.data.role.toUpperCase(), // backend must return role\n          token: res.data.token,\n        };\n        localStorage.setItem('loggedInUser', JSON.stringify(user));\n\n        if (user.role === 'DOCTOR') navigate('/doctor/');\n        else if (user.role === 'PATIENT') navigate('/patient/');\n        else navigate('/'); // fallback\n      } else {\n        setError(res.data?.message || 'Invalid credentials.');\n      }\n    } catch (err) {\n      console.error(err);\n      const msg = err.response?.data?.message || 'Server error. Try again later.';\n      setError(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit} className=\"card\">\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={form.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={form.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n          {loading ? 'Logging in...' : 'Login'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}