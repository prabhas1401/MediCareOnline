{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharu\\\\Downloads\\\\hms-frontend (3)\\\\src\\\\pages\\\\Doctor\\\\Availability.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../../services/api';\nimport Calendar from '../../components/Calender';\nimport Form from '../../components/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Availability = () => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [availability, setAvailability] = useState([]);\n  const handleDateSelect = date => {\n    setSelectedDate(date);\n  };\n  const handleSubmit = data => {\n    api.post('/doctor/availability', {\n      date: selectedDate,\n      ...data\n    }).then(() => alert('Set'));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Set Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onDateSelect: handleDateSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(Form, {\n      fields: [{\n        name: 'status',\n        type: 'select',\n        placeholder: 'Status',\n        options: [{\n          value: 'available',\n          label: 'Available'\n        }, {\n          value: 'leave',\n          label: 'Leave'\n        }],\n        required: true\n      }, {\n        name: 'startTime',\n        type: 'time',\n        required: true\n      }, {\n        name: 'endTime',\n        type: 'time',\n        required: true\n      }],\n      onSubmit: handleSubmit,\n      buttonText: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Availability, \"heOndyLfMip+d7SC4mo+i4gXacM=\");\n_c = Availability;\nexport default Availability;\nvar _c;\n$RefreshReg$(_c, \"Availability\");","map":{"version":3,"names":["React","useState","api","Calendar","Form","jsxDEV","_jsxDEV","Availability","_s","selectedDate","setSelectedDate","availability","setAvailability","handleDateSelect","date","handleSubmit","data","post","then","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onDateSelect","fields","name","type","placeholder","options","value","label","required","onSubmit","buttonText","_c","$RefreshReg$"],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/pages/Doctor/Availability.js"],"sourcesContent":["import React, { useState } from 'react';\nimport api from '../../services/api';\nimport Calendar from '../../components/Calender';\nimport Form from '../../components/Form';\n\nconst Availability = () => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [availability, setAvailability] = useState([]);\n\n  const handleDateSelect = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleSubmit = (data) => {\n    api.post('/doctor/availability', { date: selectedDate, ...data }).then(() => alert('Set'));\n  };\n\n  return (\n    <div>\n      <h2>Set Availability</h2>\n      <Calendar onDateSelect={handleDateSelect} />\n      {selectedDate && (\n        <Form \n          fields={[\n            { name: 'status', type: 'select', placeholder: 'Status', options: [\n              { value: 'available', label: 'Available' },\n              { value: 'leave', label: 'Leave' }\n            ], required: true },\n            { name: 'startTime', type: 'time', required: true },\n            { name: 'endTime', type: 'time', required: true }\n          ]}\n          onSubmit={handleSubmit}\n          buttonText=\"Save\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Availability;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,IAAI,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMY,gBAAgB,GAAIC,IAAI,IAAK;IACjCJ,eAAe,CAACI,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC7Bd,GAAG,CAACe,IAAI,CAAC,sBAAsB,EAAE;MAAEH,IAAI,EAAEL,YAAY;MAAE,GAAGO;IAAK,CAAC,CAAC,CAACE,IAAI,CAAC,MAAMC,KAAK,CAAC,KAAK,CAAC,CAAC;EAC5F,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBlB,OAAA,CAACH,QAAQ;MAACsB,YAAY,EAAEZ;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC3Cf,YAAY,iBACXH,OAAA,CAACF,IAAI;MACHsB,MAAM,EAAE,CACN;QAAEC,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE,QAAQ;QAAEC,WAAW,EAAE,QAAQ;QAAEC,OAAO,EAAE,CAChE;UAAEC,KAAK,EAAE,WAAW;UAAEC,KAAK,EAAE;QAAY,CAAC,EAC1C;UAAED,KAAK,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAQ,CAAC,CACnC;QAAEC,QAAQ,EAAE;MAAK,CAAC,EACnB;QAAEN,IAAI,EAAE,WAAW;QAAEC,IAAI,EAAE,MAAM;QAAEK,QAAQ,EAAE;MAAK,CAAC,EACnD;QAAEN,IAAI,EAAE,SAAS;QAAEC,IAAI,EAAE,MAAM;QAAEK,QAAQ,EAAE;MAAK,CAAC,CACjD;MACFC,QAAQ,EAAEnB,YAAa;MACvBoB,UAAU,EAAC;IAAM;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCID,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}