{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api' // adjust your backend URL\n});\n\n// Add JWT token to headers\napi.interceptors.request.use(config => {\n  const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n  if (loggedInUser !== null && loggedInUser !== void 0 && loggedInUser.token) {\n    config.headers.Authorization = `Bearer ${loggedInUser.token}`;\n  }\n  return config;\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","loggedInUser","JSON","parse","localStorage","getItem","token","headers","Authorization"],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api', // adjust your backend URL\n});\n\n// Add JWT token to headers\napi.interceptors.request.use((config) => {\n  const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n  if (loggedInUser?.token) {\n    config.headers.Authorization = `Bearer ${loggedInUser.token}`;\n  }\n  return config;\n});\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B,CAAE;AACxC,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC;EACrE,IAAIJ,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAEK,KAAK,EAAE;IACvBN,MAAM,CAACO,OAAO,CAACC,aAAa,GAAG,UAAUP,YAAY,CAACK,KAAK,EAAE;EAC/D;EACA,OAAON,MAAM;AACf,CAAC,CAAC;AAEF,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}