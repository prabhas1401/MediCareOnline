{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharu\\\\Downloads\\\\hms-frontend (3)\\\\src\\\\pages\\\\Doctor\\\\Dashboard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Chart from '../../components/Chart';\n// import Table from '../../components/Table';\n\n// const Dashboard = () => {\n//   const [stats, setStats] = useState({});\n//   const [chartData, setChartData] = useState({});\n\n//   useEffect(() => {\n//     api.get('/doctor/stats').then(res => {\n//       setStats(res.data);\n//       setChartData({\n//         labels: ['Appointments', 'Patients'],\n//         datasets: [{ label: 'Counts', data: [res.data.appointments, res.data.patients] }]\n//       });\n//     });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Doctor Dashboard</h2>\n//       <div className=\"card\">\n//         <Chart data={chartData} />\n//       </div>\n//       <div className=\"card\">\n//         <Table headers={['Metric', 'Value']} data={Object.entries(stats).map(([k, v]) => ({ metric: k, value: v }))} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Chart from '../../components/Chart';\nimport Table from '../../components/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [stats, setStats] = useState({});\n  const [chartData, setChartData] = useState(null); // null initially\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const res = await api.get('/doctor/stats');\n        const data = res.data || {};\n        setStats(data);\n\n        // Ensure valid fallback values\n        setChartData({\n          labels: ['Appointments', 'Patients'],\n          datasets: [{\n            label: 'Counts',\n            data: [data.appointments || 0, data.patients || 0],\n            backgroundColor: ['#36A2EB', '#FF6384']\n          }]\n        });\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n        setStats({\n          appointments: 0,\n          patients: 0\n        });\n        setChartData({\n          labels: ['Appointments', 'Patients'],\n          datasets: [{\n            label: 'Counts',\n            data: [0, 0],\n            backgroundColor: ['#36A2EB', '#FF6384']\n          }]\n        });\n      }\n    };\n    fetchStats();\n  }, []);\n\n  // ðŸ©µ Prevent rendering before data is ready\n  if (!chartData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: stats && Object.keys(stats).length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n        headers: ['Metric', 'Value'],\n        data: Object.entries(stats).map(([k, v]) => ({\n          metric: k,\n          value: v\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No statistics available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"lZ5QfXs944N9lgl6ve8ViNGkIuE=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","api","Chart","Table","jsxDEV","_jsxDEV","Dashboard","_s","stats","setStats","chartData","setChartData","fetchStats","res","get","data","labels","datasets","label","appointments","patients","backgroundColor","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Object","keys","length","headers","entries","map","k","v","metric","value","_c","$RefreshReg$"],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/pages/Doctor/Dashboard.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Chart from '../../components/Chart';\n// import Table from '../../components/Table';\n\n// const Dashboard = () => {\n//   const [stats, setStats] = useState({});\n//   const [chartData, setChartData] = useState({});\n\n//   useEffect(() => {\n//     api.get('/doctor/stats').then(res => {\n//       setStats(res.data);\n//       setChartData({\n//         labels: ['Appointments', 'Patients'],\n//         datasets: [{ label: 'Counts', data: [res.data.appointments, res.data.patients] }]\n//       });\n//     });\n//   }, []);\n\n//   return (\n//     <div>\n//       <h2>Doctor Dashboard</h2>\n//       <div className=\"card\">\n//         <Chart data={chartData} />\n//       </div>\n//       <div className=\"card\">\n//         <Table headers={['Metric', 'Value']} data={Object.entries(stats).map(([k, v]) => ({ metric: k, value: v }))} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Chart from '../../components/Chart';\nimport Table from '../../components/Table';\n\nconst Dashboard = () => {\n  const [stats, setStats] = useState({});\n  const [chartData, setChartData] = useState(null); // null initially\n\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const res = await api.get('/doctor/stats');\n        const data = res.data || {};\n        setStats(data);\n\n        // Ensure valid fallback values\n        setChartData({\n          labels: ['Appointments', 'Patients'],\n          datasets: [\n            {\n              label: 'Counts',\n              data: [data.appointments || 0, data.patients || 0],\n              backgroundColor: ['#36A2EB', '#FF6384'],\n            },\n          ],\n        });\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n        setStats({ appointments: 0, patients: 0 });\n        setChartData({\n          labels: ['Appointments', 'Patients'],\n          datasets: [\n            {\n              label: 'Counts',\n              data: [0, 0],\n              backgroundColor: ['#36A2EB', '#FF6384'],\n            },\n          ],\n        });\n      }\n    };\n    fetchStats();\n  }, []);\n\n  // ðŸ©µ Prevent rendering before data is ready\n  if (!chartData) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>Doctor Dashboard</h2>\n      <div className=\"card\">\n        <Chart data={chartData} />\n      </div>\n      <div className=\"card\">\n        {stats && Object.keys(stats).length > 0 ? (\n          <Table\n            headers={['Metric', 'Value']}\n            data={Object.entries(stats).map(([k, v]) => ({\n              metric: k,\n              value: v,\n            }))}\n          />\n        ) : (\n          <p>No statistics available.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}