{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharu\\\\Downloads\\\\hms-frontend (3)\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const [form, setForm] = useState({ email: '', password: '', role: 'patient' });\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await api.post('/auth/login', form);\n//       localStorage.setItem('token', res.data.token);\n//       localStorage.setItem('role', form.role);\n//       navigate(`/${form.role}`);\n//     } catch (err) {\n//       alert('Login failed');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <select name=\"role\" value={form.role} onChange={handleChange}>\n//             <option value=\"admin\">Admin</option>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"patient\">Patient</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const [form, setForm] = useState({ email: '', password: '' });\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     setLoading(true);\n\n//     try {\n//       // Hardcoded admin login\n//       if (form.email === 'admin@hms.com' && form.password === 'admin123') {\n//         const adminUser = {\n//           email: 'admin@hms.com',\n//           role: 'ADMIN',\n//           token: 'admin-token', // dummy token\n//         };\n//         localStorage.setItem('loggedInUser', JSON.stringify(adminUser));\n//         navigate('/admin/');\n//         setLoading(false);\n//         return;\n//       }\n\n//       // Normal login for doctor/patient\n//       const res = await api.post('/auth/login', form);\n\n//       if (res.data?.token) {\n//         const user = {\n//           email: form.email,\n//           role: res.data.role.toUpperCase(), // backend must return role\n//           token: res.data.token,\n//         };\n//         localStorage.setItem('loggedInUser', JSON.stringify(user));\n\n//         if (user.role === 'DOCTOR') navigate('/doctor/');\n//         else if (user.role === 'PATIENT') navigate('/patient/');\n//         else navigate('/'); // fallback\n//       } else {\n//         setError(res.data?.message || 'Invalid credentials.');\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       const msg = err.response?.data?.message || 'Server error. Try again later.';\n//       setError(msg);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Email\"\n//             value={form.email}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//             value={form.password}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         {error && <div className=\"error\">{error}</div>}\n//         <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n//           {loading ? 'Logging in...' : 'Login'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleChange = e => setForm({\n    ...form,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      var _res$data;\n      // Call backend login endpoint for ALL users (including admin)\n      const res = await api.post('/auth/login', form);\n      if ((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.token) {\n        const user = {\n          email: res.data.email,\n          role: res.data.role.toUpperCase(),\n          token: res.data.token\n        };\n        localStorage.setItem('loggedInUser', JSON.stringify(user));\n        if (user.role === 'ADMIN') navigate('/admin/');else if (user.role === 'DOCTOR') navigate('/doctor/');else if (user.role === 'PATIENT') navigate('/patient/');else navigate('/'); // fallback\n      } else {\n        var _res$data2;\n        setError(((_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.message) || 'Invalid credentials.');\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      const msg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Server error. Try again later.';\n      setError(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          value: form.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: form.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading,\n        children: loading ? 'Logging in...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"7gVpDrpZ/kyTIF6Esj7dZ2xtbow=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","api","jsxDEV","_jsxDEV","Login","_s","navigate","form","setForm","email","password","error","setError","loading","setLoading","handleChange","e","target","name","value","handleSubmit","preventDefault","_res$data","res","post","data","token","user","role","toUpperCase","localStorage","setItem","JSON","stringify","_res$data2","message","err","_err$response","_err$response$data","console","msg","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const [form, setForm] = useState({ email: '', password: '', role: 'patient' });\n//   const navigate = useNavigate();\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const res = await api.post('/auth/login', form);\n//       localStorage.setItem('token', res.data.token);\n//       localStorage.setItem('role', form.role);\n//       navigate(`/${form.role}`);\n//     } catch (err) {\n//       alert('Login failed');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <select name=\"role\" value={form.role} onChange={handleChange}>\n//             <option value=\"admin\">Admin</option>\n//             <option value=\"doctor\">Doctor</option>\n//             <option value=\"patient\">Patient</option>\n//           </select>\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={handleChange} required />\n//         </div>\n//         <div className=\"form-group\">\n//           <input type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={handleChange} required />\n//         </div>\n//         <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import api from '../services/api';\n\n// const Login = () => {\n//   const navigate = useNavigate();\n//   const [form, setForm] = useState({ email: '', password: '' });\n//   const [error, setError] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError('');\n//     setLoading(true);\n\n//     try {\n//       // Hardcoded admin login\n//       if (form.email === 'admin@hms.com' && form.password === 'admin123') {\n//         const adminUser = {\n//           email: 'admin@hms.com',\n//           role: 'ADMIN',\n//           token: 'admin-token', // dummy token\n//         };\n//         localStorage.setItem('loggedInUser', JSON.stringify(adminUser));\n//         navigate('/admin/');\n//         setLoading(false);\n//         return;\n//       }\n\n//       // Normal login for doctor/patient\n//       const res = await api.post('/auth/login', form);\n\n//       if (res.data?.token) {\n//         const user = {\n//           email: form.email,\n//           role: res.data.role.toUpperCase(), // backend must return role\n//           token: res.data.token,\n//         };\n//         localStorage.setItem('loggedInUser', JSON.stringify(user));\n\n//         if (user.role === 'DOCTOR') navigate('/doctor/');\n//         else if (user.role === 'PATIENT') navigate('/patient/');\n//         else navigate('/'); // fallback\n//       } else {\n//         setError(res.data?.message || 'Invalid credentials.');\n//       }\n//     } catch (err) {\n//       console.error(err);\n//       const msg = err.response?.data?.message || 'Server error. Try again later.';\n//       setError(msg);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       <form onSubmit={handleSubmit} className=\"card\">\n//         <div className=\"form-group\">\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             placeholder=\"Email\"\n//             value={form.email}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         <div className=\"form-group\">\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"Password\"\n//             value={form.password}\n//             onChange={handleChange}\n//             required\n//           />\n//         </div>\n//         {error && <div className=\"error\">{error}</div>}\n//         <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n//           {loading ? 'Logging in...' : 'Login'}\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Login;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [form, setForm] = useState({ email: '', password: '' });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      // Call backend login endpoint for ALL users (including admin)\n      const res = await api.post('/auth/login', form);\n\n      if (res.data?.token) {\n        const user = {\n          email: res.data.email,\n          role: res.data.role.toUpperCase(),\n          token: res.data.token,\n        };\n        localStorage.setItem('loggedInUser', JSON.stringify(user));\n\n        if (user.role === 'ADMIN') navigate('/admin/');\n        else if (user.role === 'DOCTOR') navigate('/doctor/');\n        else if (user.role === 'PATIENT') navigate('/patient/');\n        else navigate('/'); // fallback\n      } else {\n        setError(res.data?.message || 'Invalid credentials.');\n      }\n    } catch (err) {\n      console.error(err);\n      const msg = err.response?.data?.message || 'Server error. Try again later.';\n      setError(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit} className=\"card\">\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={form.email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={form.password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        {error && <div className=\"error\">{error}</div>}\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\n          {loading ? 'Logging in...' : 'Login'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n\n\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC;IAAEU,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMgB,YAAY,GAAIC,CAAC,IAAKR,OAAO,CAAC;IAAE,GAAGD,IAAI;IAAE,CAACS,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;EAAM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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}