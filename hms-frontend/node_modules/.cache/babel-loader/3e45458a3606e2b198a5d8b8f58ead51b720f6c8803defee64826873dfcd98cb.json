{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharu\\\\Downloads\\\\hms-frontend (3)\\\\src\\\\pages\\\\Patient\\\\ViewAppointments.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Table from '../../components/Table';\n\n// const ViewAppointments = () => {\n//   const [appointments, setAppointments] = useState([]);\n\n//   useEffect(() => {\n//     api.get('/patient/appointments').then(res => setAppointments(res.data));\n//   }, []);\n\n//   const actions = (appt) => (\n//     <button className=\"btn btn-danger\" onClick={() => api.delete(`/patient/appointments/${appt.id}`).then(() => setAppointments(appointments.filter(a => a.id !== appt.id)))}>Delete</button>\n//   );\n\n//   return (\n//     <div>\n//       <h2>My Appointments</h2>\n//       <Table headers={['Doctor', 'Date', 'Status']} data={appointments} actions={actions} />\n//     </div>\n//   );\n// };\n\n// export default ViewAppointments;\n// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Table from '../../components/Table';\n\n// const ViewAppointments = () => {\n//   const [appointments, setAppointments] = useState([]);\n\n//   useEffect(() => {\n//     api.get('/patient/appointments').then(res => setAppointments(res.data));\n//   }, []);\n\n//   const actions = (appt) => (\n//     <>\n//       {appt.status === 'pending' && (\n//         <button\n//           style={styles.button}\n//           onClick={() => api.post(`/patient/appointments/${appt.id}/pay`).then(() => {\n//             alert('Payment successful');\n//             setAppointments(appointments.map(a => a.id === appt.id ? { ...a, status: 'paid' } : a));\n//           })}\n//         >\n//           Pay\n//         </button>\n//       )}\n//       <button\n//         style={{ ...styles.button, background: '#ef4444' }}\n//         onClick={() => api.delete(`/patient/appointments/${appt.id}`).then(() => setAppointments(appointments.filter(a => a.id !== appt.id)))}\n//       >\n//         Delete\n//       </button>\n//     </>\n//   );\n\n//   return (\n//     <div style={{ padding: 30 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>My Appointments</h2>\n//       <Table\n//         headers={['Doctor', 'Date', 'Time', 'Purpose', 'Symptoms', 'Status']}\n//         data={appointments}\n//         actions={actions}\n//       />\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   button: { padding: '6px 12px', marginRight: 8, borderRadius: 6, border: 'none', cursor: 'pointer', background: '#0077b6', color: '#fff' },\n// };\n\n// export default ViewAppointments;\n\n// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Table from '../../components/Table';\n\n// const ViewAppointments = ({ patientId }) => {\n//   const [appointments, setAppointments] = useState([]);\n\n//   useEffect(() => {\n//     api.get(`/patient/appointments?patientId=${patientId}`).then(res => setAppointments(res.data));\n//   }, [patientId]);\n\n//   const actions = (appt) => (\n//     <>\n//       {appt.status === 'pending' && (\n//         <button\n//           style={styles.button}\n//           onClick={() => api.post(`/patient/appointments/${appt.id}/pay`).then(() => {\n//             alert('Payment successful');\n//             setAppointments(appointments.map(a => a.id === appt.id ? { ...a, status: 'paid' } : a));\n//           })}\n//         >\n//           Pay\n//         </button>\n//       )}\n//       <button\n//         style={{ ...styles.button, background: '#ef4444' }}\n//         onClick={() => api.delete(`/patient/appointments/${appt.id}`).then(() => setAppointments(appointments.filter(a => a.id !== appt.id)))}\n//       >\n//         Delete\n//       </button>\n//     </>\n//   );\n\n//   return (\n//     <div style={{ padding: 30 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>My Appointments</h2>\n//       <Table\n//         headers={['Doctor', 'Date', 'Time', 'Purpose', 'Symptoms', 'Status']}\n//         data={appointments}\n//         actions={actions}\n//       />\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   button: { padding: '6px 12px', marginRight: 8, borderRadius: 6, border: 'none', cursor: 'pointer', background: '#0077b6', color: '#fff' },\n// };\n\n// export default ViewAppointments;\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Table from '../../components/Table';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewAppointments = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const patientId = JSON.parse(localStorage.getItem('user')).id;\n  useEffect(() => {\n    api.get(`/patient/appointments?patientId=${patientId}`).then(res => setAppointments(res.data));\n  }, [patientId]);\n  const handlePay = async appt => {\n    try {\n      // Create Razorpay order\n      const res = await api.post(`/patient/appointments/${appt.id}/create-order`);\n      const {\n        id: order_id,\n        amount,\n        currency\n      } = JSON.parse(res.data);\n      const options = {\n        key: \"YOUR_KEY_ID\",\n        amount: amount,\n        currency: currency,\n        name: \"Hospital Management System\",\n        description: \"Appointment Payment\",\n        order_id: order_id,\n        handler: async function (response) {\n          await api.post(`/patient/appointments/${appt.id}/pay`, response);\n          alert(\"Payment Successful!\");\n          setAppointments(appointments.map(a => a.id === appt.id ? {\n            ...a,\n            status: 'paid'\n          } : a));\n        },\n        prefill: {\n          name: JSON.parse(localStorage.getItem('user')).name,\n          email: JSON.parse(localStorage.getItem('user')).email\n        },\n        theme: {\n          color: \"#0077b6\"\n        }\n      };\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (err) {\n      console.error(err);\n      alert(\"Payment failed. Try again.\");\n    }\n  };\n  const actions = appt => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [appt.status === 'pending' && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: () => handlePay(appt),\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        ...styles.button,\n        background: '#ef4444'\n      },\n      onClick: () => api.delete(`/patient/appointments/${appt.id}`).then(() => setAppointments(appointments.filter(a => a.id !== appt.id))),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#0077b6',\n        marginBottom: 20\n      },\n      children: \"My Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      headers: ['Doctor', 'Date', 'Time', 'Purpose', 'Symptoms', 'Status'],\n      data: appointments,\n      actions: actions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewAppointments, \"MfWojYlbX9MgZ4Hbt1nSvX/pcQY=\");\n_c = ViewAppointments;\nconst styles = {\n  button: {\n    padding: '6px 12px',\n    marginRight: 8,\n    borderRadius: 6,\n    border: 'none',\n    cursor: 'pointer',\n    background: '#0077b6',\n    color: '#fff'\n  }\n};\nexport default ViewAppointments;\nvar _c;\n$RefreshReg$(_c, \"ViewAppointments\");","map":{"version":3,"names":["React","useEffect","useState","api","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewAppointments","_s","appointments","setAppointments","patientId","JSON","parse","localStorage","getItem","id","get","then","res","data","handlePay","appt","post","order_id","amount","currency","options","key","name","description","handler","response","alert","map","a","status","prefill","email","theme","color","rzp","window","Razorpay","open","err","console","error","actions","children","style","styles","button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","background","delete","filter","padding","marginBottom","headers","_c","marginRight","borderRadius","border","cursor","$RefreshReg$"],"sources":["C:/Users/Tharu/Downloads/hms-frontend (3)/src/pages/Patient/ViewAppointments.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Table from '../../components/Table';\n\n// const ViewAppointments = () => {\n//   const [appointments, setAppointments] = useState([]);\n\n//   useEffect(() => {\n//     api.get('/patient/appointments').then(res => setAppointments(res.data));\n//   }, []);\n\n//   const actions = (appt) => (\n//     <button className=\"btn btn-danger\" onClick={() => api.delete(`/patient/appointments/${appt.id}`).then(() => setAppointments(appointments.filter(a => a.id !== appt.id)))}>Delete</button>\n//   );\n\n//   return (\n//     <div>\n//       <h2>My Appointments</h2>\n//       <Table headers={['Doctor', 'Date', 'Status']} data={appointments} actions={actions} />\n//     </div>\n//   );\n// };\n\n// export default ViewAppointments;\n// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Table from '../../components/Table';\n\n// const ViewAppointments = () => {\n//   const [appointments, setAppointments] = useState([]);\n\n//   useEffect(() => {\n//     api.get('/patient/appointments').then(res => setAppointments(res.data));\n//   }, []);\n\n//   const actions = (appt) => (\n//     <>\n//       {appt.status === 'pending' && (\n//         <button\n//           style={styles.button}\n//           onClick={() => api.post(`/patient/appointments/${appt.id}/pay`).then(() => {\n//             alert('Payment successful');\n//             setAppointments(appointments.map(a => a.id === appt.id ? { ...a, status: 'paid' } : a));\n//           })}\n//         >\n//           Pay\n//         </button>\n//       )}\n//       <button\n//         style={{ ...styles.button, background: '#ef4444' }}\n//         onClick={() => api.delete(`/patient/appointments/${appt.id}`).then(() => setAppointments(appointments.filter(a => a.id !== appt.id)))}\n//       >\n//         Delete\n//       </button>\n//     </>\n//   );\n\n//   return (\n//     <div style={{ padding: 30 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>My Appointments</h2>\n//       <Table\n//         headers={['Doctor', 'Date', 'Time', 'Purpose', 'Symptoms', 'Status']}\n//         data={appointments}\n//         actions={actions}\n//       />\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   button: { padding: '6px 12px', marginRight: 8, borderRadius: 6, border: 'none', cursor: 'pointer', background: '#0077b6', color: '#fff' },\n// };\n\n// export default ViewAppointments;\n\n// import React, { useEffect, useState } from 'react';\n// import api from '../../services/api';\n// import Table from '../../components/Table';\n\n// const ViewAppointments = ({ patientId }) => {\n//   const [appointments, setAppointments] = useState([]);\n\n//   useEffect(() => {\n//     api.get(`/patient/appointments?patientId=${patientId}`).then(res => setAppointments(res.data));\n//   }, [patientId]);\n\n//   const actions = (appt) => (\n//     <>\n//       {appt.status === 'pending' && (\n//         <button\n//           style={styles.button}\n//           onClick={() => api.post(`/patient/appointments/${appt.id}/pay`).then(() => {\n//             alert('Payment successful');\n//             setAppointments(appointments.map(a => a.id === appt.id ? { ...a, status: 'paid' } : a));\n//           })}\n//         >\n//           Pay\n//         </button>\n//       )}\n//       <button\n//         style={{ ...styles.button, background: '#ef4444' }}\n//         onClick={() => api.delete(`/patient/appointments/${appt.id}`).then(() => setAppointments(appointments.filter(a => a.id !== appt.id)))}\n//       >\n//         Delete\n//       </button>\n//     </>\n//   );\n\n//   return (\n//     <div style={{ padding: 30 }}>\n//       <h2 style={{ color: '#0077b6', marginBottom: 20 }}>My Appointments</h2>\n//       <Table\n//         headers={['Doctor', 'Date', 'Time', 'Purpose', 'Symptoms', 'Status']}\n//         data={appointments}\n//         actions={actions}\n//       />\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   button: { padding: '6px 12px', marginRight: 8, borderRadius: 6, border: 'none', cursor: 'pointer', background: '#0077b6', color: '#fff' },\n// };\n\n// export default ViewAppointments;\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport Table from '../../components/Table';\n\nconst ViewAppointments = () => {\n  const [appointments, setAppointments] = useState([]);\n  const patientId = JSON.parse(localStorage.getItem('user')).id;\n\n  useEffect(() => {\n    api.get(`/patient/appointments?patientId=${patientId}`).then(res => setAppointments(res.data));\n  }, [patientId]);\n\n  const handlePay = async (appt) => {\n    try {\n      // Create Razorpay order\n      const res = await api.post(`/patient/appointments/${appt.id}/create-order`);\n      const { id: order_id, amount, currency } = JSON.parse(res.data);\n\n      const options = {\n        key: \"YOUR_KEY_ID\",\n        amount: amount,\n        currency: currency,\n        name: \"Hospital Management System\",\n        description: \"Appointment Payment\",\n        order_id: order_id,\n        handler: async function (response) {\n          await api.post(`/patient/appointments/${appt.id}/pay`, response);\n          alert(\"Payment Successful!\");\n          setAppointments(appointments.map(a => a.id === appt.id ? { ...a, status: 'paid' } : a));\n        },\n        prefill: {\n          name: JSON.parse(localStorage.getItem('user')).name,\n          email: JSON.parse(localStorage.getItem('user')).email,\n        },\n        theme: { color: \"#0077b6\" },\n      };\n\n      const rzp = new window.Razorpay(options);\n      rzp.open();\n    } catch (err) {\n      console.error(err);\n      alert(\"Payment failed. Try again.\");\n    }\n  };\n\n  const actions = (appt) => (\n    <>\n      {appt.status === 'pending' && <button style={styles.button} onClick={() => handlePay(appt)}>Pay Now</button>}\n      <button style={{ ...styles.button, background: '#ef4444' }} onClick={() => api.delete(`/patient/appointments/${appt.id}`).then(() => setAppointments(appointments.filter(a => a.id !== appt.id)))}>\n        Delete\n      </button>\n    </>\n  );\n\n  return (\n    <div style={{ padding: 30 }}>\n      <h2 style={{ color: '#0077b6', marginBottom: 20 }}>My Appointments</h2>\n      <Table\n        headers={['Doctor', 'Date', 'Time', 'Purpose', 'Symptoms', 'Status']}\n        data={appointments}\n        actions={actions}\n      />\n    </div>\n  );\n};\n\nconst styles = {\n  button: { padding: '6px 12px', marginRight: 8, borderRadius: 6, border: 'none', cursor: 'pointer', background: '#0077b6', color: '#fff' },\n};\n\nexport default ViewAppointments;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}